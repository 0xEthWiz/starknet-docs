antoraSearch.initSearch(lunr, {"index":{"version":"2.3.9","fields":["title","name","text","component"],"fieldVectors":[["title/1",[0,58.861,1,47.875]],["name/1",[2,1.918]],["text/1",[]],["component/1",[3,0.487]],["title/2",[4,22.225,5,44.198]],["name/2",[5,1.44]],["text/2",[]],["component/2",[3,0.487]],["title/3",[6,24.718,7,26.023,8,32.711]],["name/3",[9,1.918]],["text/3",[]],["component/3",[3,0.487]],["title/4",[10,55.563]],["name/4",[11,1.317]],["text/4",[4,1.869,12,2.507,13,4.237,14,4.237,15,2.75,16,5.825,17,3.313,18,4.025,19,3.842,20,2.884,21,2.75,22,2.837,23,3.237,24,2.75,25,3.491,26,4.52,27,3.716,28,4.237,29,6.54,30,2.535,31,2.986,32,4.52,33,3.596,34,4.237,35,3.596,36,4.237,37,2.986,38,4.949,39,4.949,40,4.949,41,4.52,42,3.166,43,2.601,44,3.237,45,3.397,46,3.166,47,2.009,48,2.933,49,2.338,50,2.221,51,3.166,52,4.949,53,4.949,54,3.491]],["component/4",[3,0.487]],["title/5",[12,14.558,55,30.625,56,32.711]],["name/5",[55,0.665,56,0.71]],["text/5",[]],["component/5",[3,0.487]],["title/6",[57,60.186]],["name/6",[11,1.317]],["text/6",[]],["component/6",[3,0.487]],["title/7-1",[5,31.366,58,26.725,59,27.963,60,18.742]],["name/7-1",[]],["text/7-1",[]],["component/7-1",[]],["title/7-2",[12,12.445,22,23.943,61,22.877,62,26.179]],["name/7-2",[]],["text/7-2",[]],["component/7-2",[]],["title/7-3",[61,26.761,63,35.504,64,38.079]],["name/7-3",[]],["text/7-3",[]],["component/7-3",[]],["title/7-4",[12,17.536,65,28.103]],["name/7-4",[]],["text/7-4",[]],["component/7-4",[]],["title/7-5",[12,17.536,66,32.235]],["name/7-5",[]],["text/7-5",[]],["component/7-5",[]],["title/7-6",[12,17.536,49,27.8]],["name/7-6",[]],["text/7-6",[]],["component/7-6",[]],["title/7-7",[12,17.536,67,41.515]],["name/7-7",[]],["text/7-7",[]],["component/7-7",[]],["title/7-8",[12,17.536,68,50.388]],["name/7-8",[]],["text/7-8",[]],["component/7-8",[]],["title/7-9",[12,17.536,69,53.753]],["name/7-9",[]],["text/7-9",[]],["component/7-9",[]],["title/7-10",[12,17.536,70,53.753]],["name/7-10",[]],["text/7-10",[]],["component/7-10",[]],["title/7-11",[12,17.536,71,53.753]],["name/7-11",[]],["text/7-11",[]],["component/7-11",[]],["title/7-12",[12,17.536,72,53.753]],["name/7-12",[]],["text/7-12",[]],["component/7-12",[]],["title/7-13",[12,17.536,73,53.753]],["name/7-13",[]],["text/7-13",[]],["component/7-13",[]],["title/7-14",[12,17.536,74,53.753]],["name/7-14",[]],["text/7-14",[]],["component/7-14",[]],["title/7-15",[12,17.536,75,34.882]],["name/7-15",[]],["text/7-15",[]],["component/7-15",[]],["title/7-16",[12,17.536,76,53.753]],["name/7-16",[]],["text/7-16",[]],["component/7-16",[]],["title/7",[58,47.342]],["name/7",[58,1.227]],["text/7",[4,2.373,6,0.746,12,2.288,19,1.833,20,1.104,21,0.82,22,1.896,25,0.375,30,0.273,31,0.617,35,0.387,43,0.537,47,0.216,49,1.08,50,3.117,51,0.944,56,0.988,58,3.108,59,0.988,60,0.239,61,2.776,62,2.073,63,1.377,64,2.065,65,3.135,66,0.56,67,1.041,68,0.456,69,0.486,70,0.486,71,0.934,72,0.486,73,0.486,74,0.486,75,0.875,76,0.934,77,2.214,78,1.188,79,0.486,80,0.532,81,0.415,82,1.542,83,2.969,84,2.108,85,0.341,86,0.511,87,0.375,88,0.53,89,2.001,90,0.305,91,0.415,92,0.3,93,1.869,94,3.015,95,1.213,96,0.654,97,1.234,98,1.213,99,0.702,100,0.552,101,1.309,102,0.4,103,0.334,104,1.023,105,1.2,106,0.456,107,0.685,108,0.433,109,2.329,110,1.013,111,1.023,112,0.702,113,1.023,114,0.669,115,1.2,116,1.477,117,0.532,118,1.731,119,1.023,120,0.532,121,1.023,122,1.65,123,2.344,124,0.596,125,1.786,126,0.86,127,2.371,128,1.835,129,2.475,130,3.549,131,2.244,132,1.104,133,2.244,134,1.695,135,0.4,136,0.283,137,3.015,138,2.7,139,1.301,140,2.927,141,1.896,142,2.214,143,2.244,144,2.001,145,1.837,146,1.896,147,1.838,148,1.837,149,2.087,150,2.286,151,1.76,152,2.544,153,2.155,154,0.875,155,1.612,156,1.188,157,2.333,158,1.332,159,2.649,160,1.023,161,0.617,162,0.586,163,0.669,164,0.907,165,1.476,166,1.2,167,0.875,168,0.996,169,2.606,170,1.263,171,0.702,172,0.965,173,0.617,174,1.108,175,0.532,176,0.532,177,0.26,178,0.532,179,0.486,180,1.57,181,1.023,182,0.552,183,0.743,184,1.423,185,0.486,186,0.486,187,0.486,188,0.348,189,1.023,190,0.433,191,0.875,192,0.532,193,1.771,194,0.356,195,0.305,196,0.433,197,0.415,198,0.628,199,0.532,200,0.486,201,0.775,202,0.532,203,0.486,204,0.743,205,0.348,206,0.532,207,1.023,208,0.875,209,1.2,210,1.519,211,0.305,212,0.4,213,0.486,214,0.832,215,0.433,216,0.617,217,1.472,218,0.365,219,0.375,220,0.348,221,0.456,222,0.365,223,0.31,224,0.415,225,0.486,226,0.532,227,0.486,228,0.456,229,0.532,230,0.532,231,0.456,232,0.433,233,0.486,234,0.532,235,0.532,236,0.456,237,0.334,238,0.415,239,0.4,240,0.768,241,0.832,242,0.797,243,0.738,244,1.013,245,0.433,246,0.356,247,0.433,248,0.641,249,2.927,250,0.532,251,0.315,252,0.4,253,0.532,254,0.486,255,0.456,256,0.685,257,1.348,258,0.4,259,0.341,260,0.433,261,1.781,262,0.685,263,0.415,264,0.375,265,0.26,266,0.486,267,0.321,268,0.375,269,1.023,270,0.327,271,0.415,272,0.486,273,0.586,274,0.321,275,0.797,276,0.486,277,0.292,278,0.486,279,0.433,280,0.486,281,0.456,282,0.4,283,0.415,284,0.486,285,0.387,286,0.486]],["component/7",[3,0.487]],["title/8",[77,39.402,81,45.868]],["name/8",[81,1.495]],["text/8",[3,2.072,12,3.251,48,4.642,50,2.519,58,3.592,59,3.758,77,6.534,78,3.518,81,7.029,287,2.95,288,3.518,289,5.127,290,4.566,291,3.758,292,7.153,293,3.758,294,5.614,295,5.614,296,3.853,297,4.566,298,4.806,299,5.614,300,3.671,301,2.806,302,4.566,303,3.853]],["component/8",[3,0.487]],["title/9-1",[304,60.186]],["name/9-1",[]],["text/9-1",[]],["component/9-1",[]],["title/9-2",[101,36.547]],["name/9-2",[]],["text/9-2",[]],["component/9-2",[]],["title/9-3",[305,34.949]],["name/9-3",[]],["text/9-3",[]],["component/9-3",[]],["title/9-4",[138,25.903,306,58.861]],["name/9-4",[]],["text/9-4",[]],["component/9-4",[]],["title/9-5",[144,49.534]],["name/9-5",[]],["text/9-5",[]],["component/9-5",[]],["title/9-6",[89,39.402,138,25.903]],["name/9-6",[]],["text/9-6",[]],["component/9-6",[]],["title/9-7",[307,38.492,308,50.388]],["name/9-7",[]],["text/9-7",[]],["component/9-7",[]],["title/9-8",[123,48.823]],["name/9-8",[]],["text/9-8",[]],["component/9-8",[]],["title/9-9",[309,67.575]],["name/9-9",[]],["text/9-9",[]],["component/9-9",[]],["title/9-10",[310,67.575]],["name/9-10",[]],["text/9-10",[]],["component/9-10",[]],["title/9-11",[311,63.345]],["name/9-11",[]],["text/9-11",[]],["component/9-11",[]],["title/9-12",[312,47.875,313,28.416]],["name/9-12",[]],["text/9-12",[]],["component/9-12",[]],["title/9-13",[314,73.91]],["name/9-13",[]],["text/9-13",[]],["component/9-13",[]],["title/9-14",[315,73.91]],["name/9-14",[]],["text/9-14",[]],["component/9-14",[]],["title/9-15",[316,67.575]],["name/9-15",[]],["text/9-15",[]],["component/9-15",[]],["title/9-16",[317,50.722]],["name/9-16",[]],["text/9-16",[]],["component/9-16",[]],["title/9-17",[318,63.345]],["name/9-17",[]],["text/9-17",[]],["component/9-17",[]],["title/9-18",[319,67.575]],["name/9-18",[]],["text/9-18",[]],["component/9-18",[]],["title/9-19",[320,73.91]],["name/9-19",[]],["text/9-19",[]],["component/9-19",[]],["title/9-20",[321,67.575]],["name/9-20",[]],["text/9-20",[]],["component/9-20",[]],["title/9",[12,12.445,56,27.963,89,27.963,181,22.554]],["name/9",[12,0.219,89,0.491,181,0.396]],["text/9",[4,2.631,12,1.9,15,1.17,19,4.244,47,0.854,50,0.944,58,2.317,59,1.409,62,1.319,82,1.712,83,2.251,86,1.052,95,1.347,100,1.955,101,1.039,107,1.409,123,3.847,128,0.994,138,0.926,142,2.424,144,5.721,145,1.293,147,2.012,148,2.928,158,1.226,161,1.27,169,1.005,177,2.326,180,2.146,181,4.446,182,1.136,190,1.712,211,1.206,228,1.802,232,3.876,251,1.247,272,3.307,273,3.244,277,1.153,293,1.409,300,1.376,301,1.052,307,1.376,308,4.079,309,1.922,310,1.922,311,1.802,312,1.712,313,1.016,314,3.307,315,4.351,316,3.307,317,4.675,318,1.802,319,1.922,320,3.307,321,1.922,322,1.484,323,1.64,324,1.802,325,3.307,326,1.247,327,3.307,328,1.922,329,3.307,330,1.922,331,3.1,332,3.307,333,4.351,334,2.631,335,1.64,336,2.554,337,2.105,338,1.712,339,1.922,340,2.105,341,1.802,342,2.105,343,1.376,344,2.105,345,1.409,346,1.922,347,1.319,348,1.529,349,1.17,350,1.64,351,1.005,352,1.802,353,2.105,354,1.121,355,1.347,356,1.64,357,2.105,358,1.802,359,1.922,360,2.719,361,1.484,362,2.105,363,2.105,364,1.58]],["component/9",[3,0.487]],["title/10",[365,44.198,366,50.388]],["name/10",[365,0.797,366,0.909]],["text/10",[4,2.168,12,2.37,45,3.942,163,3.755,182,3.1,198,3.529,233,5.244,239,4.312,243,2.87,279,4.671,287,3.017,349,3.191,355,5.09,365,5.974,366,6.811,367,4.172,368,4.475,369,5.742,370,4.671,371,5.244,372,3.755,373,4.916,374,4.475,375,3.755,376,5.244,377,4.671,378,5.244,379,5.742,380,3.464,381,5.742,382,5.742,383,4.05,384,5.742]],["component/10",[3,0.487]],["title/11",[367,42.767,385,36.174]],["name/11",[367,0.771,385,0.652]],["text/11",[12,1.474,44,4.683,47,3.744,83,2.338,367,7.11,385,3.042,386,8.422,387,9.316,388,9.222,389,6.829,390,7.161,391,7.161,392,4.237,393,4.52,394,8.415,395,8.415,396,4.949,397,4.949,398,4.949,399,4.949,400,4.949]],["component/11",[3,0.487]],["title/12",[12,12.445,182,22.554,401,38.147,402,35.759]],["name/12",[402,1.642]],["text/12",[]],["component/12",[3,0.487]],["title/13-1",[61,22.877,167,24.755,217,23.215,403,27.963]],["name/13-1",[]],["text/13-1",[]],["component/13-1",[]],["title/13-2",[61,22.877,62,26.179,95,26.725,167,24.755]],["name/13-2",[]],["text/13-2",[]],["component/13-2",[]],["title/13-3",[61,26.761,167,28.959,169,23.331]],["name/13-3",[]],["text/13-3",[]],["component/13-3",[]],["title/13-4",[4,18.451,181,26.384,404,31.956]],["name/13-4",[]],["text/13-4",[]],["component/13-4",[]],["title/13-5",[4,18.451,66,26.761,177,23.858]],["name/13-5",[]],["text/13-5",[]],["component/13-5",[]],["title/13-6",[4,22.225,49,27.8]],["name/13-6",[]],["text/13-6",[]],["component/13-6",[]],["title/13-7",[4,22.225,110,40.403]],["name/13-7",[]],["text/13-7",[]],["component/13-7",[]],["title/13",[4,18.451,12,14.558,49,23.079]],["name/13",[405,1.918]],["text/13",[3,0.291,4,2.976,12,2.178,19,3.336,22,1.208,30,0.404,43,0.414,46,0.504,47,1.082,49,2.91,50,2.285,55,0.494,56,0.528,58,2.586,60,0.354,61,1.986,62,0.494,63,1.08,65,0.376,66,2.214,67,1.048,75,2.395,77,2.122,83,1.497,88,0.409,91,0.614,92,1.19,93,1.048,99,0.541,103,0.931,105,2.169,106,0.675,107,0.528,110,1.447,122,0.361,124,2.355,125,2.901,127,2.159,128,1.497,129,0.541,132,0.459,133,0.592,136,0.42,138,0.347,142,0.995,144,1.785,147,1.172,151,1.714,156,0.931,167,0.881,168,1.905,169,3.241,171,0.541,172,0.972,174,2.002,177,1.302,180,0.881,181,2.182,182,2.576,195,0.452,201,0.414,203,2.895,210,0.452,211,0.852,215,0.641,217,0.438,218,1.02,221,0.675,231,0.675,232,1.715,248,0.494,251,0.467,265,0.385,267,0.476,270,0.484,274,1.608,276,0.72,277,0.814,285,1.532,296,0.541,301,1.333,303,0.541,313,1.018,317,0.494,322,0.556,324,1.805,326,0.467,334,0.573,347,0.494,354,1.42,356,0.614,358,0.675,359,0.72,372,1.379,374,0.614,380,2.438,383,0.556,403,0.528,404,2.643,406,1.805,407,0.881,408,0.913,409,0.788,410,0.788,411,0.675,412,0.432,413,0.72,414,2.714,415,0.788,416,0.788,417,0.641,418,0.951,419,0.931,420,0.592,421,0.72,422,0.504,423,0.788,424,0.459,425,0.381,426,0.641,427,0.788,428,0.72,429,0.72,430,0.72,431,0.541,432,2.851,433,0.494,434,0.494,435,1.02,436,0.528,437,0.592,438,0.641,439,1.116,440,0.541,441,0.541,442,0.592,443,0.72,444,2.435,445,0.788,446,0.675,447,0.614,448,0.788,449,0.614,450,0.788,451,1.715,452,0.72,453,0.556,454,0.494,455,0.556,456,0.72,457,0.556,458,0.592,459,0.72,460,1.744,461,1.715,462,0.675,463,1.158,464,0.675,465,0.675,466,0.675,467,2.666,468,2.38,469,0.788,470,1.881,471,0.788,472,2.435,473,1.744,474,0.788,475,0.788,476,1.272,477,0.675,478,0.72,479,0.573,480,0.484,481,0.788,482,0.614,483,0.788,484,0.504,485,3.626,486,1.486,487,1.357,488,2.108,489,0.788,490,0.72,491,0.72,492,0.788,493,0.675,494,0.788,495,0.788,496,0.72,497,1.172,498,2.002,499,2.108,500,1.486,501,1.486,502,0.995,503,3.17,504,1.486,505,1.486,506,1.158,507,0.476,508,0.592,509,0.573,510,0.788,511,2.108,512,0.641,513,1.02,514,0.528,515,0.72,516,0.556,517,0.72,518,0.788,519,0.788,520,0.788,521,1.486,522,0.788,523,0.641,524,0.972,525,0.556,526,0.573,527,0.788,528,0.573,529,0.614,530,0.541,531,0.445,532,0.788,533,0.788,534,2.108,535,0.788,536,0.614,537,0.788,538,0.476,539,0.476,540,0.788,541,0.788,542,0.788,543,0.573,544,0.614,545,0.788,546,0.788,547,0.788,548,0.788]],["component/13",[3,0.487]],["title/14-1",[10,55.563]],["name/14-1",[]],["text/14-1",[]],["component/14-1",[]],["title/14-2",[22,28.009,61,26.761,167,28.959]],["name/14-2",[]],["text/14-2",[]],["component/14-2",[]],["title/14-3",[133,36.692,186,44.625,217,27.157]],["name/14-3",[]],["text/14-3",[]],["component/14-3",[]],["title/14-4",[169,28.103,404,38.492]],["name/14-4",[]],["text/14-4",[]],["component/14-4",[]],["title/14-5",[99,28.673,169,19.944,470,29.462,549,27.317]],["name/14-5",[]],["text/14-5",[]],["component/14-5",[]],["title/14-6",[49,23.079,169,23.331,550,41.832]],["name/14-6",[]],["text/14-6",[]],["component/14-6",[]],["title/14-7",[49,27.8,169,28.103]],["name/14-7",[]],["text/14-7",[]],["component/14-7",[]],["title/14",[12,12.445,61,22.877,167,24.755,169,19.944]],["name/14",[551,1.918]],["text/14",[4,1.796,12,2.95,19,1.711,21,0.749,22,1.399,24,0.749,30,1.713,31,0.813,49,3.286,50,2.605,51,0.862,54,0.95,58,3.715,59,0.902,61,2.605,62,2.574,67,2.897,68,1.153,75,0.798,77,1.634,83,2.945,84,0.95,86,0.673,88,1.266,90,0.772,91,1.902,92,1.888,95,2.14,97,0.556,99,2.296,103,1.53,105,3.341,106,1.153,110,2.296,124,0.785,125,2.532,127,1.633,132,1.422,138,0.593,151,0.571,152,0.65,164,0.828,167,0.798,168,1.282,169,4.804,174,1.012,195,0.772,201,2.499,210,0.772,211,0.772,215,1.096,218,0.925,219,0.95,221,1.153,240,2.512,243,0.673,267,0.813,268,0.95,270,1.5,274,0.813,279,1.096,285,0.979,288,0.844,304,1.096,313,1.178,317,2.574,334,0.979,348,0.979,349,0.749,350,1.05,354,1.3,375,0.881,385,1.5,404,2.188,406,1.153,408,1.5,418,2.628,424,0.785,429,1.23,430,1.23,431,0.925,432,2.36,438,1.096,441,0.925,446,1.153,447,1.05,449,1.05,451,1.096,452,1.23,453,1.721,454,1.53,456,1.23,457,0.95,458,1.012,462,1.153,464,1.153,465,1.153,468,1.012,470,3.75,472,3.055,473,0.881,479,0.979,480,2.056,530,1.675,536,1.05,543,0.979,549,1.596,550,1.153,552,2.431,553,1.23,554,1.347,555,1.096,556,1.833,557,1.05,558,2.229,559,1.05,560,1.05,561,1.096,562,1.347,563,1.347,564,1.096,565,1.347,566,1.596,567,3.346,568,1.347,569,1.347,570,0.979,571,1.53,572,1.012,573,1.347,574,1.347,575,1.153,576,0.979,577,1.347,578,1.096,579,1.347,580,1.902,581,0.979,582,1.347,583,1.347,584,1.347,585,1.347,586,1.153,587,1.153,588,1.23,589,1.347,590,1.347,591,1.347,592,1.347]],["component/14",[3,0.487]],["title/15-1",[593,67.575]],["name/15-1",[]],["text/15-1",[]],["component/15-1",[]],["title/15-2",[322,41.515,594,53.753]],["name/15-2",[]],["text/15-2",[]],["component/15-2",[]],["title/15-3",[47,14.809,62,22.861,108,29.669,595,27.39,596,31.226]],["name/15-3",[]],["text/15-3",[]],["component/15-3",[]],["title/15-4",[47,10.729,50,11.857,62,27.51,204,19.201,431,18.14,595,19.844,596,22.623]],["name/15-4",[]],["text/15-4",[]],["component/15-4",[]],["title/15-5",[322,34.465,597,31.956,598,34.465]],["name/15-5",[]],["text/15-5",[]],["component/15-5",[]],["title/15-6",[599,67.575]],["name/15-6",[]],["text/15-6",[]],["component/15-6",[]],["title/15-7",[600,67.575]],["name/15-7",[]],["text/15-7",[]],["component/15-7",[]],["title/15-8",[47,19.838,77,32.711,322,34.465]],["name/15-8",[]],["text/15-8",[]],["component/15-8",[]],["title/15-9",[89,27.963,313,20.166,601,38.147,602,26.725]],["name/15-9",[]],["text/15-9",[]],["component/15-9",[]],["title/15-10",[47,16.958,155,29.462,313,20.166,322,29.462]],["name/15-10",[]],["text/15-10",[]],["component/15-10",[]],["title/15-11",[47,19.838,181,26.384,322,34.465]],["name/15-11",[]],["text/15-11",[]],["component/15-11",[]],["title/15-12",[47,13.143,61,17.729,167,19.185,181,17.479,603,29.564,604,25.228]],["name/15-12",[]],["text/15-12",[]],["component/15-12",[]],["title/15-13",[47,16.958,86,20.876,142,27.963,265,20.395]],["name/15-13",[]],["text/15-13",[]],["component/15-13",[]],["title/15",[61,26.761,62,30.625,167,28.959]],["name/15",[605,1.918]],["text/15",[4,0.406,12,1.203,19,4.011,20,0.627,41,0.982,43,0.565,46,0.688,47,3.552,49,0.508,50,2.61,58,3.938,59,2.306,61,0.589,62,4.389,65,0.514,77,0.72,82,0.875,83,3.053,86,0.538,92,1.561,95,0.688,101,0.981,105,1.616,108,1.616,110,1.363,122,0.492,132,1.612,142,0.72,144,1.33,155,1.952,158,0.627,167,0.637,168,0.565,171,0.738,181,2.938,182,1.073,195,0.617,204,1.443,205,0.703,216,0.649,217,0.598,224,2.684,225,1.814,231,1.7,232,1.616,238,1.548,245,0.875,251,0.637,252,0.808,265,0.525,268,0.759,274,1.198,288,0.674,296,1.9,301,1.383,305,0.508,313,2.627,317,1.734,322,5.885,324,1.7,326,0.637,351,2.177,354,0.573,355,0.688,360,1.492,378,1.814,404,2.252,407,1.177,418,2.583,420,1.492,424,0.627,425,0.519,426,0.875,431,3.13,433,0.674,435,0.738,441,0.738,444,0.982,460,1.299,461,1.616,463,0.838,479,0.782,480,1.221,487,1.814,524,0.703,586,1.7,594,0.982,595,3.424,596,4.658,597,1.299,598,2.847,599,0.982,600,0.982,601,1.814,602,0.688,603,1.814,606,0.921,607,1.076,608,0.982,609,0.982,610,1.076,611,5.025,612,1.076,613,1.986,614,1.616,615,1.076,616,1.076,617,1.076,618,1.986,619,1.986,620,1.076,621,1.986,622,4.037,623,1.986,624,1.986,625,1.076,626,1.986,627,2.767,628,1.076,629,1.986,630,1.076,631,0.982,632,0.982,633,2.949,634,2.527,635,2.078,636,2.369,637,2.369,638,0.759,639,2.767,640,0.738,641,0.982,642,0.875,643,0.982,644,0.759,645,2.767,646,0.921,647,1.076,648,1.986,649,1.076,650,1.076,651,0.838,652,1.076,653,1.986,654,1.076,655,1.076,656,4.037,657,0.982,658,1.076,659,1.076,660,1.492,661,0.982,662,0.875,663,1.443,664,0.838,665,1.986,666,0.982,667,1.076,668,1.076,669,1.076,670,0.982,671,1.7,672,1.076,673,1.076,674,0.982]],["component/15",[3,0.487]],["title/16",[372,38.492,675,42.767]],["name/16",[11,1.317]],["text/16",[4,2.245,12,2.77,13,5.091,14,5.091,16,4.837,18,4.837,20,3.465,21,3.305,22,3.408,23,3.889,24,3.305,26,5.43,27,4.465,28,5.091,29,5.43,30,3.045,31,3.587,32,5.43,33,4.321,34,5.091,35,4.321,37,3.587,49,3.849,98,3.805,114,3.889,172,3.889,287,3.125,354,3.167,538,3.587,558,5.43,676,5.947]],["component/16",[3,0.487]],["title/17",[12,17.536,302,47.875]],["name/17",[12,0.316,302,0.863]],["text/17",[4,1.389,12,2.837,19,1.533,20,2.143,35,2.673,47,2.326,57,2.992,88,1.908,90,2.109,112,2.525,142,3.836,216,2.219,217,2.045,273,2.109,296,3.933,302,6.462,370,2.992,372,2.406,373,3.149,377,2.992,385,2.261,406,3.149,417,2.992,433,2.306,463,2.867,509,2.673,571,2.306,578,2.992,638,2.595,640,2.525,662,2.992,677,3.149,678,5.233,679,5.73,680,3.149,681,5.73,682,4.905,683,3.679,684,2.992,685,2.867,686,5.73,687,2.673,688,2.992,689,3.679,690,2.867,691,3.149,692,3.679,693,3.679,694,3.679,695,3.679,696,3.149,697,2.525,698,3.679,699,2.867,700,3.679,701,3.679,702,3.679,703,3.149,704,3.679,705,3.679,706,3.679,707,3.36,708,3.36,709,3.679,710,3.679,711,3.679,712,3.36,713,3.679,714,3.679]],["component/17",[3,0.487]],["title/18-1",[78,36.889,715,40.403]],["name/18-1",[]],["text/18-1",[]],["component/18-1",[]],["title/18-2",[291,39.402,715,40.403]],["name/18-2",[]],["text/18-2",[]],["component/18-2",[]],["title/18",[78,30.625,291,32.711,715,33.542]],["name/18",[78,1.202]],["text/18",[4,1.847,12,2.969,21,3.43,31,1.819,43,1.585,47,1.986,48,2.899,49,3.354,50,1.353,65,1.44,66,2.679,75,2.899,77,4.132,78,3.868,79,2.754,81,2.35,83,1.424,88,1.564,89,2.019,107,2.019,124,2.85,125,3.394,147,2.719,164,1.853,168,1.585,198,1.853,201,3.243,243,2.445,259,1.929,270,1.853,277,3.38,291,6.14,292,2.754,301,1.507,303,2.07,305,2.915,371,2.754,433,1.89,513,2.07,514,2.019,539,1.819,561,2.453,595,2.264,663,2.191,715,4.237,716,2.754,717,4.188,718,2.453,719,1.456,720,2.581,721,1.972,722,1.585,723,4.543,724,2.07,725,1.819,726,2.127,727,2.35,728,2.35,729,2.07,730,1.929,731,5.159,732,2.453]],["component/18",[3,0.487]],["title/19-1",[12,14.558,94,35.504,98,31.264]],["name/19-1",[]],["text/19-1",[]],["component/19-1",[]],["title/19-2",[12,9.645,93,22.833,98,20.712,99,22.222,313,15.629,425,15.629]],["name/19-2",[]],["text/19-2",[]],["component/19-2",[]],["title/19-3",[12,9.645,93,22.833,98,20.712,99,22.222,313,15.629,733,18.556]],["name/19-3",[]],["text/19-3",[]],["component/19-3",[]],["title/19-4",[184,44.198,457,41.515]],["name/19-4",[]],["text/19-4",[]],["component/19-4",[]],["title/19",[127,28.738,347,36.889]],["name/19",[734,1.918]],["text/19",[4,3.384,12,2.67,21,2.815,50,1.412,55,3.982,83,2.392,90,1.804,93,2.22,94,2.287,102,2.364,116,4.952,118,2.875,126,3.702,127,4.821,143,2.364,144,2.107,147,2.815,148,1.935,158,1.834,184,6.73,220,2.059,243,2.531,287,3.826,389,4.254,457,6.013,638,4.482,646,4.336,735,4.482,736,3.148,737,3.148,738,5.803,739,3.148,740,3.148,741,5.065,742,3.148,743,3.148,744,3.148,745,3.148,746,3.148,747,3.148,748,3.148,749,2.875,750,4.336,751,1.899,752,2.364,753,3.148,754,4.336,755,4.119,756,3.148,757,3.148,758,3.148]],["component/19",[3,0.487]],["title/20-1",[155,41.515,759,50.388]],["name/20-1",[]],["text/20-1",[]],["component/20-1",[]],["title/20-2",[265,36.128]],["name/20-2",[]],["text/20-2",[]],["component/20-2",[]],["title/20-3",[760,35.723]],["name/20-3",[]],["text/20-3",[]],["component/20-3",[]],["title/20-4",[719,35.723]],["name/20-4",[]],["text/20-4",[]],["component/20-4",[]],["title/20-5",[761,67.575]],["name/20-5",[]],["text/20-5",[]],["component/20-5",[]],["title/20-6",[265,36.128]],["name/20-6",[]],["text/20-6",[]],["component/20-6",[]],["title/20-7",[760,35.723]],["name/20-7",[]],["text/20-7",[]],["component/20-7",[]],["title/20-8",[762,67.575]],["name/20-8",[]],["text/20-8",[]],["component/20-8",[]],["title/20-9",[265,36.128]],["name/20-9",[]],["text/20-9",[]],["component/20-9",[]],["title/20-10",[760,35.723]],["name/20-10",[]],["text/20-10",[]],["component/20-10",[]],["title/20-11",[719,35.723]],["name/20-11",[]],["text/20-11",[]],["component/20-11",[]],["title/20-12",[763,73.997]],["name/20-12",[]],["text/20-12",[]],["component/20-12",[]],["title/20-13",[265,36.128]],["name/20-13",[]],["text/20-13",[]],["component/20-13",[]],["title/20-14",[760,35.723]],["name/20-14",[]],["text/20-14",[]],["component/20-14",[]],["title/20-15",[719,35.723]],["name/20-15",[]],["text/20-15",[]],["component/20-15",[]],["title/20-16",[764,73.997]],["name/20-16",[]],["text/20-16",[]],["component/20-16",[]],["title/20-17",[719,35.723]],["name/20-17",[]],["text/20-17",[]],["component/20-17",[]],["title/20-18",[765,73.997]],["name/20-18",[]],["text/20-18",[]],["component/20-18",[]],["title/20-19",[766,73.997]],["name/20-19",[]],["text/20-19",[]],["component/20-19",[]],["title/20-20",[265,36.128]],["name/20-20",[]],["text/20-20",[]],["component/20-20",[]],["title/20-21",[760,35.723]],["name/20-21",[]],["text/20-21",[]],["component/20-21",[]],["title/20-22",[291,49.534]],["name/20-22",[]],["text/20-22",[]],["component/20-22",[]],["title/20-23",[719,35.723]],["name/20-23",[]],["text/20-23",[]],["component/20-23",[]],["title/20-24",[767,73.997]],["name/20-24",[]],["text/20-24",[]],["component/20-24",[]],["title/20",[313,28.416,768,47.875]],["name/20",[769,1.752]],["text/20",[4,1.015,6,0.974,7,0.554,12,1.89,19,0.433,20,0.606,22,0.596,23,0.68,43,0.546,47,0.422,48,2.332,50,0.864,64,2.612,83,0.491,86,0.52,87,0.734,88,0.999,89,2.244,90,0.596,92,0.587,97,0.43,99,0.714,100,0.562,103,1.207,107,0.696,109,0.81,115,0.846,122,1.23,125,0.782,127,0.94,134,0.665,136,1.785,137,1.399,140,0.734,142,0.696,143,1.446,151,2.083,152,2.149,154,0.89,161,1.161,162,0.596,168,2.068,169,0.497,177,2.174,181,0.562,188,1.758,205,0.68,210,0.596,237,0.652,238,0.81,243,0.52,246,0.696,249,2.776,258,0.781,261,0.81,264,1.896,265,0.508,274,2.686,287,0.546,291,0.696,293,1.289,300,2.574,301,1.343,303,0.714,308,1.648,313,2.571,328,1.758,332,0.95,346,0.95,347,0.652,364,1.446,372,0.68,383,1.358,389,1.289,403,3.565,419,0.652,424,2.862,425,0.502,442,1.446,470,0.734,476,0.89,480,0.639,507,0.627,531,0.587,538,0.627,552,1.399,557,0.81,571,0.652,576,0.756,588,0.95,602,1.232,604,0.81,636,0.89,638,0.734,663,3.235,664,0.81,666,0.95,696,0.89,697,2.301,715,1.322,719,0.93,720,1.648,722,0.546,723,2.145,724,0.714,730,1.72,732,0.846,733,0.596,751,0.627,760,2.149,768,1.566,769,0.95,770,1.04,771,0.81,772,0.95,773,1.04,774,0.95,775,0.95,776,2.301,777,0.95,778,3.352,779,1.04,780,3.502,781,1.04,782,1.04,783,1.648,784,0.81,785,1.04,786,0.95,787,1.04,788,1.04,789,1.5,790,4.486,791,3.061,792,0.734,793,0.95,794,0.95,795,1.04,796,1.04,797,1.04,798,1.04,799,1.5,800,0.95,801,1.925,802,2.955,803,1.04,804,1.925,805,1.72,806,1.04,807,0.781,808,0.781,809,1.953,810,1.04,811,0.756,812,4.066,813,1.04,814,0.81,815,0.81,816,0.846,817,1.04,818,0.95,819,0.781,820,1.289,821,0.95,822,1.04,823,1.04,824,0.714,825,0.95,826,0.95,827,1.925,828,1.04,829,1.04,830,0.89,831,0.781,832,0.652,833,3.936,834,1.925,835,0.846,836,0.95,837,1.04,838,1.04,839,1.04,840,1.04,841,1.04,842,1.04,843,0.81,844,1.04,845,1.04,846,1.04,847,0.714,848,2.688,849,1.04,850,0.846,851,0.95,852,1.648,853,0.95,854,1.04,855,1.5,856,1.04,857,1.04,858,1.04,859,1.04,860,0.846,861,1.04,862,0.95,863,1.04,864,1.04,865,1.04,866,0.652,867,1.183,868,1.04,869,1.04,870,0.734,871,0.781,872,1.04,873,1.04,874,0.696,875,0.652,876,1.04,877,1.04,878,1.04,879,1.04,880,1.04,881,1.925,882,1.04,883,1.04,884,0.89,885,1.232,886,1.925,887,0.714,888,0.846,889,0.95,890,1.04,891,1.04,892,1.04,893,0.846,894,0.81,895,0.846,896,0.95,897,0.95,898,1.04,899,1.04,900,1.04,901,1.04,902,1.04,903,1.04,904,1.04,905,1.04,906,1.04,907,1.04,908,0.95]],["component/20",[3,0.487]],["title/21-1",[47,16.958,152,20.166,354,22.245,531,23.569]],["name/21-1",[]],["text/21-1",[]],["component/21-1",[]],["title/21-2",[152,23.59,530,33.542,531,27.572]],["name/21-2",[]],["text/21-2",[]],["component/21-2",[]],["title/21-3",[343,31.956,531,27.572,909,36.692]],["name/21-3",[]],["text/21-3",[]],["component/21-3",[]],["title/21-4",[112,28.673,127,20.395,531,23.569,910,35.759]],["name/21-4",[]],["text/21-4",[]],["component/21-4",[]],["title/21-5",[114,27.317,127,20.395,531,23.569,910,35.759]],["name/21-5",[]],["text/21-5",[]],["component/21-5",[]],["title/21",[287,25.677,531,27.572,544,38.079]],["name/21",[911,1.918]],["text/21",[4,2.107,12,2.431,19,1.482,20,1.201,22,2.689,24,3.101,30,1.056,47,1.444,85,2.275,86,1.03,90,2.689,94,1.498,98,1.319,99,1.415,102,1.548,112,2.441,114,2.326,125,2.556,126,1.201,127,3.362,136,1.098,145,1.267,152,4.091,158,2.733,177,1.006,190,1.677,243,1.03,264,1.454,277,1.129,287,2.465,343,3.649,348,1.498,354,2.972,355,1.319,364,1.548,385,1.267,408,2.883,419,1.292,422,1.319,425,0.995,435,2.441,453,2.509,460,2.326,530,4.727,531,5.404,544,2.772,552,1.498,725,1.244,726,1.454,760,0.995,780,1.267,784,5.367,799,1.606,831,3.522,887,1.415,909,2.671,910,5.895,912,1.882,913,2.061,914,1.882,915,2.061,916,2.061,917,1.765,918,2.061,919,2.061,920,3.557,921,3.557,922,3.557,923,1.348,924,3.557,925,3.557,926,2.061,927,1.765,928,5.581,929,1.882,930,2.772,931,3.045,932,2.061,933,1.765,934,2.061,935,1.548,936,1.415,937,2.061,938,1.677,939,3.557,940,2.061,941,2.061,942,2.061,943,1.606,944,3.045,945,3.248]],["component/21",[3,0.487]],["title/22-1",[155,25.728,930,28.425,946,36.477,947,25.038,948,31.226]],["name/22-1",[]],["text/22-1",[]],["component/22-1",[]],["title/22-2",[719,35.723]],["name/22-2",[]],["text/22-2",[]],["component/22-2",[]],["title/22-3",[947,28.673,948,54.075,949,41.772]],["name/22-3",[]],["text/22-3",[]],["component/22-3",[]],["title/22-4",[719,35.723]],["name/22-4",[]],["text/22-4",[]],["component/22-4",[]],["title/22-5",[760,35.723]],["name/22-5",[]],["text/22-5",[]],["component/22-5",[]],["title/22-6",[947,28.673,948,35.759,950,41.772,951,33.976]],["name/22-6",[]],["text/22-6",[]],["component/22-6",[]],["title/22-7",[719,35.723]],["name/22-7",[]],["text/22-7",[]],["component/22-7",[]],["title/22-8",[947,28.673,952,41.772,953,32.552,954,33.976]],["name/22-8",[]],["text/22-8",[]],["component/22-8",[]],["title/22-9",[719,35.723]],["name/22-9",[]],["text/22-9",[]],["component/22-9",[]],["title/22-10",[760,35.723]],["name/22-10",[]],["text/22-10",[]],["component/22-10",[]],["title/22-11",[947,28.673,953,32.552,954,33.976,955,41.772]],["name/22-11",[]],["text/22-11",[]],["component/22-11",[]],["title/22-12",[265,36.128]],["name/22-12",[]],["text/22-12",[]],["component/22-12",[]],["title/22-13",[719,35.723]],["name/22-13",[]],["text/22-13",[]],["component/22-13",[]],["title/22-14",[760,35.723]],["name/22-14",[]],["text/22-14",[]],["component/22-14",[]],["title/22-15",[947,28.673,953,32.552,956,41.772,957,38.147]],["name/22-15",[]],["text/22-15",[]],["component/22-15",[]],["title/22-16",[719,35.723]],["name/22-16",[]],["text/22-16",[]],["component/22-16",[]],["title/22-17",[947,28.673,953,32.552,958,41.772,959,41.772]],["name/22-17",[]],["text/22-17",[]],["component/22-17",[]],["title/22-18",[719,35.723]],["name/22-18",[]],["text/22-18",[]],["component/22-18",[]],["title/22-19",[760,35.723]],["name/22-19",[]],["text/22-19",[]],["component/22-19",[]],["title/22-20",[947,28.673,951,33.976,960,41.772,961,38.147]],["name/22-20",[]],["text/22-20",[]],["component/22-20",[]],["title/22-21",[265,36.128]],["name/22-21",[]],["text/22-21",[]],["component/22-21",[]],["title/22-22",[947,28.673,951,33.976,957,38.147,962,41.772]],["name/22-22",[]],["text/22-22",[]],["component/22-22",[]],["title/22-23",[265,36.128]],["name/22-23",[]],["text/22-23",[]],["component/22-23",[]],["title/22-24",[719,35.723]],["name/22-24",[]],["text/22-24",[]],["component/22-24",[]],["title/22-25",[719,35.723]],["name/22-25",[]],["text/22-25",[]],["component/22-25",[]],["title/22-26",[963,73.997]],["name/22-26",[]],["text/22-26",[]],["component/22-26",[]],["title/22-27",[265,36.128]],["name/22-27",[]],["text/22-27",[]],["component/22-27",[]],["title/22-28",[719,35.723]],["name/22-28",[]],["text/22-28",[]],["component/22-28",[]],["title/22-29",[964,73.997]],["name/22-29",[]],["text/22-29",[]],["component/22-29",[]],["title/22-30",[265,36.128]],["name/22-30",[]],["text/22-30",[]],["component/22-30",[]],["title/22-31",[719,35.723]],["name/22-31",[]],["text/22-31",[]],["component/22-31",[]],["title/22-32",[965,67.575]],["name/22-32",[]],["text/22-32",[]],["component/22-32",[]],["title/22-33",[265,36.128]],["name/22-33",[]],["text/22-33",[]],["component/22-33",[]],["title/22-34",[719,35.723]],["name/22-34",[]],["text/22-34",[]],["component/22-34",[]],["title/22-35",[966,73.997]],["name/22-35",[]],["text/22-35",[]],["component/22-35",[]],["title/22-36",[719,35.723]],["name/22-36",[]],["text/22-36",[]],["component/22-36",[]],["title/22-37",[967,73.997]],["name/22-37",[]],["text/22-37",[]],["component/22-37",[]],["title/22-38",[968,63.345]],["name/22-38",[]],["text/22-38",[]],["component/22-38",[]],["title/22-39",[265,36.128]],["name/22-39",[]],["text/22-39",[]],["component/22-39",[]],["title/22-40",[760,35.723]],["name/22-40",[]],["text/22-40",[]],["component/22-40",[]],["title/22-41",[719,35.723]],["name/22-41",[]],["text/22-41",[]],["component/22-41",[]],["title/22-42",[291,49.534]],["name/22-42",[]],["text/22-42",[]],["component/22-42",[]],["title/22-43",[55,36.889,403,39.402]],["name/22-43",[]],["text/22-43",[]],["component/22-43",[]],["title/22-44",[431,40.403,571,36.889]],["name/22-44",[]],["text/22-44",[]],["component/22-44",[]],["title/22-45",[559,45.868,760,28.416]],["name/22-45",[]],["text/22-45",[]],["component/22-45",[]],["title/22-46",[969,73.997]],["name/22-46",[]],["text/22-46",[]],["component/22-46",[]],["title/22-47",[265,36.128]],["name/22-47",[]],["text/22-47",[]],["component/22-47",[]],["title/22-48",[719,35.723]],["name/22-48",[]],["text/22-48",[]],["component/22-48",[]],["title/22-49",[168,30.929,298,50.388]],["name/22-49",[]],["text/22-49",[]],["component/22-49",[]],["title/22-50",[970,67.575]],["name/22-50",[]],["text/22-50",[]],["component/22-50",[]],["title/22-51",[265,36.128]],["name/22-51",[]],["text/22-51",[]],["component/22-51",[]],["title/22-52",[719,35.723]],["name/22-52",[]],["text/22-52",[]],["component/22-52",[]],["title/22-53",[760,35.723]],["name/22-53",[]],["text/22-53",[]],["component/22-53",[]],["title/22-54",[168,30.929,298,50.388]],["name/22-54",[]],["text/22-54",[]],["component/22-54",[]],["title/22-55",[971,73.997]],["name/22-55",[]],["text/22-55",[]],["component/22-55",[]],["title/22-56",[719,35.723]],["name/22-56",[]],["text/22-56",[]],["component/22-56",[]],["title/22-57",[760,35.723]],["name/22-57",[]],["text/22-57",[]],["component/22-57",[]],["title/22-58",[972,73.997]],["name/22-58",[]],["text/22-58",[]],["component/22-58",[]],["title/22-59",[265,36.128]],["name/22-59",[]],["text/22-59",[]],["component/22-59",[]],["title/22-60",[719,35.723]],["name/22-60",[]],["text/22-60",[]],["component/22-60",[]],["title/22-61",[759,63.345]],["name/22-61",[]],["text/22-61",[]],["component/22-61",[]],["title/22-62",[968,63.345]],["name/22-62",[]],["text/22-62",[]],["component/22-62",[]],["title/22-63",[78,30.625,89,32.711,559,38.079]],["name/22-63",[]],["text/22-63",[]],["component/22-63",[]],["title/22-64",[22,33.738,690,45.868]],["name/22-64",[]],["text/22-64",[]],["component/22-64",[]],["title/22-65",[109,45.868,973,47.875]],["name/22-65",[]],["text/22-65",[]],["component/22-65",[]],["title/22-66",[144,39.402,559,45.868]],["name/22-66",[]],["text/22-66",[]],["component/22-66",[]],["title/22-67",[760,35.723]],["name/22-67",[]],["text/22-67",[]],["component/22-67",[]],["title/22-68",[719,35.723]],["name/22-68",[]],["text/22-68",[]],["component/22-68",[]],["title/22-69",[265,36.128]],["name/22-69",[]],["text/22-69",[]],["component/22-69",[]],["title/22-70",[663,35.504,761,44.625,789,38.079]],["name/22-70",[]],["text/22-70",[]],["component/22-70",[]],["title/22-71",[313,20.166,356,32.552,403,27.963,760,20.166]],["name/22-71",[]],["text/22-71",[]],["component/22-71",[]],["title/22-72",[12,14.558,48,28.959,974,41.832]],["name/22-72",[]],["text/22-72",[]],["component/22-72",[]],["title/22",[313,28.416,975,45.868]],["name/22",[976,1.752]],["text/22",[3,0.12,4,0.122,6,0.611,7,1.295,12,1.614,15,0.18,17,0.217,19,1.103,20,0.189,21,0.352,22,1.859,24,0.352,25,0.446,27,0.244,28,0.278,30,0.166,31,0.559,36,0.278,42,0.593,43,0.17,47,0.896,48,3.463,50,2.327,55,0.924,58,0.405,59,0.424,61,0.508,62,0.581,63,1.604,64,0.941,65,0.302,66,0.807,75,0.715,78,1.913,83,0.438,86,0.316,88,0.626,89,2.171,90,0.186,92,0.357,93,0.851,94,0.877,95,0.405,96,0.593,97,0.383,100,1.066,103,0.924,107,0.987,109,3.191,112,0.223,115,0.754,116,2.063,122,0.904,123,0.196,125,2.2,126,0.703,127,0.309,128,0.299,129,0.636,132,0.189,134,0.208,136,0.785,137,0.877,138,0.143,140,0.654,142,0.217,143,1.482,144,0.62,145,1.357,147,0.18,148,0.199,151,0.512,152,1.739,155,0.654,156,0.203,157,0.654,158,0.54,161,0.196,164,0.57,168,1.391,171,0.434,172,0.212,173,1.043,174,2.143,177,1.49,180,0.192,181,0.652,182,0.175,188,0.212,195,0.186,196,0.515,198,0.389,201,1.16,204,0.236,205,0.414,212,0.244,216,1.332,217,0.515,218,0.223,219,0.229,223,0.54,224,1.149,237,0.203,239,0.244,240,1.482,241,0.264,243,1.525,244,1.67,248,0.397,249,0.446,251,0.192,254,1.102,256,0.808,258,0.244,264,0.654,265,0.453,267,0.196,270,0.57,274,0.559,275,1.538,277,0.661,282,0.696,283,0.253,285,0.236,287,1.499,291,0.987,293,1.322,300,0.414,301,0.162,303,0.636,313,1.565,317,0.203,323,0.253,335,0.253,336,0.446,345,0.217,352,0.278,356,1.149,358,0.278,360,0.244,364,0.244,365,1.658,372,0.212,374,0.253,383,0.851,386,0.296,389,0.808,392,0.278,393,0.296,401,0.578,403,4.166,408,0.199,412,0.947,414,0.542,417,0.264,418,0.208,419,0.581,424,0.369,431,1.012,434,0.397,435,0.223,439,0.475,441,0.223,442,0.696,451,0.264,454,0.581,466,0.542,476,0.278,477,0.542,478,0.296,480,1.213,497,0.515,507,0.559,514,0.62,516,1.22,523,0.264,524,0.212,526,0.236,530,0.434,531,0.523,538,0.382,543,0.236,550,0.793,553,0.578,559,2.67,571,1.237,576,0.236,580,0.493,581,0.236,586,0.278,597,0.414,598,0.229,602,0.405,604,0.253,636,0.278,637,0.793,641,0.296,657,0.296,660,0.244,662,0.264,663,2.976,664,1.538,671,0.278,675,0.236,677,2.443,680,0.278,690,0.253,691,0.278,696,1.89,697,1.67,708,0.296,715,0.636,718,0.754,719,0.835,722,0.17,723,0.405,724,1.187,727,0.253,730,0.405,731,0.877,732,0.754,738,2.016,749,2.961,750,0.278,751,0.196,759,1.89,760,1.977,762,0.296,771,0.493,774,0.296,775,0.296,776,0.793,777,0.578,780,1.627,784,0.253,786,1.346,789,0.941,790,0.846,792,1.22,793,1.346,794,2.787,800,0.846,802,0.244,807,0.696,808,0.475,809,0.673,812,2.606,814,0.253,815,0.253,816,1.199,818,0.578,819,0.475,820,0.217,824,1.187,826,0.296,831,0.475,835,0.264,836,0.296,843,0.722,855,0.253,860,0.264,862,1.102,871,0.475,884,0.278,888,0.264,894,0.253,908,0.296,923,0.212,927,0.278,931,0.278,938,0.264,945,0.296,965,0.296,970,0.296,973,0.264,974,1.033,975,3.749,976,0.578,977,0.264,978,0.515,979,0.324,980,0.244,981,0.927,982,0.324,983,1.187,984,0.542,985,0.633,986,0.278,987,0.324,988,0.324,989,0.324,990,0.324,991,0.927,992,0.324,993,0.515,994,0.296,995,0.324,996,0.324,997,0.296,998,0.324,999,0.296,1000,0.633,1001,0.542,1002,0.324,1003,0.324,1004,1.149,1005,0.278,1006,0.324,1007,0.578,1008,0.296,1009,0.324,1010,0.542,1011,0.296,1012,0.324,1013,0.324,1014,0.633,1015,0.324,1016,0.278,1017,2.221,1018,0.324,1019,0.927,1020,2.432,1021,0.633,1022,0.324,1023,0.324,1024,0.46,1025,0.278,1026,0.324,1027,0.475,1028,0.278,1029,0.324,1030,0.324,1031,0.927,1032,0.229,1033,0.578,1034,0.927,1035,0.324,1036,0.324,1037,0.475,1038,0.278,1039,0.324,1040,0.515,1041,1.974,1042,2.647,1043,0.324,1044,0.324,1045,0.324,1046,0.296,1047,0.578,1048,0.324,1049,0.927,1050,0.324,1051,0.927,1052,0.324,1053,0.324,1054,0.324,1055,0.324,1056,0.493,1057,0.324,1058,0.324,1059,0.324,1060,0.324,1061,0.324,1062,0.324,1063,0.324,1064,0.324,1065,0.593,1066,0.927,1067,0.633,1068,0.324,1069,0.846,1070,0.633,1071,0.846,1072,0.633,1073,0.793,1074,0.846,1075,0.324,1076,0.324,1077,0.264,1078,0.264,1079,0.324,1080,0.244,1081,0.296,1082,0.324,1083,0.324,1084,0.324,1085,0.324,1086,0.324,1087,0.229,1088,0.264,1089,0.324,1090,0.296,1091,0.324,1092,0.324,1093,0.324,1094,0.324,1095,0.633,1096,0.324,1097,0.324,1098,0.324,1099,0.324,1100,0.324,1101,0.229,1102,0.296,1103,0.324,1104,0.278,1105,0.633,1106,0.324,1107,0.633,1108,0.633,1109,0.324,1110,0.278,1111,0.278,1112,0.927,1113,0.296,1114,1.207,1115,0.324,1116,0.324,1117,0.578,1118,0.324,1119,0.633,1120,1.474,1121,1.474,1122,0.927,1123,0.927,1124,0.633,1125,0.633,1126,0.633,1127,0.296,1128,0.236,1129,0.324,1130,0.324,1131,0.324,1132,0.278,1133,0.324,1134,0.578,1135,0.324,1136,0.264,1137,1.207,1138,0.324,1139,0.324,1140,0.927,1141,1.73,1142,0.636,1143,0.927,1144,0.578,1145,0.578,1146,1.207,1147,0.324,1148,0.324,1149,0.633,1150,0.324,1151,0.633,1152,0.515,1153,0.324,1154,0.324,1155,0.324,1156,0.324,1157,0.324,1158,0.236,1159,0.324,1160,0.324,1161,0.324,1162,0.296,1163,0.296,1164,0.264,1165,0.927,1166,0.324,1167,0.654,1168,0.324,1169,0.324,1170,0.324,1171,0.324,1172,0.264,1173,0.515,1174,0.324,1175,0.324,1176,0.324,1177,1.149,1178,0.324,1179,0.633,1180,0.278,1181,0.324,1182,0.324,1183,0.324,1184,0.324,1185,0.278,1186,0.278,1187,0.633,1188,0.633,1189,0.324,1190,0.633,1191,0.324,1192,0.424,1193,0.296,1194,0.253,1195,0.324,1196,0.633,1197,0.578,1198,0.324,1199,0.324,1200,0.324,1201,0.324,1202,0.324,1203,0.278,1204,0.324,1205,0.296,1206,0.324,1207,0.324,1208,0.324,1209,0.324,1210,0.324,1211,0.324,1212,0.324,1213,0.324,1214,0.296,1215,0.324,1216,0.236,1217,0.324,1218,0.296,1219,0.324,1220,0.324,1221,0.324,1222,0.324,1223,0.324,1224,0.324,1225,0.324]],["component/22",[3,0.487]],["title/23-1",[12,14.558,98,31.264,1226,44.625]],["name/23-1",[]],["text/23-1",[]],["component/23-1",[]],["title/23-2",[256,49.534]],["name/23-2",[]],["text/23-2",[]],["component/23-2",[]],["title/23-3",[760,28.416,1227,58.861]],["name/23-3",[]],["text/23-3",[]],["component/23-3",[]],["title/23-4",[15,32.711,909,44.198]],["name/23-4",[]],["text/23-4",[]],["component/23-4",[]],["title/23-5",[125,19.838,516,34.465,943,38.079]],["name/23-5",[]],["text/23-5",[]],["component/23-5",[]],["title/23-6",[222,40.403,1228,44.198]],["name/23-6",[]],["text/23-6",[]],["component/23-6",[]],["title/23",[12,14.558,313,23.59,1145,44.625]],["name/23",[1229,1.918]],["text/23",[12,2.294,15,4.28,22,1.992,48,2.059,50,1.559,86,1.737,100,1.876,125,3.783,126,3.953,127,1.697,128,2.588,152,1.678,168,1.826,195,1.992,197,4.27,217,1.931,222,3.761,265,1.697,270,2.136,296,3.761,313,1.678,361,2.451,364,4.115,372,2.273,383,2.451,392,2.975,419,2.178,422,2.223,439,5.094,516,3.865,552,2.525,597,2.273,642,4.457,680,2.975,687,2.525,717,2.975,720,2.975,751,3.306,760,1.678,772,3.173,809,3.981,909,2.609,935,4.115,943,2.708,1101,2.451,1152,2.826,1167,2.451,1192,2.326,1226,5.004,1228,4.115,1230,5.48,1231,2.975,1232,3.475,1233,4.27,1234,2.826,1235,2.975,1236,3.173,1237,2.609,1238,2.178,1239,3.475,1240,3.173,1241,2.826,1242,2.975,1243,3.475]],["component/23",[3,0.487]],["title/24-1",[12,17.536,62,36.889]],["name/24-1",[]],["text/24-1",[]],["component/24-1",[]],["title/24-2",[12,10.867,814,28.425,1244,33.312,1245,36.477,1246,29.669]],["name/24-2",[]],["text/24-2",[]],["component/24-2",[]],["title/24-3",[12,12.445,835,33.976,1246,33.976,1247,41.772]],["name/24-3",[]],["text/24-3",[]],["component/24-3",[]],["title/24-4",[12,12.445,1073,35.759,1246,51.378]],["name/24-4",[]],["text/24-4",[]],["component/24-4",[]],["title/24-5",[12,10.867,723,23.338,954,29.669,1246,29.669,1248,36.477]],["name/24-5",[]],["text/24-5",[]],["component/24-5",[]],["title/24-6",[12,10.867,732,29.669,1249,36.477,1250,36.477,1251,27.39]],["name/24-6",[]],["text/24-6",[]],["component/24-6",[]],["title/24-7",[12,10.867,954,29.669,974,31.226,1251,27.39,1252,36.477]],["name/24-7",[]],["text/24-7",[]],["component/24-7",[]],["title/24-8",[12,10.867,961,33.312,1251,27.39,1253,33.312,1254,36.477]],["name/24-8",[]],["text/24-8",[]],["component/24-8",[]],["title/24-9",[12,10.867,951,29.669,1251,27.39,1255,36.477,1256,36.477]],["name/24-9",[]],["text/24-9",[]],["component/24-9",[]],["title/24-10",[12,10.867,755,29.669,1244,33.312,1251,27.39,1257,36.477]],["name/24-10",[]],["text/24-10",[]],["component/24-10",[]],["title/24-11",[12,10.867,953,28.425,1251,27.39,1258,36.477,1259,36.477]],["name/24-11",[]],["text/24-11",[]],["component/24-11",[]],["title/24",[267,35.507,313,28.416]],["name/24",[1260,1.918]],["text/24",[4,2.496,6,0.439,7,0.671,8,0.301,10,0.652,12,1.864,15,1.096,17,0.301,19,3.006,20,0.262,22,0.258,23,0.294,24,0.25,30,1.01,31,0.271,37,0.524,43,1.037,44,0.568,45,0.308,47,2.637,48,2.802,49,2.32,50,2.283,55,1.984,58,0.807,59,0.844,60,0.39,61,0.246,62,0.544,64,0.35,65,0.777,66,2.484,67,0.889,75,0.965,77,0.844,78,0.282,83,1.617,85,0.288,86,1.711,87,0.317,88,1.023,90,0.933,92,0.49,93,0.613,94,1.434,95,0.288,97,0.186,99,0.596,100,1.065,101,0.429,103,0.282,108,0.366,109,0.35,110,0.308,114,0.294,115,0.366,122,1.449,123,0.524,124,0.734,125,2.728,126,0.506,127,0.795,128,1.617,132,1.15,133,0.337,134,0.556,135,0.337,136,1.051,137,0.327,138,0.198,144,0.581,145,1.778,147,0.483,148,1.001,151,1.227,152,1.772,155,0.317,156,0.282,157,0.613,158,0.262,161,0.982,163,0.294,164,0.775,168,1.928,169,1.511,174,1.725,177,2.014,181,1.065,182,1.241,193,0.747,195,1.492,196,1.605,198,0.276,201,1.663,205,0.568,208,0.385,209,0.366,211,0.258,212,0.337,216,0.524,219,0.317,222,0.865,223,0.734,238,0.677,240,0.652,243,0.434,251,0.515,255,0.385,256,0.581,262,0.301,263,0.35,264,0.889,265,0.219,266,0.793,267,0.524,268,0.613,270,0.775,271,0.35,273,1.131,274,3.069,275,0.677,277,0.476,282,0.337,283,0.35,287,0.855,291,1.321,293,1.321,301,0.434,303,0.865,311,0.385,312,0.366,313,3.392,323,0.35,326,0.747,330,0.41,333,0.41,334,0.327,336,0.317,341,1.394,343,0.294,345,0.844,347,0.282,349,0.25,350,0.35,351,0.215,354,0.463,356,0.677,364,0.337,365,0.337,372,0.294,375,0.294,377,0.366,380,0.271,383,0.317,389,0.581,404,0.294,407,0.515,408,0.276,411,0.385,412,0.246,414,0.744,418,0.288,419,0.79,422,0.556,424,0.506,425,0.609,432,0.317,433,0.282,446,0.385,451,0.706,455,0.889,460,0.294,466,0.385,468,0.337,473,0.294,479,0.327,480,1.412,484,0.288,502,0.581,507,0.982,513,0.596,524,0.568,526,0.327,530,0.308,538,0.524,539,2.214,556,0.337,557,0.35,564,0.366,566,0.294,570,0.327,572,0.337,576,0.327,580,0.35,595,0.337,597,0.294,598,0.317,602,0.288,608,0.41,635,0.337,638,0.317,640,0.308,644,0.317,651,0.35,660,0.337,661,1.151,664,0.35,674,1.487,718,1.025,719,0.609,721,0.824,722,0.855,723,0.807,724,1.117,725,0.271,726,0.613,730,0.288,733,0.258,735,0.317,752,0.337,760,3.191,780,0.534,783,0.744,784,0.35,789,0.982,792,0.317,799,0.35,802,0.652,808,0.947,809,0.631,811,0.631,814,0.35,815,0.677,816,0.706,819,0.337,820,0.581,824,0.596,835,0.366,853,0.41,860,0.366,866,0.79,871,0.652,874,0.301,884,0.744,885,0.288,887,0.308,923,1.29,936,0.596,944,0.385,978,0.366,980,0.652,983,0.308,994,0.41,997,0.41,1004,0.677,1017,1.487,1024,0.327,1040,0.366,1047,0.793,1069,0.41,1073,0.385,1080,0.337,1088,0.366,1101,0.317,1102,0.41,1104,0.385,1127,0.41,1128,0.327,1142,0.308,1158,0.631,1164,0.366,1173,0.366,1192,0.301,1194,0.677,1218,1.487,1236,0.41,1238,0.282,1261,0.449,1262,0.449,1263,0.449,1264,0.449,1265,0.41,1266,0.449,1267,0.449,1268,0.449,1269,0.449,1270,0.449,1271,0.385,1272,0.631,1273,0.385,1274,0.41,1275,0.869,1276,0.449,1277,0.449,1278,0.869,1279,0.449,1280,1.628,1281,0.449,1282,0.449,1283,0.449,1284,0.337,1285,0.449,1286,0.449,1287,0.385,1288,0.366,1289,0.385,1290,0.449,1291,0.744,1292,0.869,1293,0.366,1294,0.982,1295,0.327,1296,0.449,1297,0.744,1298,1.261,1299,0.793,1300,0.449,1301,0.366,1302,0.869,1303,0.449,1304,0.366,1305,0.449,1306,0.449,1307,0.41,1308,1.261,1309,0.449,1310,0.317,1311,0.35,1312,0.41,1313,0.449,1314,0.449,1315,0.449,1316,0.449,1317,0.41,1318,0.449,1319,0.385,1320,0.652,1321,0.337,1322,0.449,1323,1.151,1324,0.366,1325,0.41,1326,0.793,1327,0.449,1328,0.706,1329,0.449,1330,0.385,1331,0.449,1332,0.449,1333,0.449,1334,0.366,1335,0.449,1336,0.631,1337,0.449,1338,1.261,1339,0.366,1340,1.025,1341,1.183,1342,1.628,1343,0.41,1344,0.916,1345,0.366,1346,0.337,1347,0.327,1348,0.793,1349,0.449,1350,0.385,1351,0.652,1352,0.449,1353,0.449,1354,0.793,1355,0.449,1356,0.449,1357,0.449,1358,0.449,1359,0.449,1360,0.385,1361,0.449,1362,0.35,1363,0.449,1364,0.41,1365,0.449,1366,0.449,1367,0.449,1368,0.449,1369,0.449,1370,0.449,1371,0.449,1372,0.327,1373,0.449,1374,0.41,1375,0.449,1376,0.449,1377,0.449,1378,0.449,1379,0.449,1380,0.449,1381,0.449,1382,0.41,1383,0.366,1384,0.449]],["component/24",[3,0.487]],["title/25",[19,15.196,55,22.861,300,23.854,697,25.038,805,23.338]],["name/25",[55,0.665,805,0.679]],["text/25",[7,1.974,12,2.941,19,1.544,46,4.524,55,5.733,88,2.989,147,3.203,148,2.278,171,2.544,217,4.801,224,2.888,237,2.323,273,3.303,290,3.014,300,5.216,305,2.722,360,2.783,375,3.769,403,2.481,420,2.783,425,1.789,581,2.693,697,5.93,733,2.124,768,3.014,771,2.888,805,5.103,815,4.491,850,3.014,887,3.956,975,2.888,1385,3.384,1386,3.384,1387,3.384,1388,3.384,1389,3.384,1390,3.384,1391,3.384,1392,3.384,1393,3.384,1394,3.384,1395,3.384,1396,3.384,1397,3.384,1398,3.384,1399,3.384,1400,3.384,1401,3.384,1402,3.384,1403,3.384]],["component/25",[3,0.487]],["title/26",[217,27.157,367,35.504,805,31.264]],["name/26",[367,1.394]],["text/26",[4,3.16,12,2.493,35,5.166,116,3.819,147,2.724,148,4.37,217,3.952,367,6.08,407,2.904,412,2.684,420,3.68,425,2.366,437,3.68,640,3.364,671,4.195,771,3.819,805,3.136,887,3.364,1404,4.901,1405,3.364,1406,8.368,1407,4.476,1408,4.901,1409,4.901,1410,4.901,1411,4.901,1412,4.901,1413,4.901,1414,4.901,1415,4.901,1416,4.901,1417,4.901,1418,4.901,1419,4.901,1420,4.901,1421,4.901,1422,4.901,1423,4.901,1424,4.901,1425,4.901,1426,4.901]],["component/26",[3,0.487]],["title/27",[12,14.558,152,23.59,578,39.745]],["name/27",[1427,1.918]],["text/27",[12,2.448,25,4.244,83,2.842,116,4.69,125,2.443,147,3.344,152,4.854,217,3.344,273,4.71,301,3.008,408,3.698,425,2.905,464,5.152,465,5.152,578,8.56,887,4.131,888,4.895,1428,7.504,1429,6.018,1430,6.018,1431,6.018,1432,6.018,1433,6.018]],["component/27",[3,0.487]],["title/28",[19,15.196,55,22.861,300,23.854,697,25.038,805,23.338]],["name/28",[403,1.284]],["text/28",[7,1.974,12,2.941,19,1.544,46,4.524,55,5.733,88,2.989,147,3.203,148,2.278,171,2.544,217,4.801,224,2.888,237,2.323,273,3.303,290,3.014,300,5.216,305,2.722,360,2.783,375,3.769,403,2.481,420,2.783,425,1.789,581,2.693,697,5.93,733,2.124,768,3.014,771,2.888,805,5.103,815,4.491,850,3.014,887,3.956,975,2.888,1385,3.384,1386,3.384,1387,3.384,1388,3.384,1389,3.384,1390,3.384,1391,3.384,1392,3.384,1393,3.384,1394,3.384,1395,3.384,1396,3.384,1397,3.384,1398,3.384,1399,3.384,1400,3.384,1401,3.384,1402,3.384,1403,3.384]],["component/28",[3,0.487]],["title/29-1",[92,33.212,980,44.198]],["name/29-1",[]],["text/29-1",[]],["component/29-1",[]],["title/29-2",[92,33.212,824,40.403]],["name/29-2",[]],["text/29-2",[]],["component/29-2",[]],["title/29-3",[125,13.143,1237,24.309,1434,32.374,1435,32.374,1436,25.228,1437,25.228]],["name/29-3",[]],["text/29-3",[]],["component/29-3",[]],["title/29-4",[978,47.875,980,44.198]],["name/29-4",[]],["text/29-4",[]],["component/29-4",[]],["title/29-5",[47,19.838,334,35.504,539,29.478]],["name/29-5",[]],["text/29-5",[]],["component/29-5",[]],["title/29",[47,19.838,539,29.478,824,33.542]],["name/29",[47,0.298,425,0.354,824,0.504]],["text/29",[4,1.598,11,2.069,12,1.15,14,0.634,15,1.405,16,1.14,19,3.251,21,0.412,23,0.484,24,0.412,27,0.556,30,0.379,31,0.447,36,0.634,37,0.447,42,0.474,43,0.389,44,0.916,46,0.474,47,2.945,50,1.135,51,0.896,56,1.335,59,0.496,60,0.332,65,0.952,66,0.406,83,0.35,86,2.444,88,0.384,92,1.125,96,0.474,97,0.306,98,0.474,100,1.365,101,1.249,103,0.464,107,0.938,114,1.654,122,0.339,124,0.816,125,1.718,126,2.465,127,0.362,128,0.942,129,0.962,137,0.538,140,2.126,142,0.496,145,1.554,152,1.221,154,0.634,156,0.464,162,2.621,167,0.83,168,0.389,171,0.962,172,0.484,173,0.845,177,1.235,181,3.083,182,2.084,193,0.439,195,0.803,198,0.455,201,0.389,210,0.803,211,1.449,223,0.816,249,0.988,251,0.439,259,0.474,262,0.496,267,0.845,268,1.406,274,0.845,287,0.389,293,0.938,296,0.508,317,0.464,334,3.553,338,0.602,341,2.165,345,0.496,347,0.464,349,0.779,351,0.354,352,0.634,354,0.394,355,0.474,368,0.577,380,2.328,389,1.335,407,0.439,418,0.474,425,0.358,433,1.25,434,1.889,436,0.496,441,0.962,454,0.878,455,0.522,459,0.676,460,2.26,461,1.14,463,1.092,477,0.634,484,0.474,508,0.556,514,0.496,516,1.783,517,0.676,530,1.736,531,0.791,536,0.577,539,2.085,543,0.538,552,0.538,555,0.602,557,1.554,571,0.878,572,1.052,576,0.538,597,0.484,606,0.634,640,0.508,643,0.676,644,0.522,660,1.052,699,1.554,703,0.634,712,1.28,721,0.484,722,2.028,723,0.474,726,0.522,751,3.291,752,1.052,792,0.522,802,0.556,811,0.538,820,1.693,824,3.139,832,2.419,850,0.602,855,0.577,866,0.464,889,0.676,923,0.916,931,0.634,936,0.508,978,2.811,980,5.664,983,1.369,1037,0.556,1038,0.634,1071,0.676,1167,0.522,1180,1.199,1192,1.335,1214,0.676,1235,0.634,1237,0.556,1238,0.878,1242,1.199,1288,1.14,1289,0.634,1291,1.199,1293,0.602,1299,0.676,1307,0.676,1311,0.577,1321,0.556,1330,2.958,1341,0.538,1350,0.634,1351,1.497,1436,1.092,1437,0.577,1438,3.456,1439,0.741,1440,0.741,1441,1.28,1442,1.994,1443,1.994,1444,0.741,1445,0.741,1446,0.741,1447,1.994,1448,0.676,1449,0.741,1450,0.988,1451,0.741,1452,0.676,1453,0.988,1454,0.741,1455,1.28,1456,1.199,1457,0.676,1458,0.741,1459,0.602,1460,1.401,1461,1.28,1462,0.676,1463,1.401,1464,0.676,1465,1.97,1466,0.676,1467,0.741,1468,0.741,1469,0.676,1470,0.741,1471,0.741,1472,0.634,1473,1.899,1474,0.741,1475,0.741,1476,3.456,1477,0.741,1478,0.741,1479,1.401,1480,1.401,1481,1.401,1482,0.37,1483,0.741,1484,1.401,1485,1.401,1486,0.741,1487,1.994,1488,0.741,1489,0.741,1490,0.741,1491,0.741,1492,0.741,1493,0.741,1494,0.741,1495,0.741,1496,0.676,1497,0.741,1498,1.821,1499,0.634,1500,0.676,1501,0.741,1502,0.634,1503,0.741,1504,0.741,1505,0.741,1506,0.676,1507,0.741,1508,0.741,1509,0.741,1510,2.529,1511,0.676,1512,0.634,1513,1.401,1514,2.263,1515,2.529,1516,0.741,1517,0.741,1518,0.676,1519,0.741,1520,0.741,1521,0.741,1522,0.634,1523,0.634,1524,0.741,1525,0.676,1526,0.741,1527,0.676,1528,0.741,1529,0.508,1530,0.741,1531,0.741,1532,0.676]],["component/29",[3,0.487]],["title/30-1",[4,12.224,60,14.525,168,17.011,354,17.24,808,24.309,1533,27.713]],["name/30-1",[]],["text/30-1",[]],["component/30-1",[]],["title/30-2",[4,22.225,1534,47.875]],["name/30-2",[]],["text/30-2",[]],["component/30-2",[]],["title/30-3",[6,29.774,1534,47.875]],["name/30-3",[]],["text/30-3",[]],["component/30-3",[]],["title/30-4",[4,22.225,288,36.889]],["name/30-4",[]],["text/30-4",[]],["component/30-4",[]],["title/30-5",[274,29.478,288,30.625,1535,39.745]],["name/30-5",[]],["text/30-5",[]],["component/30-5",[]],["title/30-6",[1,33.976,123,25.199,721,27.317,1536,35.759]],["name/30-6",[]],["text/30-6",[]],["component/30-6",[]],["title/30-7",[6,29.774,237,36.889]],["name/30-7",[]],["text/30-7",[]],["component/30-7",[]],["title/30-8",[497,32.711,874,39.402]],["name/30-8",[]],["text/30-8",[]],["component/30-8",[]],["title/30-9",[497,32.711,1065,37.658]],["name/30-9",[]],["text/30-9",[]],["component/30-9",[]],["title/30",[4,15.773,60,18.742,417,33.976,808,31.366]],["name/30",[4,0.401,60,0.476]],["text/30",[1,2.88,4,2.215,6,2.646,12,0.893,19,4.733,46,0.58,47,0.368,50,0.76,60,1.07,65,0.433,83,0.428,84,0.639,90,0.52,91,0.706,92,0.512,123,1.022,128,2.47,132,0.528,135,1.272,136,0.902,138,1.773,147,0.504,164,0.557,168,2.922,172,0.593,173,0.547,180,1.414,181,0.915,182,0.489,193,0.537,208,0.776,209,0.737,211,1.718,220,1.108,237,1.062,256,0.607,265,0.827,274,2.136,287,0.89,288,0.568,297,0.737,301,0.453,313,0.438,323,3.14,354,0.902,368,0.706,374,0.706,407,0.537,408,0.557,424,0.528,453,5.255,460,0.593,484,0.58,490,0.828,493,3.449,497,3.091,498,5.956,502,4.114,507,1.439,571,1.062,581,0.659,597,0.593,602,0.58,663,0.659,678,0.828,721,0.593,729,0.622,731,1.231,760,0.438,791,0.828,808,0.681,851,0.828,968,0.776,1016,0.776,1028,2.042,1046,0.828,1065,1.084,1081,0.828,1128,0.659,1158,3.8,1205,0.828,1301,0.737,1334,0.737,1336,3.247,1354,0.828,1534,0.737,1535,1.94,1536,3.031,1537,0.907,1538,0.907,1539,0.907,1540,0.828,1541,4.081,1542,2.179,1543,1.451,1544,7.496,1545,1.547,1546,1.547,1547,0.907,1548,2.179,1549,4.761,1550,0.776,1551,5.079,1552,0.907,1553,5.879,1554,4.776,1555,0.907,1556,4.081,1557,3.234,1558,3.234,1559,1.547,1560,0.907,1561,0.828,1562,4.081,1563,0.907,1564,2.042,1565,1.547,1566,1.547,1567,1.378,1568,0.776,1569,0.706,1570,0.907,1571,0.828,1572,0.907,1573,1.547,1574,0.828,1575,2.438,1576,0.907,1577,1.695,1578,0.907,1579,2.179,1580,2.737,1581,2.179,1582,0.828]],["component/30",[3,0.487]],["title/31-1",[1583,50.388,1584,45.868]],["name/31-1",[]],["text/31-1",[]],["component/31-1",[]],["title/31",[12,14.558,169,23.331,288,30.625]],["name/31",[1585,1.918]],["text/31",[4,2.585,8,2.685,12,2.214,19,2.171,24,2.229,33,1.725,37,1.432,50,2.338,54,1.674,56,2.685,83,1.121,86,1.186,87,1.674,88,1.231,100,1.282,125,2.78,128,1.121,132,1.383,133,1.782,134,5.731,151,1.007,169,4.277,172,1.552,198,1.459,201,1.247,204,1.725,215,1.93,217,2.229,239,1.782,267,1.432,287,1.247,288,1.487,293,1.589,296,3.576,297,1.93,301,1.186,326,2.377,347,2.514,349,1.319,350,3.126,375,2.623,376,2.168,380,2.42,385,1.459,422,1.519,424,1.383,433,2.514,438,1.93,447,1.85,473,1.552,480,1.459,507,1.432,509,1.725,514,1.589,528,1.725,552,1.725,556,3.012,566,1.552,606,2.032,640,1.629,660,3.012,662,1.93,677,3.434,687,1.725,691,2.032,735,1.674,799,1.85,809,1.725,811,1.725,855,1.85,885,2.567,1090,2.168,1185,2.032,1231,2.032,1237,1.782,1238,1.487,1265,2.168,1294,1.85,1319,3.434,1323,2.168,1346,1.782,1350,2.032,1407,2.168,1453,1.674,1456,2.032,1523,3.434,1529,1.629,1549,2.032,1583,3.434,1584,1.85,1586,2.032,1587,2.032,1588,2.032,1589,2.168,1590,2.168,1591,2.168,1592,2.373,1593,2.168,1594,2.373,1595,2.373,1596,3.664,1597,2.373,1598,2.373,1599,2.373,1600,2.373,1601,2.032]],["component/31",[3,0.487]],["title/32-1",[49,23.079,125,19.838,169,23.331]],["name/32-1",[]],["text/32-1",[]],["component/32-1",[]],["title/32-2",[125,23.896,1514,44.198]],["name/32-2",[]],["text/32-2",[]],["component/32-2",[]],["title/32-3",[15,32.711,49,27.8]],["name/32-3",[]],["text/32-3",[]],["component/32-3",[]],["title/32-4",[15,27.157,49,23.079,50,21.925]],["name/32-4",[]],["text/32-4",[]],["component/32-4",[]],["title/32",[49,23.079,168,25.677,169,23.331]],["name/32",[1602,1.918]],["text/32",[4,2.196,12,0.949,15,1.77,19,2.129,22,1.04,30,0.93,31,1.095,43,0.954,47,0.737,49,3.26,50,0.814,65,2.44,67,4.102,83,2.009,86,2.126,89,1.215,92,1.024,100,0.98,107,1.215,124,2.978,125,2.6,126,2.978,127,3.579,132,1.855,134,1.161,138,2.249,140,1.28,147,1.009,151,1.35,163,1.187,168,3.056,169,3.5,172,1.187,177,0.886,180,1.076,181,0.98,183,1.319,193,1.076,194,4.286,195,1.825,201,1.673,205,1.187,217,1.77,222,1.246,237,1.138,245,1.476,248,1.138,256,2.131,301,0.907,326,1.076,351,0.867,354,1.696,383,1.28,385,1.957,389,1.215,407,1.076,408,1.957,412,0.994,425,0.876,432,4.102,468,1.363,502,1.215,524,1.187,525,1.28,529,1.415,531,2.4,538,1.095,560,2.481,570,2.314,572,1.363,722,0.954,724,1.246,726,1.28,727,2.481,751,1.095,820,1.215,866,2.666,923,4.187,1025,1.554,1101,1.28,1110,2.726,1152,2.59,1203,1.554,1216,1.319,1233,3.314,1238,1.996,1310,1.28,1341,2.314,1405,1.246,1436,2.481,1437,2.481,1453,1.28,1457,1.658,1514,1.363,1529,1.246,1553,1.554,1603,1.476,1604,5.815,1605,1.815,1606,1.815,1607,1.658,1608,1.815,1609,1.476,1610,1.815,1611,1.815,1612,1.815,1613,1.815,1614,1.658,1615,1.476,1616,1.815,1617,1.658,1618,1.658,1619,1.815,1620,3.184,1621,3.184,1622,3.184,1623,3.184,1624,1.815,1625,1.815,1626,1.815,1627,1.415,1628,1.815]],["component/32",[3,0.487]],["title/33-1",[8,32.711,24,27.157,169,23.331]],["name/33-1",[]],["text/33-1",[]],["component/33-1",[]],["title/33-2",[169,28.103,556,44.198]],["name/33-2",[]],["text/33-2",[]],["component/33-2",[]],["title/33-3",[63,30.351,101,20.632,128,19.729,169,19.944]],["name/33-3",[]],["text/33-3",[]],["component/33-3",[]],["title/33",[169,35.33]],["name/33",[10,1.44]],["text/33",[4,2.174,5,0.998,12,0.396,15,1.34,17,2.721,19,1.963,20,0.775,22,1.382,23,1.577,24,3.2,27,0.998,35,1.752,50,1.824,51,0.851,54,1.701,63,0.966,65,0.635,88,0.69,92,0.75,101,1.191,103,0.833,110,2.271,124,2.369,125,2.929,127,1.177,128,1.92,132,2.745,133,2.485,134,2.601,140,1.701,169,4.581,172,0.869,173,1.996,182,0.718,184,1.811,185,1.214,195,1.897,198,0.817,201,1.739,204,2.404,205,0.869,210,2.33,212,0.998,214,1.081,227,3.022,236,1.138,237,0.833,251,0.788,259,0.851,262,0.89,268,1.701,274,0.802,282,0.998,287,0.699,301,0.664,326,1.429,355,1.543,375,1.577,385,0.817,412,1.321,422,0.851,433,2.074,434,0.833,436,0.89,438,4.684,439,0.998,447,1.036,449,1.036,454,2.074,460,0.869,480,0.817,482,1.879,484,0.851,502,0.89,531,0.75,538,0.802,543,0.966,555,1.081,556,5.814,566,2.164,570,0.966,571,0.833,640,2.271,688,1.081,690,1.036,699,1.879,707,1.214,719,0.642,724,0.913,725,0.802,751,0.802,752,0.998,760,0.642,783,2.064,792,0.938,809,0.966,819,0.998,820,0.89,825,2.202,885,0.851,912,1.214,936,1.655,977,1.081,993,1.081,1101,0.938,1117,1.214,1136,1.081,1163,1.214,1172,1.081,1192,1.614,1231,2.064,1294,1.036,1317,1.214,1319,2.833,1346,0.998,1405,0.913,1428,1.214,1459,2.691,1469,2.202,1523,3.48,1529,2.791,1532,1.214,1575,1.081,1583,1.138,1584,1.036,1590,1.214,1591,1.214,1615,1.961,1629,1.214,1630,1.214,1631,1.329,1632,1.329,1633,1.329,1634,3.713,1635,1.138,1636,1.329,1637,1.329,1638,2.411,1639,1.329,1640,1.752,1641,1.329,1642,1.081,1643,1.329,1644,1.329,1645,1.329,1646,1.329,1647,1.329,1648,1.329,1649,1.138,1650,1.329,1651,1.329,1652,1.329,1653,1.329,1654,1.329,1655,1.329,1656,1.329,1657,1.329,1658,1.036,1659,1.329,1660,1.329,1661,1.329,1662,2.411,1663,2.411,1664,1.329,1665,1.329,1666,1.329,1667,1.329,1668,1.329,1669,1.329,1670,1.329,1671,1.329,1672,0.998,1673,1.329,1674,1.138,1675,1.329]],["component/33",[3,0.487]],["title/34-1",[725,35.507,1676,53.753]],["name/34-1",[]],["text/34-1",[]],["component/34-1",[]],["title/34",[125,19.838,1514,36.692,1677,48.866]],["name/34",[1678,1.918]],["text/34",[15,2.806,30,2.586,65,2.411,86,2.523,88,2.619,100,3.923,107,3.38,122,2.311,125,4.297,126,4.958,128,2.385,152,4.108,197,3.934,201,4.891,210,2.894,248,3.164,285,3.668,301,2.523,455,3.561,470,3.561,473,3.302,524,3.302,536,3.934,690,3.934,730,3.23,909,3.791,1234,4.107,1238,3.164,1351,3.791,1464,4.611,1586,4.322,1587,6.219,1679,5.049,1680,5.049]],["component/34",[3,0.487]],["title/35-1",[15,32.711,128,27.8]],["name/35-1",[]],["text/35-1",[]],["component/35-1",[]],["title/35-2",[125,23.896,1101,41.515]],["name/35-2",[]],["text/35-2",[]],["component/35-2",[]],["title/35-3",[15,32.711,531,33.212]],["name/35-3",[]],["text/35-3",[]],["component/35-3",[]],["title/35-4",[86,29.417,128,27.8]],["name/35-4",[]],["text/35-4",[]],["component/35-4",[]],["title/35-5",[125,23.896,1237,44.198]],["name/35-5",[]],["text/35-5",[]],["component/35-5",[]],["title/35",[15,32.711,86,29.417]],["name/35",[1681,1.918]],["text/35",[4,0.913,6,1.223,8,0.892,12,0.72,15,2.934,19,1.697,20,0.777,24,1.343,27,1.001,31,1.458,37,0.804,48,0.79,54,0.94,61,1.324,65,1.583,83,1.142,85,1.546,86,1.208,92,0.752,96,0.853,97,0.55,100,2.2,101,1.194,102,1.001,103,0.835,107,2.22,124,1.408,125,3.604,126,4.031,128,3.543,132,0.777,134,0.853,136,0.71,152,1.601,158,0.777,167,1.432,169,3.582,195,0.764,198,1.485,201,2.481,204,0.968,205,0.872,210,0.764,214,1.084,216,0.804,239,1.815,251,1.965,260,1.084,264,0.94,274,0.804,279,1.966,287,1.27,304,1.084,326,0.79,345,0.892,354,0.71,361,0.94,372,0.872,375,0.872,380,0.804,383,0.94,385,2.504,419,2.078,421,1.217,425,0.643,432,0.94,433,0.835,436,0.892,439,1.001,447,1.039,454,0.835,460,0.872,461,1.084,479,0.968,480,0.819,482,1.039,491,1.217,502,0.892,509,0.968,512,1.084,514,0.892,516,2.339,528,1.756,531,2.299,543,1.756,552,1.756,555,1.084,556,2.49,560,1.039,566,0.872,571,0.835,580,1.039,602,0.853,640,1.659,660,1.001,675,0.968,687,0.968,688,1.084,699,1.884,718,2.697,722,0.7,725,0.804,726,0.94,727,1.039,760,0.643,780,0.819,802,1.001,805,0.853,807,1.001,811,0.968,820,1.618,831,1.001,866,0.835,909,1.815,914,1.217,933,1.141,938,1.084,977,1.966,993,1.084,1008,1.217,1010,1.141,1037,1.001,1101,3.33,1192,0.892,1235,1.141,1237,1.815,1238,2.078,1242,1.141,1289,1.141,1321,1.001,1405,1.659,1436,1.884,1437,4.115,1453,0.94,1455,1.217,1456,1.141,1459,1.084,1462,1.217,1514,1.001,1525,1.217,1529,0.915,1533,1.141,1564,2.069,1584,1.039,1586,5.923,1587,4.52,1588,2.839,1603,1.084,1609,1.084,1634,2.207,1642,1.084,1676,1.217,1682,1.333,1683,1.141,1684,1.333,1685,1.333,1686,1.333,1687,1.217,1688,1.333,1689,1.333,1690,1.333,1691,1.333,1692,1.217,1693,1.333,1694,2.417,1695,1.333,1696,1.333,1697,2.207,1698,1.333,1699,1.333,1700,1.039,1701,1.217,1702,1.141,1703,1.333,1704,1.141,1705,1.333,1706,1.333,1707,1.333,1708,1.217,1709,2.417,1710,1.333]],["component/35",[3,0.487]],["title/36-1",[1027,44.198,1077,47.875]],["name/36-1",[]],["text/36-1",[]],["component/36-1",[]],["title/36-2",[12,17.536,1228,44.198]],["name/36-2",[]],["text/36-2",[]],["component/36-2",[]],["title/36-3",[151,24.961,867,36.174]],["name/36-3",[]],["text/36-3",[]],["component/36-3",[]],["title/36-4",[151,24.961,870,41.515]],["name/36-4",[]],["text/36-4",[]],["component/36-4",[]],["title/36-5",[151,24.961,832,36.889]],["name/36-5",[]],["text/36-5",[]],["component/36-5",[]],["title/36-6",[867,45.476]],["name/36-6",[]],["text/36-6",[]],["component/36-6",[]],["title/36-7",[870,52.19]],["name/36-7",[]],["text/36-7",[]],["component/36-7",[]],["title/36",[128,27.8,151,24.961]],["name/36",[128,0.501,151,0.45]],["text/36",[12,0.869,18,1.336,19,4.635,37,2.371,43,0.863,44,1.074,47,0.667,50,2.136,56,1.1,128,1.857,129,1.128,136,0.875,140,1.159,151,2.558,158,0.957,161,2.371,162,3.457,164,1.792,167,0.974,193,1.728,216,0.991,220,2.571,301,1.457,307,4.27,313,1.408,317,1.03,349,3.028,380,1.759,407,2.33,408,1.01,424,2.29,425,1.408,428,1.5,431,1.128,434,1.827,436,1.1,437,1.234,440,2.001,508,1.234,528,1.194,538,1.759,638,2.057,640,1.128,642,1.336,651,2.272,687,1.194,722,2.863,733,2.253,832,1.827,867,1.792,870,4.254,893,1.336,1038,2.496,1078,2.372,1164,1.336,1228,1.234,1288,1.336,1325,1.5,1340,1.336,1344,3.458,1450,1.159,1461,1.5,1466,1.5,1711,1.336,1712,3.59,1713,1.643,1714,1.643,1715,1.5,1716,2.663,1717,1.643,1718,1.643,1719,1.643,1720,1.643,1721,4.075,1722,1.643,1723,2.663,1724,1.643,1725,1.643,1726,1.643,1727,1.643,1728,1.643,1729,1.643,1730,2.916,1731,4.76,1732,1.643,1733,2.916,1734,2.916,1735,1.643,1736,1.643,1737,1.643,1738,2.663,1739,1.643,1740,6.53,1741,5.449,1742,3.365,1743,1.643,1744,1.643,1745,1.643,1746,1.643,1747,2.916,1748,4.76,1749,1.5,1750,1.643,1751,1.643,1752,1.643,1753,2.916,1754,1.643,1755,3.59,1756,1.643,1757,2.916,1758,1.643,1759,1.643,1760,1.643,1761,1.643,1762,1.5]],["component/36",[3,0.487]],["title/37-1",[97,24.308,1763,44.198]],["name/37-1",[]],["text/37-1",[]],["component/37-1",[]],["title/37",[]],["name/37",[97,0.438,1763,0.797]],["text/37",[12,1.837,19,4.662,47,2.503,97,2.546,161,5.716,162,4.788,287,3.24,349,3.427,370,5.015,425,2.977,507,5.039,638,4.349,664,4.805,1027,4.63,1344,4.48,1763,4.63,1764,5.278,1765,5.278,1766,6.166,1767,5.631,1768,6.166]],["component/37",[3,0.487]],["title/38-1",[44,38.492,635,44.198]],["name/38-1",[]],["text/38-1",[]],["component/38-1",[]],["title/38-2",[874,49.534]],["name/38-2",[]],["text/38-2",[]],["component/38-2",[]],["title/38",[]],["name/38",[44,0.694,635,0.797]],["text/38",[19,4.667,23,2.321,44,2.321,50,1.592,83,1.676,97,1.466,129,2.436,151,2.362,162,3.193,193,2.103,223,3.246,307,2.321,348,4.048,349,1.972,437,4.183,460,2.321,529,4.341,634,3.241,635,2.665,789,2.765,866,2.224,867,3.424,984,3.038,1339,4.531,1344,4.048,1712,3.241,1721,3.038,1738,3.241,1763,2.665,1769,2.886,1770,3.549,1771,5.571,1772,3.549,1773,3.549,1774,4.769,1775,3.549,1776,3.241,1777,5.571,1778,5.571,1779,5.571,1780,5.571,1781,3.549,1782,2.765,1783,3.549,1784,7.114,1785,5.571,1786,3.549,1787,3.549,1788,3.549,1789,2.665,1790,3.549,1791,3.549,1792,3.549,1793,3.549,1794,3.549,1795,3.549]],["component/38",[3,0.487]],["title/39",[1796,67.575]],["name/39",[1796,1.752]],["text/39",[]],["component/39",[3,0.487]],["title/40",[6,29.774,42,37.658]],["name/40",[6,0.537,42,0.679]],["text/40",[]],["component/40",[3,0.487]],["title/41-1",[47,16.958,177,20.395,425,20.166,874,27.963]],["name/41-1",[]],["text/41-1",[]],["component/41-1",[]],["title/41-2",[30,18.681,47,14.809,151,15.469,177,17.81,425,17.61]],["name/41-2",[]],["text/41-2",[]],["component/41-2",[]],["title/41-3",[47,16.958,177,20.395,722,21.95,874,27.963]],["name/41-3",[]],["text/41-3",[]],["component/41-3",[]],["title/41-4",[30,18.681,47,14.809,151,15.469,177,17.81,722,19.167]],["name/41-4",[]],["text/41-4",[]],["component/41-4",[]],["title/41",[151,24.961,177,28.738]],["name/41",[151,0.45,177,0.518]],["text/41",[4,0.789,11,1.434,12,1.072,19,3.42,30,1.843,31,0.686,45,1.434,46,0.727,47,1.924,48,1.719,50,0.51,55,0.712,58,0.727,65,0.543,66,1.971,78,0.712,83,1.37,84,2.538,88,1.084,92,0.641,123,4.017,125,1.178,128,2.838,135,0.853,143,2.178,144,0.761,147,1.612,151,3.673,161,1.75,162,2.063,163,0.743,164,0.699,172,1.367,177,4.008,180,0.674,181,2.814,182,1.943,188,2.353,190,2.927,193,1.719,194,2.409,195,1.198,211,0.651,212,0.853,222,0.78,223,1.218,243,1.044,244,1.434,251,1.238,252,0.853,259,0.727,262,0.761,271,0.886,287,2.21,301,2.102,303,0.78,307,2.353,313,2.288,317,1.31,318,0.973,336,1.474,338,0.924,345,0.761,349,1.612,355,3.845,360,0.853,370,0.924,380,1.261,408,0.699,412,1.589,418,0.727,424,0.662,425,1.009,484,1.337,502,1.399,512,0.924,525,1.474,685,1.629,722,1.098,726,0.802,730,1.337,751,0.686,820,0.761,824,3.253,832,4.658,847,2.47,866,3.98,867,1.284,870,1.474,874,0.761,875,0.712,897,4.328,977,0.924,983,0.78,1032,2.538,1077,0.924,1078,0.924,1110,0.973,1111,2.483,1186,0.973,1293,1.7,1310,4.479,1320,4.229,1321,0.853,1330,1.789,1601,0.973,1635,1.789,1640,0.826,1797,2.09,1798,2.09,1799,2.09,1800,2.09,1801,1.137,1802,1.038,1803,3.599,1804,1.038,1805,0.973,1806,1.137,1807,1.137,1808,1.137,1809,2.09,1810,2.09,1811,2.09,1812,1.137,1813,2.09,1814,2.09,1815,2.09,1816,1.137,1817,2.09,1818,1.137,1819,1.137,1820,0.924,1821,1.137,1822,1.137,1823,1.137,1824,1.137,1825,2.09,1826,2.09,1827,1.137,1828,1.137,1829,1.137,1830,1.137]],["component/41",[3,0.487]],["title/42-1",[47,16.958,123,25.199,760,20.166,1831,30.351]],["name/42-1",[]],["text/42-1",[]],["component/42-1",[]],["title/42-2",[123,25.199,288,26.179,1310,29.462,1535,33.976]],["name/42-2",[]],["text/42-2",[]],["component/42-2",[]],["title/42-3",[497,41.123]],["name/42-3",[]],["text/42-3",[]],["component/42-3",[]],["title/42-4",[216,44.638]],["name/42-4",[]],["text/42-4",[]],["component/42-4",[]],["title/42",[4,22.225,123,35.507]],["name/42",[4,0.401,123,0.64]],["text/42",[1,0.642,4,1.007,6,0.399,7,1.421,12,0.443,19,4.953,46,0.26,47,1.188,48,0.241,50,0.515,51,0.26,83,0.542,88,0.211,90,0.233,96,0.26,97,0.326,101,0.39,102,0.305,114,0.266,123,2.054,128,2.677,129,3.89,139,0.279,143,0.592,147,5.329,156,0.494,157,0.287,161,0.245,163,0.266,164,0.25,169,0.194,173,0.245,180,0.68,181,0.976,182,0.426,194,1.604,195,0.658,210,1.209,211,0.452,216,0.245,238,0.615,243,0.203,244,0.279,246,0.272,247,0.934,265,0.199,268,0.287,274,0.245,287,1.108,288,0.932,301,0.203,303,0.279,313,0.196,317,3.379,323,1.867,325,0.371,326,0.241,327,0.371,329,0.371,343,0.516,349,0.438,380,0.245,403,0.272,413,0.371,418,0.26,420,0.305,424,0.237,425,0.554,434,0.72,436,0.272,453,3.246,493,0.348,496,0.371,497,2.458,498,2.003,502,2.428,507,5.942,508,0.592,529,0.615,549,0.516,564,0.331,597,0.266,604,0.317,651,0.317,670,0.371,715,0.279,722,0.949,724,0.279,729,0.279,730,0.26,731,0.834,733,0.233,751,0.245,752,0.305,760,0.196,832,0.72,852,0.348,866,1.987,885,0.505,917,0.348,923,2.893,984,0.348,1016,0.348,1028,0.983,1065,0.26,1080,0.305,1087,0.556,1088,0.331,1111,1.273,1142,0.279,1186,1.547,1192,0.272,1194,0.615,1233,0.317,1284,0.592,1310,1.049,1334,2.17,1336,2.304,1344,0.573,1347,0.296,1453,0.287,1534,0.331,1535,1.949,1536,0.675,1540,0.371,1541,1.358,1542,0.371,1543,0.348,1544,2.896,1545,0.72,1546,1.048,1548,0.371,1549,0.983,1550,0.348,1551,1.358,1553,2.504,1554,1.65,1556,1.048,1557,1.048,1558,1.048,1559,0.72,1561,0.371,1562,1.358,1565,0.371,1566,1.048,1567,0.331,1571,1.048,1573,1.358,1574,2.188,1575,0.934,1579,1.048,1580,1.65,1581,1.65,1582,1.048,1588,0.675,1617,0.371,1649,0.348,1687,0.72,1763,0.305,1769,0.331,1774,0.348,1831,0.834,1832,0.407,1833,0.407,1834,0.407,1835,0.407,1836,0.305,1837,0.266,1838,0.407,1839,0.407,1840,0.407,1841,0.407,1842,0.407,1843,0.407,1844,1.358,1845,0.407,1846,0.789,1847,0.407,1848,0.407,1849,0.407,1850,1.487,1851,0.407,1852,0.407,1853,0.789,1854,0.407,1855,3.109,1856,3.87,1857,4.238,1858,0.407,1859,0.407,1860,0.407,1861,0.407,1862,0.407,1863,1.807,1864,0.407,1865,0.407,1866,0.407,1867,0.407,1868,0.789,1869,1.148,1870,0.407,1871,2.109,1872,1.148,1873,1.148,1874,0.789,1875,3.405,1876,0.789,1877,0.407,1878,0.407,1879,0.407,1880,0.407,1881,0.407,1882,0.407,1883,0.317,1884,1.148,1885,0.407,1886,0.331,1887,0.371,1888,0.407,1889,0.331,1890,0.407,1891,0.407,1892,0.371,1893,0.407,1894,0.407]],["component/42",[3,0.487]],["title/43",[4,22.225,127,28.738]],["name/43",[4,0.401,127,0.518]],["text/43",[3,1.693,4,3.041,12,1.367,19,1.911,30,3.469,47,1.862,49,2.167,51,2.935,65,2.19,83,3.2,88,2.379,127,4.343,129,3.149,139,3.149,151,3.416,177,2.24,182,2.477,183,5.852,188,3,194,3.071,218,3.149,273,2.629,301,2.293,336,3.235,338,3.731,412,2.512,508,3.444,509,3.333,525,4.778,604,3.575,722,2.41,730,2.935,832,2.875,847,3.149,867,2.819,1032,3.235,1128,3.333,1272,3.333,1360,3.927,1362,3.575,1789,3.444,1895,6.775,1896,6.775,1897,6.775]],["component/43",[3,0.487]],["title/44-1",[50,26.409,177,28.738]],["name/44-1",[]],["text/44-1",[]],["component/44-1",[]],["title/44",[4,22.225,177,28.738]],["name/44",[4,0.401,177,0.518]],["text/44",[4,3.797,6,1.573,12,1.877,31,1.875,33,2.259,43,3.311,47,1.262,49,4.004,50,3.243,65,3.786,66,3.451,90,1.782,125,2.036,128,1.468,136,1.656,147,2.787,151,1.318,168,2.635,173,1.875,177,5.084,182,3.402,219,2.193,252,2.334,265,1.518,273,1.782,293,2.081,334,2.259,336,2.193,345,2.081,349,1.728,355,3.208,424,1.811,436,2.081,513,5.819,514,2.081,560,2.423,644,2.193,682,2.661,685,3.907,729,2.134,866,1.948,874,2.081,983,2.134,986,2.661,1310,2.193,1372,2.259,1448,2.839,1496,2.839,1512,2.661,1589,2.839,1708,2.839,1898,5.014,1899,3.109,1900,3.109,1901,2.529,1902,3.109,1903,2.529,1904,2.661]],["component/44",[3,0.487]],["title/45-1",[6,29.774,1905,58.861]],["name/45-1",[]],["text/45-1",[]],["component/45-1",[]],["title/45-2",[6,21.13,128,19.729,885,26.725,1339,33.976]],["name/45-2",[]],["text/45-2",[]],["component/45-2",[]],["title/45-3",[6,29.774,95,37.658]],["name/45-3",[]],["text/45-3",[]],["component/45-3",[]],["title/45",[4,22.225,6,29.774]],["name/45",[4,0.401,6,0.537]],["text/45",[4,1.007,5,2.003,6,4.791,7,0.792,12,0.443,19,3.479,30,0.762,42,0.951,43,0.781,47,2.502,50,1.985,59,0.995,65,1.274,66,0.814,83,1.713,85,1.707,90,0.852,91,1.159,95,4.871,97,3.609,101,0.734,110,1.021,112,1.831,114,2.893,122,1.221,127,3.85,128,2.406,138,1.174,147,2.831,149,1.358,151,0.631,161,0.897,162,1.529,172,0.972,180,1.581,181,1.44,182,0.803,195,0.852,205,0.972,210,2.92,211,1.529,223,1.554,228,1.273,265,0.726,267,1.609,268,1.049,287,0.781,307,2.893,343,0.972,347,1.672,348,1.08,349,1.483,372,0.972,380,0.897,404,1.745,407,1.581,531,0.839,538,0.897,539,2.188,566,0.972,602,0.951,646,1.273,675,1.938,722,2.325,750,1.273,751,0.897,847,1.021,866,0.932,867,1.639,875,0.932,923,3.707,936,1.021,1010,1.273,1024,1.08,1027,1.117,1032,1.049,1074,1.358,1142,1.021,1194,1.159,1228,1.117,1297,1.273,1328,1.209,1336,2.636,1340,2.17,1341,1.08,1482,0.743,1529,1.021,1658,1.159,1672,1.117,1702,2.284,1711,4.144,1767,2.436,1844,1.358,1889,2.17,1906,2.668,1907,1.273,1908,1.273,1909,2.17,1910,1.487,1911,1.487,1912,1.358,1913,1.117,1914,1.358,1915,3.628,1916,3.628,1917,2.284,1918,1.273,1919,4.424,1920,1.273,1921,2.668,1922,1.273,1923,2.436,1924,3.628,1925,2.668,1926,2.668,1927,1.487,1928,1.487,1929,2.668,1930,4.361,1931,1.487,1932,1.487,1933,1.358,1934,1.487,1935,1.487,1936,1.487,1937,1.358,1938,1.358,1939,2.668]],["component/45",[3,0.487]],["title/46-1",[1940,57.663]],["name/46-1",[]],["text/46-1",[]],["component/46-1",[]],["title/46-2",[1941,67.575]],["name/46-2",[]],["text/46-2",[]],["component/46-2",[]],["title/46-3",[60,33.2]],["name/46-3",[]],["text/46-3",[]],["component/46-3",[]],["title/46-4",[305,34.949]],["name/46-4",[]],["text/46-4",[]],["component/46-4",[]],["title/46-5",[138,32.563]],["name/46-5",[]],["text/46-5",[]],["component/46-5",[]],["title/46-6",[97,24.308,122,26.943]],["name/46-6",[]],["text/46-6",[]],["component/46-6",[]],["title/46-7",[351,28.103,1482,29.417]],["name/46-7",[]],["text/46-7",[]],["component/46-7",[]],["title/46-8",[1942,67.575]],["name/46-8",[]],["text/46-8",[]],["component/46-8",[]],["title/46-9",[60,33.2]],["name/46-9",[]],["text/46-9",[]],["component/46-9",[]],["title/46-10",[305,34.949]],["name/46-10",[]],["text/46-10",[]],["component/46-10",[]],["title/46-11",[138,32.563]],["name/46-11",[]],["text/46-11",[]],["component/46-11",[]],["title/46-12",[97,24.308,122,26.943]],["name/46-12",[]],["text/46-12",[]],["component/46-12",[]],["title/46-13",[351,28.103,1482,29.417]],["name/46-13",[]],["text/46-13",[]],["component/46-13",[]],["title/46-14",[1943,67.575]],["name/46-14",[]],["text/46-14",[]],["component/46-14",[]],["title/46-15",[60,33.2]],["name/46-15",[]],["text/46-15",[]],["component/46-15",[]],["title/46-16",[305,34.949]],["name/46-16",[]],["text/46-16",[]],["component/46-16",[]],["title/46-17",[138,32.563]],["name/46-17",[]],["text/46-17",[]],["component/46-17",[]],["title/46-18",[97,24.308,122,26.943]],["name/46-18",[]],["text/46-18",[]],["component/46-18",[]],["title/46-19",[351,28.103,1482,29.417]],["name/46-19",[]],["text/46-19",[]],["component/46-19",[]],["title/46-20",[1944,57.663]],["name/46-20",[]],["text/46-20",[]],["component/46-20",[]],["title/46-21",[60,33.2]],["name/46-21",[]],["text/46-21",[]],["component/46-21",[]],["title/46-22",[305,34.949]],["name/46-22",[]],["text/46-22",[]],["component/46-22",[]],["title/46-23",[138,32.563]],["name/46-23",[]],["text/46-23",[]],["component/46-23",[]],["title/46-24",[97,24.308,122,26.943]],["name/46-24",[]],["text/46-24",[]],["component/46-24",[]],["title/46-25",[351,28.103,1482,29.417]],["name/46-25",[]],["text/46-25",[]],["component/46-25",[]],["title/46-26",[1945,67.575]],["name/46-26",[]],["text/46-26",[]],["component/46-26",[]],["title/46-27",[60,33.2]],["name/46-27",[]],["text/46-27",[]],["component/46-27",[]],["title/46-28",[305,34.949]],["name/46-28",[]],["text/46-28",[]],["component/46-28",[]],["title/46-29",[138,32.563]],["name/46-29",[]],["text/46-29",[]],["component/46-29",[]],["title/46-30",[97,24.308,122,26.943]],["name/46-30",[]],["text/46-30",[]],["component/46-30",[]],["title/46-31",[351,28.103,1482,29.417]],["name/46-31",[]],["text/46-31",[]],["component/46-31",[]],["title/46-32",[1946,67.575]],["name/46-32",[]],["text/46-32",[]],["component/46-32",[]],["title/46-33",[60,33.2]],["name/46-33",[]],["text/46-33",[]],["component/46-33",[]],["title/46-34",[305,34.949]],["name/46-34",[]],["text/46-34",[]],["component/46-34",[]],["title/46-35",[138,32.563]],["name/46-35",[]],["text/46-35",[]],["component/46-35",[]],["title/46-36",[97,24.308,122,26.943]],["name/46-36",[]],["text/46-36",[]],["component/46-36",[]],["title/46-37",[351,28.103,1482,29.417]],["name/46-37",[]],["text/46-37",[]],["component/46-37",[]],["title/46-38",[1947,55.563]],["name/46-38",[]],["text/46-38",[]],["component/46-38",[]],["title/46-39",[60,33.2]],["name/46-39",[]],["text/46-39",[]],["component/46-39",[]],["title/46-40",[305,34.949]],["name/46-40",[]],["text/46-40",[]],["component/46-40",[]],["title/46-41",[138,32.563]],["name/46-41",[]],["text/46-41",[]],["component/46-41",[]],["title/46-42",[97,24.308,122,26.943]],["name/46-42",[]],["text/46-42",[]],["component/46-42",[]],["title/46-43",[351,28.103,1482,29.417]],["name/46-43",[]],["text/46-43",[]],["component/46-43",[]],["title/46-44",[49,34.949]],["name/46-44",[]],["text/46-44",[]],["component/46-44",[]],["title/46-45",[60,33.2]],["name/46-45",[]],["text/46-45",[]],["component/46-45",[]],["title/46-46",[305,34.949]],["name/46-46",[]],["text/46-46",[]],["component/46-46",[]],["title/46-47",[138,32.563]],["name/46-47",[]],["text/46-47",[]],["component/46-47",[]],["title/46-48",[97,24.308,122,26.943]],["name/46-48",[]],["text/46-48",[]],["component/46-48",[]],["title/46-49",[351,28.103,1482,29.417]],["name/46-49",[]],["text/46-49",[]],["component/46-49",[]],["title/46-50",[1948,55.563]],["name/46-50",[]],["text/46-50",[]],["component/46-50",[]],["title/46-51",[60,33.2]],["name/46-51",[]],["text/46-51",[]],["component/46-51",[]],["title/46-52",[305,34.949]],["name/46-52",[]],["text/46-52",[]],["component/46-52",[]],["title/46-53",[138,32.563]],["name/46-53",[]],["text/46-53",[]],["component/46-53",[]],["title/46-54",[97,24.308,122,26.943]],["name/46-54",[]],["text/46-54",[]],["component/46-54",[]],["title/46-55",[351,28.103,1482,29.417]],["name/46-55",[]],["text/46-55",[]],["component/46-55",[]],["title/46-56",[101,36.547]],["name/46-56",[]],["text/46-56",[]],["component/46-56",[]],["title/46-57",[1372,53.764]],["name/46-57",[]],["text/46-57",[]],["component/46-57",[]],["title/46-58",[60,33.2]],["name/46-58",[]],["text/46-58",[]],["component/46-58",[]],["title/46-59",[305,34.949]],["name/46-59",[]],["text/46-59",[]],["component/46-59",[]],["title/46-60",[138,32.563]],["name/46-60",[]],["text/46-60",[]],["component/46-60",[]],["title/46-61",[97,24.308,122,26.943]],["name/46-61",[]],["text/46-61",[]],["component/46-61",[]],["title/46-62",[351,28.103,1482,29.417]],["name/46-62",[]],["text/46-62",[]],["component/46-62",[]],["title/46-63",[1949,60.186]],["name/46-63",[]],["text/46-63",[]],["component/46-63",[]],["title/46-64",[60,33.2]],["name/46-64",[]],["text/46-64",[]],["component/46-64",[]],["title/46-65",[305,34.949]],["name/46-65",[]],["text/46-65",[]],["component/46-65",[]],["title/46-66",[138,32.563]],["name/46-66",[]],["text/46-66",[]],["component/46-66",[]],["title/46-67",[97,24.308,122,26.943]],["name/46-67",[]],["text/46-67",[]],["component/46-67",[]],["title/46-68",[351,28.103,1482,29.417]],["name/46-68",[]],["text/46-68",[]],["component/46-68",[]],["title/46-69",[1950,53.764]],["name/46-69",[]],["text/46-69",[]],["component/46-69",[]],["title/46-70",[60,33.2]],["name/46-70",[]],["text/46-70",[]],["component/46-70",[]],["title/46-71",[305,34.949]],["name/46-71",[]],["text/46-71",[]],["component/46-71",[]],["title/46-72",[138,32.563]],["name/46-72",[]],["text/46-72",[]],["component/46-72",[]],["title/46-73",[97,24.308,122,26.943]],["name/46-73",[]],["text/46-73",[]],["component/46-73",[]],["title/46-74",[351,28.103,1482,29.417]],["name/46-74",[]],["text/46-74",[]],["component/46-74",[]],["title/46-75",[101,36.547]],["name/46-75",[]],["text/46-75",[]],["component/46-75",[]],["title/46-76",[1295,53.764]],["name/46-76",[]],["text/46-76",[]],["component/46-76",[]],["title/46-77",[60,33.2]],["name/46-77",[]],["text/46-77",[]],["component/46-77",[]],["title/46-78",[305,34.949]],["name/46-78",[]],["text/46-78",[]],["component/46-78",[]],["title/46-79",[138,32.563]],["name/46-79",[]],["text/46-79",[]],["component/46-79",[]],["title/46-80",[97,24.308,122,26.943]],["name/46-80",[]],["text/46-80",[]],["component/46-80",[]],["title/46-81",[351,28.103,1482,29.417]],["name/46-81",[]],["text/46-81",[]],["component/46-81",[]],["title/46-82",[1913,55.563]],["name/46-82",[]],["text/46-82",[]],["component/46-82",[]],["title/46-83",[60,33.2]],["name/46-83",[]],["text/46-83",[]],["component/46-83",[]],["title/46-84",[305,34.949]],["name/46-84",[]],["text/46-84",[]],["component/46-84",[]],["title/46-85",[138,32.563]],["name/46-85",[]],["text/46-85",[]],["component/46-85",[]],["title/46-86",[97,24.308,122,26.943]],["name/46-86",[]],["text/46-86",[]],["component/46-86",[]],["title/46-87",[351,28.103,1482,29.417]],["name/46-87",[]],["text/46-87",[]],["component/46-87",[]],["title/46-88",[101,36.547]],["name/46-88",[]],["text/46-88",[]],["component/46-88",[]],["title/46-89",[1909,60.186]],["name/46-89",[]],["text/46-89",[]],["component/46-89",[]],["title/46-90",[60,33.2]],["name/46-90",[]],["text/46-90",[]],["component/46-90",[]],["title/46-91",[305,34.949]],["name/46-91",[]],["text/46-91",[]],["component/46-91",[]],["title/46-92",[138,32.563]],["name/46-92",[]],["text/46-92",[]],["component/46-92",[]],["title/46-93",[97,24.308,122,26.943]],["name/46-93",[]],["text/46-93",[]],["component/46-93",[]],["title/46-94",[351,28.103,1482,29.417]],["name/46-94",[]],["text/46-94",[]],["component/46-94",[]],["title/46",[43,30.929,65,28.103]],["name/46",[43,0.385,65,0.35,1951,0.734]],["text/46",[4,2.765,6,2.582,7,2.502,12,0.652,17,0.339,19,4.138,20,0.567,24,0.281,25,1.278,30,0.499,33,0.368,37,0.588,43,2.682,45,0.347,47,0.395,48,0.577,49,0.856,50,2.375,54,0.687,60,0.632,61,0.992,65,3.829,66,0.771,75,0.3,83,0.665,86,1.269,88,0.94,95,1.836,96,0.623,97,1.653,100,0.526,101,0.481,112,0.669,114,1.185,122,1.588,124,0.567,125,1.907,126,0.82,127,3.187,128,1.355,131,0.731,132,0.295,136,0.519,138,0.62,139,1.743,145,0.311,151,1.077,152,1.535,153,0.412,156,0.61,158,2.609,162,0.558,163,0.331,168,0.74,169,0.672,173,0.588,177,2.395,180,0.834,182,0.273,183,0.368,188,0.331,193,0.834,194,0.339,195,0.29,201,0.266,210,3.137,211,0.558,217,0.783,218,0.347,219,0.357,220,0.637,223,0.295,237,1.371,242,0.759,243,1.871,244,1.743,246,0.339,248,0.317,249,0.687,251,0.3,256,0.339,259,0.324,261,0.759,262,0.943,263,0.759,267,0.305,270,0.599,273,1.989,277,1.741,287,0.952,288,0.317,293,0.339,301,1.094,313,0.244,317,0.317,326,0.3,335,0.394,343,1.876,347,0.317,349,0.541,355,0.324,361,0.357,407,0.3,408,0.311,412,0.277,418,0.324,419,0.317,422,1.159,424,0.295,425,0.875,433,0.317,434,0.317,435,0.347,440,0.347,441,0.347,454,0.61,455,0.357,460,0.331,482,0.394,484,0.623,497,1.595,506,0.394,513,0.347,514,0.943,524,0.637,525,2.447,526,0.368,528,0.368,539,0.588,566,1.185,571,0.882,581,0.368,598,0.357,644,0.357,675,1.59,684,0.412,721,1.185,722,0.74,725,0.588,728,0.394,733,1.456,735,0.357,780,0.311,792,0.357,805,0.324,807,0.38,832,0.61,843,0.394,885,0.623,923,6.144,935,0.38,936,0.347,943,0.394,973,0.412,1004,0.759,1056,0.394,1065,0.901,1087,0.357,1158,0.368,1167,0.357,1177,0.394,1238,0.317,1272,0.708,1284,0.731,1295,1.316,1320,1.36,1341,3.413,1347,1.316,1362,0.759,1372,0.368,1383,0.412,1405,1.743,1453,0.357,1473,1.643,1569,2.917,1627,0.759,1640,0.368,1672,1.057,1700,0.394,1805,0.433,1837,0.921,1886,0.412,1901,0.412,1903,0.412,1913,0.38,1918,0.433,1920,0.433,1944,0.394,1947,0.38,1948,0.38,1949,0.412,1950,0.368,1952,0.433,1953,0.433,1954,0.433,1955,0.462,1956,0.462,1957,0.462,1958,0.462,1959,4.022,1960,0.462,1961,0.834,1962,0.462,1963,0.889,1964,0.462,1965,1.145,1966,0.462,1967,0.834,1968,0.462,1969,0.889,1970,0.462,1971,0.792,1972,0.394,1973,0.462,1974,2.174,1975,2.32,1976,3.254,1977,2.32,1978,2.32,1979,0.433,1980,0.433,1981,0.462,1982,0.889,1983,1.205,1984,0.433,1985,0.433,1986,0.506,1987,0.462,1988,0.889,1989,0.889,1990,0.412,1991,0.687,1992,1.145,1993,0.433,1994,0.433,1995,0.433,1996,0.433,1997,0.433,1998,0.462,1999,0.462,2000,0.462,2001,0.462,2002,0.889,2003,1.705,2004,0.433,2005,0.433,2006,0.462,2007,0.834,2008,0.462,2009,0.834,2010,0.462,2011,0.462,2012,0.433,2013,0.433,2014,0.462,2015,0.834,2016,0.433,2017,0.462]],["component/46",[3,0.487]],["title/47-1",[1271,63.345]],["name/47-1",[]],["text/47-1",[]],["component/47-1",[]],["title/47-2",[60,33.2]],["name/47-2",[]],["text/47-2",[]],["component/47-2",[]],["title/47-3",[305,34.949]],["name/47-3",[]],["text/47-3",[]],["component/47-3",[]],["title/47-4",[97,24.308,122,26.943]],["name/47-4",[]],["text/47-4",[]],["component/47-4",[]],["title/47-5",[351,28.103,1482,29.417]],["name/47-5",[]],["text/47-5",[]],["component/47-5",[]],["title/47-6",[275,57.663]],["name/47-6",[]],["text/47-6",[]],["component/47-6",[]],["title/47-7",[2018,63.345]],["name/47-7",[]],["text/47-7",[]],["component/47-7",[]],["title/47-8",[60,33.2]],["name/47-8",[]],["text/47-8",[]],["component/47-8",[]],["title/47-9",[305,34.949]],["name/47-9",[]],["text/47-9",[]],["component/47-9",[]],["title/47-10",[138,32.563]],["name/47-10",[]],["text/47-10",[]],["component/47-10",[]],["title/47-11",[97,24.308,122,26.943]],["name/47-11",[]],["text/47-11",[]],["component/47-11",[]],["title/47-12",[351,28.103,1482,29.417]],["name/47-12",[]],["text/47-12",[]],["component/47-12",[]],["title/47-13",[1947,55.563]],["name/47-13",[]],["text/47-13",[]],["component/47-13",[]],["title/47-14",[60,33.2]],["name/47-14",[]],["text/47-14",[]],["component/47-14",[]],["title/47-15",[305,34.949]],["name/47-15",[]],["text/47-15",[]],["component/47-15",[]],["title/47-16",[138,32.563]],["name/47-16",[]],["text/47-16",[]],["component/47-16",[]],["title/47-17",[97,24.308,122,26.943]],["name/47-17",[]],["text/47-17",[]],["component/47-17",[]],["title/47-18",[351,28.103,1482,29.417]],["name/47-18",[]],["text/47-18",[]],["component/47-18",[]],["title/47-19",[49,34.949]],["name/47-19",[]],["text/47-19",[]],["component/47-19",[]],["title/47-20",[60,33.2]],["name/47-20",[]],["text/47-20",[]],["component/47-20",[]],["title/47-21",[305,34.949]],["name/47-21",[]],["text/47-21",[]],["component/47-21",[]],["title/47-22",[138,32.563]],["name/47-22",[]],["text/47-22",[]],["component/47-22",[]],["title/47-23",[351,28.103,1482,29.417]],["name/47-23",[]],["text/47-23",[]],["component/47-23",[]],["title/47-24",[1948,55.563]],["name/47-24",[]],["text/47-24",[]],["component/47-24",[]],["title/47-25",[60,33.2]],["name/47-25",[]],["text/47-25",[]],["component/47-25",[]],["title/47-26",[305,34.949]],["name/47-26",[]],["text/47-26",[]],["component/47-26",[]],["title/47-27",[138,32.563]],["name/47-27",[]],["text/47-27",[]],["component/47-27",[]],["title/47-28",[97,24.308,122,26.943]],["name/47-28",[]],["text/47-28",[]],["component/47-28",[]],["title/47-29",[351,28.103,1482,29.417]],["name/47-29",[]],["text/47-29",[]],["component/47-29",[]],["title/47-30",[101,36.547]],["name/47-30",[]],["text/47-30",[]],["component/47-30",[]],["title/47-31",[1372,53.764]],["name/47-31",[]],["text/47-31",[]],["component/47-31",[]],["title/47-32",[60,33.2]],["name/47-32",[]],["text/47-32",[]],["component/47-32",[]],["title/47-33",[305,34.949]],["name/47-33",[]],["text/47-33",[]],["component/47-33",[]],["title/47-34",[138,32.563]],["name/47-34",[]],["text/47-34",[]],["component/47-34",[]],["title/47-35",[97,24.308,122,26.943]],["name/47-35",[]],["text/47-35",[]],["component/47-35",[]],["title/47-36",[351,28.103,1482,29.417]],["name/47-36",[]],["text/47-36",[]],["component/47-36",[]],["title/47-37",[1950,53.764]],["name/47-37",[]],["text/47-37",[]],["component/47-37",[]],["title/47-38",[60,33.2]],["name/47-38",[]],["text/47-38",[]],["component/47-38",[]],["title/47-39",[305,34.949]],["name/47-39",[]],["text/47-39",[]],["component/47-39",[]],["title/47-40",[138,32.563]],["name/47-40",[]],["text/47-40",[]],["component/47-40",[]],["title/47-41",[97,24.308,122,26.943]],["name/47-41",[]],["text/47-41",[]],["component/47-41",[]],["title/47-42",[351,28.103,1482,29.417]],["name/47-42",[]],["text/47-42",[]],["component/47-42",[]],["title/47-43",[101,36.547]],["name/47-43",[]],["text/47-43",[]],["component/47-43",[]],["title/47-44",[1295,53.764]],["name/47-44",[]],["text/47-44",[]],["component/47-44",[]],["title/47-45",[60,33.2]],["name/47-45",[]],["text/47-45",[]],["component/47-45",[]],["title/47-46",[305,34.949]],["name/47-46",[]],["text/47-46",[]],["component/47-46",[]],["title/47-47",[138,32.563]],["name/47-47",[]],["text/47-47",[]],["component/47-47",[]],["title/47-48",[97,24.308,122,26.943]],["name/47-48",[]],["text/47-48",[]],["component/47-48",[]],["title/47-49",[351,28.103,1482,29.417]],["name/47-49",[]],["text/47-49",[]],["component/47-49",[]],["title/47-50",[1913,55.563]],["name/47-50",[]],["text/47-50",[]],["component/47-50",[]],["title/47-51",[60,33.2]],["name/47-51",[]],["text/47-51",[]],["component/47-51",[]],["title/47-52",[305,34.949]],["name/47-52",[]],["text/47-52",[]],["component/47-52",[]],["title/47-53",[138,32.563]],["name/47-53",[]],["text/47-53",[]],["component/47-53",[]],["title/47-54",[97,24.308,122,26.943]],["name/47-54",[]],["text/47-54",[]],["component/47-54",[]],["title/47-55",[351,28.103,1482,29.417]],["name/47-55",[]],["text/47-55",[]],["component/47-55",[]],["title/47-56",[101,36.547]],["name/47-56",[]],["text/47-56",[]],["component/47-56",[]],["title/47-57",[1909,60.186]],["name/47-57",[]],["text/47-57",[]],["component/47-57",[]],["title/47-58",[60,33.2]],["name/47-58",[]],["text/47-58",[]],["component/47-58",[]],["title/47-59",[305,34.949]],["name/47-59",[]],["text/47-59",[]],["component/47-59",[]],["title/47-60",[138,32.563]],["name/47-60",[]],["text/47-60",[]],["component/47-60",[]],["title/47-61",[97,24.308,122,26.943]],["name/47-61",[]],["text/47-61",[]],["component/47-61",[]],["title/47",[43,30.929,65,28.103]],["name/47",[43,0.385,65,0.35,2019,0.734]],["text/47",[4,2.666,6,2.806,7,2.139,12,1.101,17,0.412,19,3.278,20,0.685,24,0.342,25,1.19,30,0.602,33,0.448,35,0.855,37,0.372,43,3.221,45,0.423,47,0.25,48,1,49,1.018,50,2.829,54,0.434,60,0.757,61,0.924,65,3.55,66,0.644,83,0.555,85,0.394,86,0.588,87,0.434,88,0.875,95,2.146,96,0.752,97,1.781,100,0.635,101,0.581,112,0.423,114,1.104,122,0.987,124,0.685,125,0.875,127,3.16,128,1.584,131,0.883,136,0.626,138,0.518,145,0.723,151,1.266,152,1.041,153,0.501,156,0.386,158,0.685,162,0.967,168,0.887,171,0.807,173,0.372,177,2.242,180,1.278,182,0.333,183,0.448,188,0.403,193,1.278,194,0.412,198,0.723,209,1.373,210,3.408,216,0.372,217,0.938,220,0.769,223,0.359,237,1.622,242,0.916,243,1.848,246,0.412,248,0.386,249,1.19,251,0.365,256,0.412,259,0.394,261,0.916,262,0.787,263,0.916,270,0.379,273,1.711,275,0.48,277,1.417,287,0.887,288,0.386,301,1.078,317,0.386,326,0.365,335,0.48,345,1.443,347,0.386,349,0.654,351,0.294,355,0.394,404,0.769,412,0.644,418,0.394,419,0.386,422,1.38,425,1.041,433,0.386,434,0.386,435,0.423,440,0.423,441,0.423,449,0.916,454,2.102,455,0.434,497,1.438,498,3.239,502,2.688,506,0.48,507,1.561,513,0.423,514,0.787,524,0.769,525,2.366,526,0.448,528,0.448,538,0.709,539,0.372,571,1.058,587,0.527,598,0.434,614,0.957,644,0.434,675,1.226,684,0.501,688,0.957,721,1.41,722,1.133,724,0.807,725,0.372,730,0.394,733,1.236,735,0.434,780,1.037,792,0.434,805,0.394,807,0.463,814,0.48,832,1.351,843,0.48,885,0.752,923,0.403,930,0.916,983,1.48,999,1.074,1025,0.527,1027,0.883,1065,1.08,1077,2.429,1087,0.434,1158,0.448,1167,1.825,1271,0.527,1272,0.855,1284,0.883,1287,1.007,1294,0.916,1295,0.855,1301,0.957,1304,0.957,1320,1.267,1336,0.448,1340,0.501,1347,1.567,1362,0.916,1383,0.501,1405,1.158,1453,0.434,1482,0.308,1512,1.007,1567,0.501,1569,2.017,1615,0.501,1627,0.916,1640,0.448,1672,0.463,1700,0.48,1837,0.769,1883,0.916,1886,0.501,1889,2.429,1901,0.501,1903,0.501,1907,0.527,1908,1.846,1918,0.527,1920,0.527,1940,0.48,1944,0.48,1947,0.463,1952,0.527,1953,0.527,1954,0.527,1959,3.693,1965,0.501,1971,0.501,1974,1.007,1976,2.918,1979,0.527,1980,0.527,1985,0.527,1990,0.501,1991,0.83,2003,2.017,2004,0.527,2005,0.527,2007,0.527,2009,0.527,2012,0.527,2013,0.527,2015,1.007,2016,0.527,2020,0.616,2021,0.616,2022,0.616,2023,0.616,2024,0.563,2025,4.656,2026,3.438,2027,3.667,2028,3.667,2029,0.563,2030,0.563,2031,0.563,2032,0.563,2033,0.957,2034,3.064,2035,0.563,2036,1.541,2037,0.616,2038,1.007,2039,1.373,2040,1.007,2041,1.445,2042,1.445,2043,0.563,2044,1.007,2045,1.007,2046,0.563,2047,1.074,2048,1.074,2049,1.074,2050,2.727,2051,1.176,2052,0.563,2053,1.074,2054,0.563]],["component/47",[3,0.487]],["title/48-1",[47,19.838,722,25.677,1940,38.079]],["name/48-1",[]],["text/48-1",[]],["component/48-1",[]],["title/48-2",[1941,67.575]],["name/48-2",[]],["text/48-2",[]],["component/48-2",[]],["title/48-3",[1942,67.575]],["name/48-3",[]],["text/48-3",[]],["component/48-3",[]],["title/48-4",[1943,67.575]],["name/48-4",[]],["text/48-4",[]],["component/48-4",[]],["title/48-5",[1944,57.663]],["name/48-5",[]],["text/48-5",[]],["component/48-5",[]],["title/48-6",[1945,67.575]],["name/48-6",[]],["text/48-6",[]],["component/48-6",[]],["title/48-7",[47,19.838,539,29.478,1940,38.079]],["name/48-7",[]],["text/48-7",[]],["component/48-7",[]],["title/48-8",[2018,63.345]],["name/48-8",[]],["text/48-8",[]],["component/48-8",[]],["title/48-9",[1947,55.563]],["name/48-9",[]],["text/48-9",[]],["component/48-9",[]],["title/48-10",[49,34.949]],["name/48-10",[]],["text/48-10",[]],["component/48-10",[]],["title/48-11",[1948,55.563]],["name/48-11",[]],["text/48-11",[]],["component/48-11",[]],["title/48-12",[1372,53.764]],["name/48-12",[]],["text/48-12",[]],["component/48-12",[]],["title/48-13",[1949,60.186]],["name/48-13",[]],["text/48-13",[]],["component/48-13",[]],["title/48-14",[1950,53.764]],["name/48-14",[]],["text/48-14",[]],["component/48-14",[]],["title/48-15",[1295,53.764]],["name/48-15",[]],["text/48-15",[]],["component/48-15",[]],["title/48-16",[1913,55.563]],["name/48-16",[]],["text/48-16",[]],["component/48-16",[]],["title/48-17",[1909,60.186]],["name/48-17",[]],["text/48-17",[]],["component/48-17",[]],["title/48",[43,30.929,65,28.103]],["name/48",[43,0.558,65,0.507]],["text/48",[4,2.429,6,2.077,7,2.092,12,0.572,17,0.245,19,4.099,20,0.414,24,0.203,25,1.158,30,0.364,33,0.265,37,0.429,43,2.99,44,0.239,45,0.251,46,0.234,47,2.357,48,0.421,49,0.636,50,2.134,54,0.501,57,0.297,60,1.994,61,0.738,65,3.397,66,0.568,75,0.216,83,0.49,85,0.234,86,1.093,88,0.851,95,1.399,96,0.455,97,2.489,100,0.384,101,0.811,112,0.488,114,0.881,122,2.493,124,0.414,125,1.667,126,0.604,127,2.835,128,1.033,131,0.534,132,0.213,136,0.378,138,2.026,139,1.318,145,0.437,151,0.815,152,1.178,153,0.578,156,0.445,158,2.067,162,0.407,163,0.239,168,0.545,169,0.495,173,0.429,177,1.918,180,0.615,182,0.197,183,0.265,188,0.239,193,0.615,194,0.245,195,0.209,201,0.192,210,2.893,211,0.595,217,0.576,218,0.251,219,0.258,220,0.465,223,0.213,237,1.029,239,0.274,242,0.808,243,1.566,244,1.501,246,0.245,248,0.229,249,0.501,251,0.216,256,0.245,261,0.554,262,0.694,263,0.554,270,0.437,273,1.796,277,1.336,287,0.708,288,0.229,293,0.245,301,0.96,305,1.94,313,0.176,317,0.229,326,0.216,335,0.285,343,1.43,347,0.229,349,0.395,351,1.875,355,0.234,361,0.258,385,0.224,407,0.216,412,0.2,418,0.234,419,0.229,422,0.862,424,0.213,425,1.178,433,0.445,434,0.229,435,0.251,440,0.251,441,0.251,454,0.445,455,0.258,460,0.239,482,0.285,484,0.455,497,1.215,498,2.014,502,1.796,506,0.554,513,0.251,514,0.694,524,0.465,525,2.36,526,0.265,528,0.265,539,2.018,566,0.881,571,0.65,581,0.265,598,0.258,644,0.732,675,1.589,721,0.881,722,2.064,725,0.429,728,0.285,730,0.234,733,1.399,735,0.258,780,0.224,792,0.258,805,0.234,807,0.274,832,0.445,843,0.285,885,0.455,923,5.535,935,0.274,936,0.251,943,0.285,973,0.297,1004,0.554,1056,0.285,1065,0.664,1087,0.258,1158,0.265,1167,0.258,1177,0.285,1238,0.229,1272,0.516,1284,0.534,1295,0.979,1320,1.012,1336,0.265,1341,2.719,1347,0.979,1362,0.808,1372,0.265,1383,0.297,1405,1.318,1453,0.258,1473,1.232,1482,1.963,1567,0.297,1569,2.442,1627,0.808,1640,0.265,1672,0.779,1700,0.285,1769,0.297,1805,0.313,1837,0.881,1883,0.285,1886,0.297,1889,1.335,1901,0.297,1903,0.297,1907,0.313,1908,0.608,1913,0.274,1940,0.285,1944,0.285,1946,0.334,1947,0.274,1948,0.274,1949,0.297,1950,0.265,1952,0.313,1953,0.313,1954,0.313,1955,0.334,1956,0.334,1957,0.334,1958,0.334,1959,3.203,1960,0.334,1961,0.608,1962,0.334,1963,0.649,1964,0.334,1965,0.844,1966,0.334,1967,0.608,1968,0.334,1969,0.649,1970,0.334,1971,1.096,1972,0.285,1973,0.334,1974,1.872,1975,1.754,1976,2.984,1977,1.754,1978,1.754,1979,0.313,1980,0.313,1981,0.334,1982,0.649,1983,0.888,1984,0.313,1985,0.313,1987,0.334,1988,0.649,1989,0.649,1990,0.297,1991,0.732,1992,0.844,1993,0.313,1994,0.313,1995,0.313,1996,0.313,1997,0.313,1998,0.334,1999,0.334,2000,0.334,2001,0.334,2002,0.649,2003,1.902,2004,0.313,2005,0.313,2006,0.334,2007,0.608,2008,0.334,2009,0.608,2010,0.334,2011,0.334,2012,0.313,2013,0.313,2014,0.334,2015,0.608,2016,0.608,2017,0.334,2018,0.313,2024,0.334,2025,2.449,2026,2.296,2027,2.449,2028,2.449,2029,0.334,2030,0.334,2031,0.334,2032,0.334,2033,0.297,2034,1.754,2035,0.334,2036,0.947,2038,0.608,2039,0.844,2040,0.608,2041,0.888,2042,0.888,2043,0.334,2044,0.608,2045,0.608,2046,0.334,2047,0.649,2048,0.649,2049,0.649,2052,0.334,2053,0.649,2054,0.334,2055,0.334,2056,0.365,2057,0.365,2058,0.365,2059,0.365,2060,0.365]],["component/48",[3,0.487]],["title/49-1",[152,28.416,2061,50.388]],["name/49-1",[]],["text/49-1",[]],["component/49-1",[]],["title/49-2",[151,24.961,152,28.416]],["name/49-2",[]],["text/49-2",[]],["component/49-2",[]],["title/49",[8,39.402,152,28.416]],["name/49",[2061,1.642]],["text/49",[7,2.031,11,2.618,12,1.485,19,4.465,23,1.462,30,1.145,50,2.237,75,1.325,83,1.056,86,1.117,87,1.577,100,1.207,103,1.401,125,3.288,126,2.222,127,1.092,131,2.863,132,1.303,136,1.191,147,1.243,148,1.374,151,3.26,152,4.468,158,2.905,161,3.008,162,1.282,198,1.374,262,1.497,305,1.056,307,3.261,313,1.079,349,2.771,375,1.462,404,3.261,418,1.431,419,1.401,424,1.303,426,1.819,484,1.431,497,2.771,507,1.349,512,1.819,685,1.742,721,1.462,722,3.096,729,2.618,867,2.344,871,4.424,894,1.742,895,1.819,1001,3.265,1004,1.742,1005,1.914,1011,2.042,1173,1.819,1607,2.042,1765,5.044,1904,1.914,1961,3.265,1967,3.265,2061,3.265,2062,3.813,2063,6.163,2064,3.813,2065,3.813,2066,5.892,2067,3.813,2068,5.381,2069,2.236,2070,2.236,2071,2.236,2072,1.742,2073,3.483,2074,3.813,2075,2.236,2076,2.236]],["component/49",[3,0.487]],["title/50-1",[125,23.896,270,36.174]],["name/50-1",[]],["text/50-1",[]],["component/50-1",[]],["title/50-2",[281,63.345]],["name/50-2",[]],["text/50-2",[]],["component/50-2",[]],["title/50-3",[248,46.374]],["name/50-3",[]],["text/50-3",[]],["component/50-3",[]],["title/50-4",[283,57.663]],["name/50-4",[]],["text/50-4",[]],["component/50-4",[]],["title/50-5",[284,67.575]],["name/50-5",[]],["text/50-5",[]],["component/50-5",[]],["title/50-6",[282,55.563]],["name/50-6",[]],["text/50-6",[]],["component/50-6",[]],["title/50-7",[125,23.896,258,44.198]],["name/50-7",[]],["text/50-7",[]],["component/50-7",[]],["title/50",[125,23.896,286,53.753]],["name/50",[125,0.298,2077,0.734,2078,0.734]],["text/50",[5,1.834,7,1.301,11,1.677,12,0.728,15,2.284,17,1.635,19,4.252,21,1.358,24,1.358,50,1.096,51,1.563,75,1.448,82,1.987,83,1.941,86,3.479,96,2.63,101,1.207,125,4.086,126,2.395,130,2.231,131,1.834,137,1.775,145,1.501,148,1.501,152,3.361,174,3.086,196,1.987,210,1.4,218,1.677,241,1.987,243,3.479,244,1.677,248,1.531,257,2.231,258,3.086,270,2.526,277,2.251,280,2.231,282,4.685,336,1.723,361,1.723,404,2.688,412,1.338,422,1.563,473,2.688,480,1.501,497,2.284,516,1.723,536,1.904,561,1.987,564,3.343,687,1.775,722,4.604,730,1.563,751,1.474,760,1.179,811,2.986,935,1.834,1065,1.563,1142,1.677,1144,2.231,1241,1.987,1321,1.834,1465,3.203,1473,1.834,1609,3.343,2079,2.443,2080,2.091,2081,2.443,2082,2.443,2083,2.443,2084,2.443,2085,2.443,2086,2.443,2087,2.443,2088,2.443,2089,2.443,2090,2.443,2091,2.443,2092,2.443,2093,2.443,2094,2.443,2095,2.443,2096,2.443,2097,2.443,2098,2.443,2099,2.443,2100,2.443]],["component/50",[3,0.487]],["title/51-1",[125,23.896,313,28.416]],["name/51-1",[]],["text/51-1",[]],["component/51-1",[]],["title/51-2",[49,19.729,125,16.958,151,17.714,875,26.179]],["name/51-2",[]],["text/51-2",[]],["component/51-2",[]],["title/51-3",[75,34.882,125,23.896]],["name/51-3",[]],["text/51-3",[]],["component/51-3",[]],["title/51-4",[75,34.882,1836,44.198]],["name/51-4",[]],["text/51-4",[]],["component/51-4",[]],["title/51-5",[151,20.722,875,30.625,1836,36.692]],["name/51-5",[]],["text/51-5",[]],["component/51-5",[]],["title/51-6",[78,36.889,715,40.403]],["name/51-6",[]],["text/51-6",[]],["component/51-6",[]],["title/51-7",[151,20.722,731,35.504,875,30.625]],["name/51-7",[]],["text/51-7",[]],["component/51-7",[]],["title/51-8",[66,32.235,125,23.896]],["name/51-8",[]],["text/51-8",[]],["component/51-8",[]],["title/51-9",[66,32.235,1831,42.767]],["name/51-9",[]],["text/51-9",[]],["component/51-9",[]],["title/51-10",[151,20.722,875,30.625,1831,35.504]],["name/51-10",[]],["text/51-10",[]],["component/51-10",[]],["title/51-11",[78,36.889,715,40.403]],["name/51-11",[]],["text/51-11",[]],["component/51-11",[]],["title/51-12",[66,32.235,1836,44.198]],["name/51-12",[]],["text/51-12",[]],["component/51-12",[]],["title/51-13",[151,20.722,875,30.625,1836,36.692]],["name/51-13",[]],["text/51-13",[]],["component/51-13",[]],["title/51-14",[151,20.722,731,35.504,875,30.625]],["name/51-14",[]],["text/51-14",[]],["component/51-14",[]],["title/51-15",[49,23.079,125,19.838,169,23.331]],["name/51-15",[]],["text/51-15",[]],["component/51-15",[]],["title/51-16",[49,19.729,151,17.714,169,19.944,875,26.179]],["name/51-16",[]],["text/51-16",[]],["component/51-16",[]],["title/51-17",[132,43.112]],["name/51-17",[]],["text/51-17",[]],["component/51-17",[]],["title/51-18",[412,32.235,1177,45.868]],["name/51-18",[]],["text/51-18",[]],["component/51-18",[]],["title/51",[125,23.896,507,35.507]],["name/51",[125,0.779]],["text/51",[4,1.432,12,1.636,15,1.346,19,3.556,22,1.606,23,0.373,25,0.402,30,2.36,37,0.659,42,0.365,44,0.373,46,0.365,47,0.984,48,1.193,49,1.646,50,2.633,65,0.272,66,2.523,67,1.977,75,2.065,78,1.518,83,1.792,84,0.402,86,0.285,87,1.42,88,0.815,90,0.327,92,0.322,93,0.402,96,0.365,97,1.686,100,0.308,124,0.332,125,3.94,127,1.368,128,0.742,132,1.633,134,2.948,136,0.303,138,0.48,139,1.382,147,1.119,148,1.722,151,3.271,152,0.275,157,1.709,158,0.332,161,3.54,162,0.327,163,1.028,164,1.237,166,0.463,168,1.473,169,1.664,173,0.344,177,2.776,179,0.997,181,0.848,183,0.414,187,0.52,188,1.833,191,0.488,193,1.661,194,1.052,198,1.489,201,1.273,211,0.626,216,0.948,218,0.391,223,0.332,246,2.539,273,1.606,287,0.826,289,0.52,291,2.539,296,0.391,301,2.175,303,0.391,305,0.951,307,1.833,313,3.52,351,0.272,375,0.373,408,0.35,411,0.935,412,1.909,424,0.332,425,0.972,431,0.391,432,0.402,433,0.357,440,0.749,449,0.444,454,1.262,468,3.065,473,1.833,507,2.78,513,0.391,525,1.977,538,0.659,539,0.659,566,0.714,570,1.76,576,1.463,597,2.279,633,0.935,635,0.428,637,0.488,642,0.463,644,0.402,663,0.414,685,0.444,721,0.373,722,2.547,724,0.391,730,1.288,731,1.142,733,0.626,760,0.972,819,1.512,847,1.924,867,1.489,870,0.402,875,1.518,887,1.382,1032,1.977,1037,0.428,1056,1.569,1128,1.463,1158,0.414,1167,0.402,1177,2.716,1216,0.414,1228,0.428,1253,0.52,1324,0.463,1346,0.428,1374,0.997,1498,0.52,1502,0.488,1529,0.391,1627,0.851,1642,0.463,1716,0.52,1769,0.463,1782,0.444,1789,3.46,1831,0.793,1836,1.18,1837,0.373,1904,1.724,1922,0.488,1923,0.52,1972,1.888,1976,1.142,1983,1.345,1990,0.463,2033,0.463,2063,5.172,2101,2.014,2102,0.57,2103,0.57,2104,3.728,2105,2.014,2106,3.156,2107,1.839,2108,0.57,2109,1.092,2110,1.839,2111,0.57,2112,1.435,2113,0.57,2114,0.57,2115,1.092,2116,0.997,2117,0.57,2118,0.57,2119,0.57,2120,0.57,2121,0.57,2122,0.57,2123,0.57,2124,0.488,2125,0.57,2126,0.57,2127,0.57,2128,0.57,2129,0.57,2130,0.57]],["component/51",[3,0.487]],["title/52-1",[10,55.563]],["name/52-1",[]],["text/52-1",[]],["component/52-1",[]],["title/52-2",[7,22.245,412,22.877,723,26.725,1301,33.976]],["name/52-2",[]],["text/52-2",[]],["component/52-2",[]],["title/52-3",[723,37.658,1080,44.198]],["name/52-3",[]],["text/52-3",[]],["component/52-3",[]],["title/52-4",[101,29.072,723,37.658]],["name/52-4",[]],["text/52-4",[]],["component/52-4",[]],["title/52-5",[7,22.245,412,22.877,723,26.725,1216,30.351]],["name/52-5",[]],["text/52-5",[]],["component/52-5",[]],["title/52-6",[723,31.264,1080,36.692,1216,35.504]],["name/52-6",[]],["text/52-6",[]],["component/52-6",[]],["title/52-7",[101,24.135,723,31.264,1216,35.504]],["name/52-7",[]],["text/52-7",[]],["component/52-7",[]],["title/52-8",[24,32.711,2131,53.753]],["name/52-8",[]],["text/52-8",[]],["component/52-8",[]],["title/52",[7,31.346,412,32.235]],["name/52",[7,0.565,412,0.581]],["text/52",[4,3.134,6,3.837,7,1.87,11,1.151,12,1.046,15,0.498,16,0.729,18,0.729,19,2.845,20,0.523,24,1.651,31,0.541,37,0.541,42,0.574,47,0.364,49,2.453,61,0.491,66,1.923,83,1.403,85,1.512,88,0.465,90,2.77,97,2.145,98,0.574,101,1.167,103,0.562,124,0.523,125,0.959,127,2.165,134,2.247,135,0.673,136,3.391,137,0.652,139,2.039,145,1.452,151,1.881,152,0.81,156,1.051,158,2.584,162,2.77,163,1.097,168,2.539,177,3.109,180,0.994,181,0.906,182,0.484,195,0.962,197,0.699,210,2.013,217,0.498,220,0.586,223,0.977,243,1.181,251,0.994,256,0.6,259,0.574,273,3.341,285,1.219,287,0.881,300,0.586,301,0.448,326,1.4,331,1.436,380,1.792,407,1.4,408,0.551,412,1.294,424,0.523,425,2.507,431,0.616,434,0.562,436,1.123,437,2.637,441,0.616,454,0.562,455,3.408,463,0.699,473,1.545,484,1.073,508,0.673,523,0.729,526,1.717,538,2.118,539,0.541,575,0.768,597,1.545,602,0.574,697,0.616,721,1.097,722,0.881,733,1.355,760,1.141,780,5.102,816,0.729,830,1.436,832,1.861,847,3.317,927,2.543,929,2.712,975,0.699,983,0.616,1080,1.774,1132,0.768,1134,0.819,1142,0.616,1192,1.123,1234,1.364,1273,0.768,1274,0.819,1294,0.699,1311,1.307,1312,2.712,1326,0.819,1345,2.856,1346,0.673,1347,2.904,1596,0.819,1601,0.768,1603,0.729,1609,0.729,1615,0.729,1764,2.023,1782,0.699,1802,0.819,1804,0.819,1820,0.729,1831,0.652,1837,0.586,1976,1.717,2050,0.819,2131,2.712,2132,0.819,2133,0.897,2134,0.897,2135,0.819,2136,1.678,2137,0.897,2138,0.897,2139,0.897,2140,1.678,2141,1.678,2142,1.678,2143,1.678,2144,1.678,2145,0.897,2146,2.97,2147,2.97,2148,1.678,2149,1.678,2150,0.897,2151,1.678,2152,0.897,2153,2.158,2154,1.532,2155,0.897,2156,0.897,2157,1.678,2158,0.897,2159,0.897,2160,2.363,2161,1.678,2162,1.678,2163,0.897,2164,0.897,2165,0.897,2166,0.897,2167,0.897,2168,0.897,2169,0.897,2170,0.897,2171,0.897,2172,0.897,2173,0.897,2174,0.897,2175,0.897,2176,0.897,2177,0.897,2178,0.897,2179,0.819,2180,0.897,2181,0.897]],["component/52",[3,0.487]],["title/53-1",[10,55.563]],["name/53-1",[]],["text/53-1",[]],["component/53-1",[]],["title/53-2",[201,30.929,2182,58.861]],["name/53-2",[]],["text/53-2",[]],["component/53-2",[]],["title/53-3",[201,17.011,529,25.228,593,29.564,885,20.712,1238,20.289,2055,29.564]],["name/53-3",[]],["text/53-3",[]],["component/53-3",[]],["title/53-4",[30,37.896]],["name/53-4",[]],["text/53-4",[]],["component/53-4",[]],["title/53-5",[31,35.507,222,40.403]],["name/53-5",[]],["text/53-5",[]],["component/53-5",[]],["title/53-6",[222,40.403,265,28.738]],["name/53-6",[]],["text/53-6",[]],["component/53-6",[]],["title/53-7",[51,37.658,211,33.738]],["name/53-7",[]],["text/53-7",[]],["component/53-7",[]],["title/53-8",[7,31.346,412,32.235]],["name/53-8",[]],["text/53-8",[]],["component/53-8",[]],["title/53-9",[6,29.774,780,36.174]],["name/53-9",[]],["text/53-9",[]],["component/53-9",[]],["title/53-10",[277,32.235,2183,47.875]],["name/53-10",[]],["text/53-10",[]],["component/53-10",[]],["title/53-11",[4,22.225,49,27.8]],["name/53-11",[]],["text/53-11",[]],["component/53-11",[]],["title/53-12",[201,30.929,2184,58.861]],["name/53-12",[]],["text/53-12",[]],["component/53-12",[]],["title/53-13",[201,30.929,1238,36.889]],["name/53-13",[]],["text/53-13",[]],["component/53-13",[]],["title/53",[201,30.929,725,35.507]],["name/53",[201,0.558,725,0.64]],["text/53",[4,1.257,6,1.498,7,1.578,12,0.883,19,3.552,21,1.426,23,1.094,30,0.597,31,0.368,34,0.522,37,0.368,42,2.918,45,0.8,47,1.739,49,1.01,50,0.523,51,0.39,83,1.01,84,0.43,85,1.07,86,1.664,88,0.316,90,1.908,92,0.344,96,0.39,97,0.691,98,0.39,100,0.903,101,1.463,125,2.739,126,2.138,127,1.044,132,0.355,135,0.458,136,0.62,139,0.419,148,0.375,151,1.088,152,0.807,155,0.43,156,1.34,157,0.822,158,2.323,161,1.29,162,0.668,164,0.375,166,0.496,167,1.521,168,0.321,169,0.556,171,0.8,173,0.368,177,0.298,193,0.362,198,1.028,200,0.557,201,3.62,205,0.399,210,1.471,211,0.35,216,0.368,219,0.43,220,0.399,222,2.941,223,0.355,240,1.605,243,2.41,245,1.739,246,0.78,248,0.382,252,1.605,255,0.522,259,2.13,264,0.43,267,0.703,273,0.668,277,1.622,285,0.847,300,0.399,301,0.582,304,0.496,312,0.948,313,0.562,326,0.691,343,0.762,345,0.408,347,0.382,349,0.339,354,1.954,355,0.39,373,0.522,374,0.475,377,0.496,380,1.009,385,0.375,387,0.557,389,0.408,407,0.362,412,0.638,419,0.382,422,0.745,434,1.048,435,0.419,436,0.408,440,0.419,443,0.557,453,0.43,454,0.382,462,2.197,468,0.875,470,0.43,473,0.399,479,1.215,480,0.716,507,0.368,509,1.865,515,1.064,523,0.496,530,2.941,531,0.944,538,0.368,543,0.443,549,0.399,570,0.443,571,0.73,580,0.908,587,0.522,597,0.399,598,0.43,609,1.064,633,0.522,682,0.522,687,0.847,703,0.997,716,0.557,725,1.009,726,0.43,729,0.419,733,0.668,751,0.368,754,0.522,755,2.409,760,0.294,780,3.255,784,2.308,799,0.908,809,0.443,811,0.443,831,0.458,860,0.948,867,2.255,870,0.43,875,0.382,888,0.496,930,0.908,933,0.522,936,0.419,938,1.36,986,0.522,1024,0.443,1027,1.256,1037,0.875,1040,0.496,1056,0.475,1078,0.496,1087,0.43,1104,3.414,1113,1.952,1142,0.419,1167,0.43,1180,0.522,1185,0.522,1203,0.522,1216,0.443,1233,0.475,1238,1.608,1240,0.557,1272,0.847,1273,1.432,1293,1.739,1304,3.71,1310,0.822,1311,0.908,1324,0.496,1345,0.496,1351,0.875,1364,0.557,1405,0.419,1441,0.557,1450,0.822,1465,0.475,1473,0.458,1500,0.557,1506,1.064,1529,0.419,1533,0.522,1564,0.522,1575,0.496,1593,0.557,1640,0.443,1658,0.475,1701,0.557,1702,0.997,1704,0.522,1742,0.997,1764,2.197,1782,0.475,1784,0.557,1789,0.458,1892,0.557,1914,0.557,1930,0.997,1933,0.557,1950,0.443,1965,0.948,1971,0.496,1972,0.475,1976,1.865,1984,0.997,1992,0.496,2003,1.303,2080,0.997,2107,0.557,2135,1.527,2153,1.952,2179,0.557,2183,1.36,2185,0.61,2186,0.61,2187,0.61,2188,0.61,2189,0.61,2190,1.527,2191,0.61,2192,0.61,2193,0.61,2194,0.61,2195,0.61,2196,0.61,2197,0.61,2198,0.557,2199,0.61,2200,0.61,2201,0.61,2202,0.61,2203,0.61,2204,1.064,2205,0.61,2206,0.61,2207,0.61,2208,0.61,2209,0.61,2210,0.61,2211,1.165,2212,0.557,2213,1.673,2214,0.61,2215,1.165,2216,0.557,2217,6.024,2218,0.61,2219,0.61,2220,0.61,2221,0.61,2222,0.61,2223,0.557,2224,0.61,2225,0.557,2226,0.61,2227,1.165,2228,0.61,2229,1.165,2230,0.61,2231,2.567,2232,0.61,2233,0.557,2234,0.61,2235,1.165,2236,0.557,2237,0.61,2238,0.61,2239,2.138,2240,0.61,2241,0.61,2242,0.61,2243,0.61,2244,0.61,2245,0.61,2246,0.61,2247,0.61,2248,0.61,2249,0.61,2250,1.165,2251,2.962,2252,0.61,2253,0.61,2254,0.61,2255,0.61,2256,0.557,2257,1.673,2258,0.61,2259,0.61,2260,0.61,2261,2.567,2262,0.61,2263,0.557,2264,0.61,2265,0.61,2266,0.61,2267,0.61,2268,0.61,2269,0.61,2270,0.61,2271,0.61,2272,0.61,2273,0.61,2274,0.61,2275,0.61,2276,0.61,2277,0.61,2278,0.61,2279,0.61,2280,0.61,2281,0.61,2282,0.557,2283,0.61,2284,0.61,2285,0.61]],["component/53",[3,0.487]],["title/54-1",[19,17.402,21,23.215,243,20.876,277,22.877]],["name/54-1",[]],["text/54-1",[]],["component/54-1",[]],["title/54-2",[8,24.418,19,15.196,21,20.272,151,15.469,243,18.23]],["name/54-2",[]],["text/54-2",[]],["component/54-2",[]],["title/54-3",[19,17.402,21,23.215,243,20.876,277,22.877]],["name/54-3",[]],["text/54-3",[]],["component/54-3",[]],["title/54-4",[19,15.196,21,20.272,243,18.23,277,19.977,2286,33.312]],["name/54-4",[]],["text/54-4",[]],["component/54-4",[]],["title/54-5",[19,15.196,21,20.272,201,19.167,243,18.23,277,19.977]],["name/54-5",[]],["text/54-5",[]],["component/54-5",[]],["title/54-6",[8,24.418,19,15.196,21,20.272,151,15.469,243,18.23]],["name/54-6",[]],["text/54-6",[]],["component/54-6",[]],["title/54",[21,27.157,243,24.421,277,26.761]],["name/54",[277,0.581,725,0.64]],["text/54",[4,2.864,6,0.69,7,0.384,8,0.914,12,1.872,19,3.104,21,4.215,22,0.413,23,0.471,24,0.4,30,0.996,42,0.461,46,0.461,47,0.292,50,0.873,51,0.873,56,0.482,65,1.98,66,0.395,75,0.809,77,0.482,83,1.392,86,0.36,88,0.708,92,0.406,97,0.298,100,1.333,101,0.356,103,0.451,110,1.335,124,1.97,125,2.844,126,1.717,127,1.206,128,1.392,134,2.419,136,1.569,139,0.494,140,0.963,145,1.195,148,0.839,151,2.036,152,0.659,156,0.855,157,0.508,162,0.782,163,0.471,169,0.344,170,2.522,173,0.823,180,0.427,193,0.427,195,0.413,197,0.561,201,1.987,205,0.471,211,0.413,213,0.658,220,2.212,223,0.42,236,0.617,237,0.451,240,0.541,242,0.561,243,4.509,244,2.595,246,1.302,247,2.009,248,0.451,252,0.541,259,0.461,260,0.586,262,0.482,265,0.352,267,0.435,271,0.561,273,0.413,274,0.435,277,5.18,300,0.471,301,0.972,307,0.471,313,0.659,348,0.992,354,0.384,361,0.508,365,1.025,368,0.561,372,0.893,375,1.272,380,0.823,385,0.443,389,0.482,404,0.471,407,0.427,419,0.855,425,0.659,434,0.855,436,0.482,442,1.025,453,0.508,454,0.855,457,0.508,470,0.508,473,2.472,480,0.443,484,0.461,497,0.4,506,0.561,530,0.494,538,0.435,549,0.471,557,0.561,560,0.561,561,0.586,566,1.272,570,0.523,572,0.541,595,0.541,602,0.461,614,0.586,631,0.658,719,0.348,725,0.435,728,2.296,729,2.022,733,0.782,735,3.591,751,1.777,780,2.078,802,1.025,819,0.541,820,0.482,830,0.617,832,0.855,847,0.494,852,0.617,866,0.451,867,0.443,875,0.451,887,1.335,917,1.168,935,0.541,983,0.494,993,0.586,1007,1.246,1024,0.523,1032,0.508,1065,0.461,1087,0.963,1101,0.508,1128,0.523,1136,0.586,1142,0.937,1152,0.586,1164,0.586,1172,0.586,1194,0.561,1233,0.561,1238,0.451,1241,0.586,1272,0.992,1304,0.586,1320,1.854,1321,1.025,1382,0.658,1436,0.561,1437,0.561,1450,0.508,1472,0.617,1499,0.617,1514,1.46,1543,0.617,1550,0.617,1568,0.617,1584,0.561,1603,1.11,1614,0.658,1629,1.776,1674,0.617,1683,1.168,1692,1.246,1704,0.617,1711,0.586,1723,1.246,1789,1.025,1820,0.586,1837,0.471,1883,0.561,1887,2.255,1917,0.617,1950,0.523,1972,0.561,1976,1.794,2003,2.946,2033,0.586,2039,0.586,2044,0.617,2045,0.617,2063,3.551,2104,0.658,2110,0.658,2124,0.617,2154,0.658,2183,1.11,2190,0.658,2216,1.246,2233,0.658,2256,0.658,2286,1.776,2287,1.365,2288,0.72,2289,0.72,2290,0.72,2291,0.72,2292,0.72,2293,0.72,2294,0.72,2295,0.72,2296,0.72,2297,0.72,2298,0.72,2299,0.72,2300,0.72,2301,2.469,2302,2.469,2303,1.365,2304,1.365,2305,1.365,2306,0.72,2307,1.365,2308,0.658,2309,0.658,2310,0.72,2311,0.658,2312,1.945,2313,1.945,2314,0.72,2315,0.72,2316,0.72,2317,0.72,2318,0.658,2319,0.72,2320,0.72,2321,0.72,2322,0.72,2323,0.72,2324,0.72,2325,0.72,2326,0.72,2327,0.72,2328,0.72,2329,1.365,2330,0.72,2331,0.72,2332,0.72]],["component/54",[3,0.487]],["title/55-1",[57,39.745,211,28.009,458,36.692]],["name/55-1",[]],["text/55-1",[]],["component/55-1",[]],["title/55-2",[98,31.264,458,36.692,531,27.572]],["name/55-2",[]],["text/55-2",[]],["component/55-2",[]],["title/55-3",[549,31.956,728,38.079,1991,34.465]],["name/55-3",[]],["text/55-3",[]],["component/55-3",[]],["title/55-4",[65,15.457,128,15.29,243,16.179,354,17.24,425,15.629,1991,22.833]],["name/55-4",[]],["text/55-4",[]],["component/55-4",[]],["title/55-5",[12,10.867,354,19.425,544,28.425,733,20.908,1991,25.728]],["name/55-5",[]],["text/55-5",[]],["component/55-5",[]],["title/55-6",[100,17.479,152,15.629,354,17.24,549,21.171,1450,22.833,1837,21.171]],["name/55-6",[]],["text/55-6",[]],["component/55-6",[]],["title/55-7",[549,31.956,2183,39.745,2333,41.832]],["name/55-7",[]],["text/55-7",[]],["component/55-7",[]],["title/55-8",[21,17.991,65,15.457,128,15.29,354,17.24,425,15.629,2333,27.713]],["name/55-8",[]],["text/55-8",[]],["component/55-8",[]],["title/55-9",[100,17.479,125,13.143,152,15.629,354,17.24,733,18.556,1450,22.833]],["name/55-9",[]],["text/55-9",[]],["component/55-9",[]],["title/55-10",[243,18.23,354,19.425,432,25.728,549,23.854,1837,23.854]],["name/55-10",[]],["text/55-10",[]],["component/55-10",[]],["title/55",[457,41.515,458,44.198]],["name/55",[184,0.797,457,0.749]],["text/55",[4,1.884,12,1.722,13,0.911,15,1.093,17,0.712,19,0.443,20,0.62,21,2.773,22,0.61,24,1.093,30,0.545,37,2.06,42,0.681,44,0.696,48,0.631,50,1.23,51,0.681,56,1.317,65,1.912,84,0.751,85,0.681,86,0.532,90,0.61,94,0.773,97,0.812,98,2.185,103,1.719,124,1.146,125,1.837,126,2.637,127,2.436,128,2.553,136,1.819,152,1.649,164,1.685,169,0.508,170,2.347,173,1.187,184,5.037,211,0.61,216,0.642,220,2.233,223,1.146,243,3.71,244,0.731,246,0.712,247,3.257,248,0.667,249,1.934,251,0.631,259,0.681,264,0.751,267,1.187,270,1.209,271,1.533,277,2.96,281,0.911,283,0.829,290,0.866,296,0.731,297,0.866,301,0.983,313,0.514,354,2.41,361,0.751,368,0.829,385,1.685,389,0.712,402,0.911,408,0.654,422,0.681,425,0.514,432,2.825,434,0.667,435,1.882,439,0.799,442,0.799,453,3.519,457,5.081,458,1.477,470,3.519,479,0.773,480,0.654,497,0.591,507,1.187,516,0.751,524,1.793,531,1.547,544,0.829,549,4.202,566,1.793,572,1.477,602,0.681,638,0.751,684,0.866,699,0.829,717,0.911,725,0.642,727,0.829,729,1.35,735,1.934,751,2.73,754,3.874,755,3.681,760,0.514,780,2.099,821,0.972,831,0.799,893,1.6,930,0.829,936,0.731,944,0.911,1024,1.429,1037,1.477,1065,0.681,1136,0.866,1162,0.972,1172,2.23,1192,0.712,1287,0.911,1328,1.6,1345,0.866,1351,1.477,1450,1.387,1452,0.972,1459,1.6,1465,0.829,1472,0.911,1499,0.911,1511,0.972,1518,0.972,1522,0.911,1527,0.972,1568,1.684,1630,0.972,1640,1.429,1649,0.911,1674,0.911,1683,0.911,1776,0.972,1938,0.972,1991,5.081,2026,0.911,2132,1.796,2198,0.972,2217,4.557,2225,0.972,2236,0.972,2263,0.972,2308,1.796,2318,0.972,2333,4.271,2334,1.064,2335,1.064,2336,1.064,2337,1.064,2338,1.967,2339,1.967,2340,1.064,2341,1.967,2342,1.967,2343,1.967,2344,1.967,2345,1.064,2346,1.064,2347,1.064,2348,1.064,2349,1.064,2350,1.064,2351,1.064,2352,1.967,2353,1.064,2354,1.064,2355,1.064,2356,1.064,2357,1.064,2358,1.064,2359,1.064,2360,1.064]],["component/55",[3,0.487]],["title/56-1",[136,31.346,871,44.198]],["name/56-1",[]],["text/56-1",[]],["component/56-1",[]],["title/56-2",[4,22.225,2072,45.868]],["name/56-2",[]],["text/56-2",[]],["component/56-2",[]],["title/56-3",[177,28.738,2072,45.868]],["name/56-3",[]],["text/56-3",[]],["component/56-3",[]],["title/56-4",[894,38.079,895,39.745,2072,38.079]],["name/56-4",[]],["text/56-4",[]],["component/56-4",[]],["title/56-5",[216,44.638]],["name/56-5",[]],["text/56-5",[]],["component/56-5",[]],["title/56-6",[101,29.072,896,53.753]],["name/56-6",[]],["text/56-6",[]],["component/56-6",[]],["title/56",[12,17.536,136,31.346]],["name/56",[12,0.316,136,0.565]],["text/56",[4,2.014,6,1.092,7,0.9,8,0.413,12,0.643,17,0.413,19,4.473,20,0.359,24,0.343,30,0.316,37,0.372,42,0.753,43,0.324,45,0.423,47,1.363,50,0.528,61,0.338,66,0.645,67,0.435,75,0.366,83,1.02,84,1.523,85,0.395,86,0.844,87,0.83,88,0.32,90,0.675,92,0.348,97,0.891,100,0.333,101,0.582,102,0.463,124,0.359,125,1.502,127,1.054,128,1.412,134,0.753,136,2.586,138,0.271,142,3.716,145,0.724,151,2.441,152,0.568,156,0.387,157,1.523,158,0.359,161,1.803,162,1.485,164,1.038,166,0.502,167,0.366,168,0.619,173,0.71,177,2.905,180,1.771,181,2.331,182,0.333,188,0.77,191,0.528,193,1.535,194,0.413,198,0.379,210,0.354,212,0.463,214,0.502,216,0.372,217,0.343,223,1.741,259,0.395,260,0.502,267,0.71,273,1.237,278,1.543,287,0.324,301,0.844,307,3.63,313,0.298,326,0.698,331,1.008,339,0.563,343,0.403,348,1.227,349,0.939,350,0.481,354,0.328,380,1.019,407,0.698,425,2.68,426,1.374,437,1.269,440,0.423,442,0.463,473,0.403,480,0.724,509,0.448,513,0.423,538,0.372,539,1.019,575,0.528,576,0.448,602,0.395,614,0.958,632,0.563,697,3.155,719,0.568,722,4.417,729,0.423,733,2.304,751,0.372,752,0.463,780,0.724,820,1.131,824,0.808,847,2.305,855,0.481,866,0.387,867,0.724,870,0.83,871,3.018,874,1.445,885,0.395,893,1.374,894,2.617,895,2.431,980,0.463,983,1.16,1001,1.848,1005,1.008,1024,0.448,1032,0.83,1033,1.075,1040,0.502,1088,0.958,1128,0.856,1132,0.528,1142,0.423,1173,3.511,1192,0.413,1193,0.563,1197,1.075,1234,0.958,1241,0.502,1288,1.756,1291,0.528,1310,0.435,1311,0.481,1324,0.958,1343,1.543,1344,0.856,1347,1.568,1348,0.563,1351,0.463,1360,0.528,1405,0.808,1450,0.435,1465,0.481,1502,1.446,1522,2.559,1529,0.423,1569,0.481,1642,0.502,1658,0.481,1672,0.463,1711,2.107,1721,0.528,1742,1.446,1749,1.075,1755,1.971,1762,1.075,1765,0.528,1789,0.884,1820,0.502,1831,0.448,1837,0.77,1922,1.008,2072,4.325,2073,2.729,2080,0.528,2112,1.971,2116,1.075,2204,3.379,2212,1.971,2223,0.563,2282,2.729,2309,0.563,2311,0.563,2361,2.159,2362,0.617,2363,0.617,2364,0.617,2365,3.358,2366,0.617,2367,0.617,2368,0.617,2369,1.177,2370,1.177,2371,1.177,2372,1.177,2373,1.177,2374,1.177,2375,1.075,2376,2.159,2377,2.59,2378,0.617,2379,1.177,2380,0.617,2381,0.617,2382,0.617,2383,2.989,2384,0.563,2385,0.617,2386,0.617,2387,0.617,2388,1.177,2389,0.617,2390,1.177,2391,0.617,2392,1.177,2393,1.177,2394,1.177,2395,1.177,2396,1.177,2397,1.177,2398,1.177,2399,0.617,2400,0.617,2401,0.617,2402,0.617,2403,0.617,2404,0.617,2405,0.617,2406,0.617,2407,0.617,2408,0.617,2409,0.617,2410,0.617]],["component/56",[3,0.487]],["title/57-1",[497,32.711,1065,37.658]],["name/57-1",[]],["text/57-1",[]],["component/57-1",[]],["title/57-2",[123,35.507,497,32.711]],["name/57-2",[]],["text/57-2",[]],["component/57-2",[]],["title/57-3",[151,24.961,497,32.711]],["name/57-3",[]],["text/57-3",[]],["component/57-3",[]],["title/57",[12,17.536,497,32.711]],["name/57",[12,0.316,497,0.59]],["text/57",[4,1.066,7,3.487,11,1.394,19,4.649,43,0.579,47,2.243,50,2.081,60,0.494,63,1.475,65,0.526,83,0.959,85,0.705,86,0.551,90,0.631,96,0.705,97,1.697,100,0.595,101,1.395,123,1.225,125,0.447,127,0.538,128,1.334,129,0.756,145,1.736,147,3.279,148,3.395,151,1.743,152,0.532,161,2.479,162,1.164,164,0.677,180,0.653,181,0.595,182,0.595,188,0.72,193,1.203,210,4.323,223,0.642,241,0.896,251,0.653,258,0.827,267,0.665,270,1.248,273,0.631,274,0.665,301,0.551,307,2.688,326,1.203,336,1.992,343,0.72,345,0.737,347,0.69,349,1.951,380,1.225,407,0.653,425,2.239,440,0.756,484,0.705,497,4.904,498,0.827,507,3.559,524,0.72,539,2.118,549,1.847,651,0.859,722,2.16,733,2.926,776,0.943,832,0.69,847,0.756,866,1.77,867,0.677,874,0.737,885,1.299,923,4.282,1032,0.777,1065,3.775,1087,0.777,1284,1.525,1297,0.943,1328,2.297,1334,1.652,1336,0.8,1339,0.896,1341,1.475,1344,0.8,1346,0.827,1473,3.834,1618,1.006,1635,0.943,1658,0.859,1697,1.006,1700,0.859,1715,1.006,1763,2.121,1774,1.738,1782,0.859,1837,3.033,1855,1.006,1856,1.854,1883,1.582,1912,1.006,1917,0.943,1930,0.943,1937,1.006,1948,2.121,1991,1.992,1992,2.297,1993,0.943,1994,0.943,1995,1.738,1996,1.738,1997,0.943,2038,0.943,2039,1.652,2040,1.738,2041,2.418,2042,0.943,2068,1.006,2124,0.943,2375,1.006,2384,1.006,2411,1.102,2412,1.102,2413,1.102,2414,2.824,2415,2.031,2416,2.031,2417,2.031,2418,1.102,2419,1.102,2420,1.102,2421,1.102,2422,1.102,2423,1.102,2424,1.102,2425,1.102,2426,2.031,2427,2.031]],["component/57",[3,0.487]]],"invertedIndex":[["",{"_index":19,"title":{"25":{},"28":{},"54-1":{},"54-2":{},"54-3":{},"54-4":{},"54-5":{},"54-6":{}},"name":{},"text":{"4":{},"7":{},"9":{},"13":{},"14":{},"15":{},"17":{},"20":{},"21":{},"22":{},"24":{},"25":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"35":{},"36":{},"37":{},"38":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"52":{},"53":{},"54":{},"55":{},"56":{},"57":{}},"component":{}}],["0",{"_index":722,"title":{"41-3":{},"41-4":{},"48-1":{}},"name":{},"text":{"18":{},"20":{},"22":{},"24":{},"29":{},"32":{},"35":{},"36":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"52":{},"56":{},"57":{}},"component":{}}],["0.000080",{"_index":546,"title":{},"name":{},"text":{"13":{}},"component":{}}],["0.000132",{"_index":519,"title":{},"name":{},"text":{"13":{}},"component":{}}],["0.000197",{"_index":532,"title":{},"name":{},"text":{"13":{}},"component":{}}],["0.000563",{"_index":589,"title":{},"name":{},"text":{"14":{}},"component":{}}],["0.000568",{"_index":469,"title":{},"name":{},"text":{"13":{}},"component":{}}],["0.000822",{"_index":583,"title":{},"name":{},"text":{"14":{}},"component":{}}],["0.01",{"_index":2248,"title":{},"name":{},"text":{"53":{}},"component":{}}],["0.1",{"_index":1139,"title":{},"name":{},"text":{"22":{}},"component":{}}],["0.1.0",{"_index":1798,"title":{},"name":{},"text":{"41":{}},"component":{}}],["0.10.3",{"_index":1182,"title":{},"name":{},"text":{"22":{}},"component":{}}],["0.11.0.2",{"_index":1096,"title":{},"name":{},"text":{"22":{}},"component":{}}],["0.11.1.1",{"_index":1064,"title":{},"name":{},"text":{"22":{}},"component":{}}],["0.11.2a0",{"_index":1048,"title":{},"name":{},"text":{"22":{}},"component":{}}],["0.12.0",{"_index":661,"title":{},"name":{},"text":{"15":{},"24":{}},"component":{}}],["0.12.0.zip",{"_index":659,"title":{},"name":{},"text":{"15":{}},"component":{}}],["0.12.0a0",{"_index":1018,"title":{},"name":{},"text":{"22":{}},"component":{}}],["0.12.1",{"_index":781,"title":{},"name":{},"text":{"20":{}},"component":{}}],["0.16",{"_index":2252,"title":{},"name":{},"text":{"53":{}},"component":{}}],["0.25",{"_index":2240,"title":{},"name":{},"text":{"53":{}},"component":{}}],["0.32",{"_index":2250,"title":{},"name":{},"text":{"53":{}},"component":{}}],["0.5.5",{"_index":962,"title":{"22-22":{}},"name":{},"text":{},"component":{}}],["0.5.6",{"_index":960,"title":{"22-20":{}},"name":{},"text":{},"component":{}}],["0.6.0",{"_index":958,"title":{"22-17":{}},"name":{},"text":{},"component":{}}],["0.6.1",{"_index":956,"title":{"22-15":{}},"name":{},"text":{},"component":{}}],["0.6.2",{"_index":955,"title":{"22-11":{}},"name":{},"text":{},"component":{}}],["0.6.3",{"_index":952,"title":{"22-8":{}},"name":{},"text":{},"component":{}}],["0.6.4",{"_index":950,"title":{"22-6":{}},"name":{},"text":{},"component":{}}],["0.6.5",{"_index":949,"title":{"22-3":{}},"name":{},"text":{},"component":{}}],["0.6.6",{"_index":946,"title":{"22-1":{}},"name":{},"text":{},"component":{}}],["0.64",{"_index":2254,"title":{},"name":{},"text":{"53":{}},"component":{}}],["000",{"_index":2217,"title":{},"name":{},"text":{"53":{},"55":{}},"component":{}}],["000/10",{"_index":2230,"title":{},"name":{},"text":{"53":{}},"component":{}}],["000/20",{"_index":2241,"title":{},"name":{},"text":{"53":{}},"component":{}}],["000/500",{"_index":2227,"title":{},"name":{},"text":{"53":{}},"component":{}}],["001",{"_index":2222,"title":{},"name":{},"text":{"53":{}},"component":{}}],["01",{"_index":2410,"title":{},"name":{},"text":{"56":{}},"component":{}}],["05",{"_index":951,"title":{"22-6":{},"22-20":{},"22-22":{},"24-9":{}},"name":{},"text":{},"component":{}}],["06",{"_index":953,"title":{"22-8":{},"22-11":{},"22-15":{},"22-17":{},"24-11":{}},"name":{},"text":{},"component":{}}],["07",{"_index":948,"title":{"22-1":{},"22-3":{},"22-6":{}},"name":{},"text":{},"component":{}}],["0=1",{"_index":1474,"title":{},"name":{},"text":{"29":{}},"component":{}}],["0x",{"_index":1127,"title":{},"name":{},"text":{"22":{},"24":{}},"component":{}}],["0x00d9d851f600d539a9f7811de4d9613a6b3c2634f8c0386a305c03216bd67559",{"_index":448,"title":{},"name":{},"text":{"13":{}},"component":{}}],["0x0293d6625d860b9a37a0319d1e3c1eecc27685075cbeaae4ef29ed717d93c58b",{"_index":450,"title":{},"name":{},"text":{"13":{}},"component":{}}],["0x03a5cac216edec20350e1fd8369536fadebb20b83bfceb0c33aab0175574d35d",{"_index":534,"title":{},"name":{},"text":{"13":{}},"component":{}}],["0x03f42fc2355be54197a8b270ff2cb8e2eb7902e777b3498f8ad58c6c147cce60",{"_index":474,"title":{},"name":{},"text":{"13":{}},"component":{}}],["0x04e93e1fb507d23b398f0a09f5873d3a7769b0e7ed40dbbe8fe7a2e8ea811006",{"_index":591,"title":{},"name":{},"text":{"14":{}},"component":{}}],["0x04e93e1fb507d23b398f0a09f5873d3a7769b0e7ed40dbbe8fe7a2e8ea831006",{"_index":568,"title":{},"name":{},"text":{"14":{}},"component":{}}],["0x07a328511fa8552cd61aaaa89076fe40c3566f4594f29324aa754d41d7c7c55",{"_index":569,"title":{},"name":{},"text":{"14":{}},"component":{}}],["0x14acf3b7e92f97adee4d5359a7de3d673582f0ce03d33879cdbdbf03ec7fa5d",{"_index":2099,"title":{},"name":{},"text":{"50":{}},"component":{}}],["0x23173d4e2d5c0ecc1376b8dbe345c028aa424048c67f68812a9a83873a2d87f",{"_index":2096,"title":{},"name":{},"text":{"50":{}},"component":{}}],["0x334f16d9da30913c4a30194057793379079f35efa6bf5753bc6e724a591e9f0",{"_index":522,"title":{},"name":{},"text":{"13":{}},"component":{}}],["0x3d15e05389ecd1ff65555220be57f0ab43729877b20ca086048276917ed2838",{"_index":475,"title":{},"name":{},"text":{"13":{}},"component":{}}],["0x3f187b7522320f1c87271772fedd6ad119f62595e2d9208824367463df94a5d",{"_index":2095,"title":{},"name":{},"text":{"50":{}},"component":{}}],["0x47312450b3ac8b5b8e247a6bb6d523e7605bdb60",{"_index":737,"title":{},"name":{},"text":{"19":{}},"component":{}}],["0x69192a77c527fb10a71722400dbad15bdb3a8db237db4f72e06f3b4b63f2195",{"_index":592,"title":{},"name":{},"text":{"14":{}},"component":{}}],["0x7895267b3e967e1c9c2f7da145e323bed60dfdd1b8ecc8efd243c9d587d579a",{"_index":535,"title":{},"name":{},"text":{"13":{}},"component":{}}],["0x8ceb9796d2809438d1e992b8ac17cfe83d0cf5944dbad948a370e0b5d5924f",{"_index":521,"title":{},"name":{},"text":{"13":{}},"component":{}}],["0x8f97970ac5a9aa8d130d35146f5b59c4aef57963",{"_index":741,"title":{},"name":{},"text":{"19":{}},"component":{}}],["0xa4ed3ad27c294565cb0dcc993bddcc75432d498c",{"_index":743,"title":{},"name":{},"text":{"19":{}},"component":{}}],["0xbfb3ec183b4ee58db67113cf8832c31e78fe8000f091cc598d5aa9ca6a62af",{"_index":548,"title":{},"name":{},"text":{"13":{}},"component":{}}],["0xc662c410c0ecf747543f5ba90660f6abebd9c8c4",{"_index":736,"title":{},"name":{},"text":{"19":{}},"component":{}}],["0xde29d060d45901fb19ed6c6e959eb22d8626708",{"_index":740,"title":{},"name":{},"text":{"19":{}},"component":{}}],["0≤x<p",{"_index":1766,"title":{},"name":{},"text":{"37":{}},"component":{}}],["1",{"_index":425,"title":{"19-2":{},"41-1":{},"41-2":{},"55-4":{},"55-8":{}},"name":{"29":{}},"text":{"13":{},"15":{},"20":{},"21":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"32":{},"35":{},"36":{},"37":{},"41":{},"42":{},"46":{},"47":{},"48":{},"51":{},"52":{},"54":{},"55":{},"56":{},"57":{}},"component":{}}],["1.0",{"_index":539,"title":{"29":{},"29-5":{},"48-7":{}},"name":{},"text":{"13":{},"18":{},"24":{},"29":{},"45":{},"46":{},"47":{},"48":{},"51":{},"52":{},"56":{},"57":{}},"component":{}}],["1.0.0",{"_index":1068,"title":{},"name":{},"text":{"22":{}},"component":{}}],["1/40",{"_index":2228,"title":{},"name":{},"text":{"53":{}},"component":{}}],["1/sierra",{"_index":873,"title":{},"name":{},"text":{"20":{}},"component":{}}],["10",{"_index":930,"title":{"22-1":{}},"name":{},"text":{"21":{},"47":{},"53":{},"55":{}},"component":{}}],["10.24",{"_index":2255,"title":{},"name":{},"text":{"53":{}},"component":{}}],["100",{"_index":927,"title":{},"name":{},"text":{"21":{},"22":{},"52":{}},"component":{}}],["1000",{"_index":926,"title":{},"name":{},"text":{"21":{}},"component":{}}],["100000000000",{"_index":585,"title":{},"name":{},"text":{"14":{}},"component":{}}],["100000000000000000",{"_index":527,"title":{},"name":{},"text":{"13":{}},"component":{}}],["101",{"_index":2404,"title":{},"name":{},"text":{"56":{}},"component":{}}],["102",{"_index":2162,"title":{},"name":{},"text":{"52":{}},"component":{}}],["1024",{"_index":1095,"title":{},"name":{},"text":{"22":{}},"component":{}}],["1110",{"_index":2171,"title":{},"name":{},"text":{"52":{}},"component":{}}],["12",{"_index":1250,"title":{"24-6":{}},"name":{},"text":{},"component":{}}],["12345",{"_index":2415,"title":{},"name":{},"text":{"57":{}},"component":{}}],["12th",{"_index":1245,"title":{"24-2":{}},"name":{},"text":{},"component":{}}],["131904173791637",{"_index":520,"title":{},"name":{},"text":{"13":{}},"component":{}}],["1336043477925910602175429627555369551262229712266217887481529642650907574765",{"_index":2161,"title":{},"name":{},"text":{"52":{}},"component":{}}],["1351148242645005540004162531550805076995747746087542030095186557536641755046",{"_index":2148,"title":{},"name":{},"text":{"52":{}},"component":{}}],["14",{"_index":959,"title":{"22-17":{}},"name":{},"text":{},"component":{}}],["1471584055184889701471507129567376607666785522455476394130774434754411633091",{"_index":2165,"title":{},"name":{},"text":{"52":{}},"component":{}}],["152",{"_index":545,"title":{},"name":{},"text":{"13":{}},"component":{}}],["17*2^{192",{"_index":1768,"title":{},"name":{},"text":{"37":{}},"component":{}}],["17/11",{"_index":1224,"title":{},"name":{},"text":{"22":{}},"component":{}}],["1744303484486821561902174603220722448499782664094942993128426674277214273437",{"_index":2100,"title":{},"name":{},"text":{"50":{}},"component":{}}],["178",{"_index":2091,"title":{},"name":{},"text":{"50":{}},"component":{}}],["18",{"_index":957,"title":{"22-15":{},"22-22":{}},"name":{},"text":{},"component":{}}],["18446744073709551617",{"_index":2147,"title":{},"name":{},"text":{"52":{}},"component":{}}],["197273405375932",{"_index":533,"title":{},"name":{},"text":{"13":{}},"component":{}}],["1m",{"_index":922,"title":{},"name":{},"text":{"21":{}},"component":{}}],["1’",{"_index":879,"title":{},"name":{},"text":{"20":{}},"component":{}}],["2",{"_index":733,"title":{"19-3":{},"55-5":{},"55-9":{}},"name":{},"text":{"20":{},"24":{},"25":{},"28":{},"36":{},"42":{},"46":{},"47":{},"48":{},"51":{},"52":{},"53":{},"54":{},"56":{},"57":{}},"component":{}}],["2.0.0",{"_index":674,"title":{},"name":{},"text":{"15":{},"24":{}},"component":{}}],["2.starknet.io",{"_index":745,"title":{},"name":{},"text":{"19":{}},"component":{}}],["20",{"_index":755,"title":{"24-10":{}},"name":{},"text":{"19":{},"53":{},"55":{}},"component":{}}],["20.48",{"_index":2253,"title":{},"name":{},"text":{"53":{}},"component":{}}],["200",{"_index":929,"title":{},"name":{},"text":{"21":{},"52":{}},"component":{}}],["2019172390095051323869047481075102003731246132997057518965927979101413600827",{"_index":2146,"title":{},"name":{},"text":{"52":{}},"component":{}}],["2023",{"_index":947,"title":{"22-1":{},"22-3":{},"22-6":{},"22-8":{},"22-11":{},"22-15":{},"22-17":{},"22-20":{},"22-22":{}},"name":{},"text":{},"component":{}}],["20audit%20report.pdf",{"_index":400,"title":{},"name":{},"text":{"11":{}},"component":{}}],["20k",{"_index":2306,"title":{},"name":{},"text":{"54":{}},"component":{}}],["20mb",{"_index":925,"title":{},"name":{},"text":{"21":{}},"component":{}}],["2111158214429736260101797453815341265658516118421387314850625535905115418634",{"_index":2163,"title":{},"name":{},"text":{"52":{}},"component":{}}],["22",{"_index":1251,"title":{"24-6":{},"24-7":{},"24-8":{},"24-9":{},"24-10":{},"24-11":{}},"name":{},"text":{},"component":{}}],["221246409693049874911156614478125967098431447433028390043893900771521609973",{"_index":2175,"title":{},"name":{},"text":{"52":{}},"component":{}}],["23",{"_index":1246,"title":{"24-2":{},"24-3":{},"24-4":{},"24-5":{}},"name":{},"text":{},"component":{}}],["24/11",{"_index":1225,"title":{},"name":{},"text":{"22":{}},"component":{}}],["2439272289032330041885427773916021390926903450917097317807468082958581062272",{"_index":2169,"title":{},"name":{},"text":{"52":{}},"component":{}}],["2472939307328371039455977650994226407024607754063562993856224077254594995194",{"_index":2160,"title":{},"name":{},"text":{"52":{}},"component":{}}],["248",{"_index":1781,"title":{},"name":{},"text":{"38":{}},"component":{}}],["25",{"_index":961,"title":{"22-20":{},"24-8":{}},"name":{},"text":{},"component":{}}],["250",{"_index":1722,"title":{},"name":{},"text":{"36":{}},"component":{}}],["251",{"_index":2361,"title":{},"name":{},"text":{"56":{}},"component":{}}],["256",{"_index":1929,"title":{},"name":{},"text":{"45":{}},"component":{}}],["29",{"_index":954,"title":{"22-8":{},"22-11":{},"24-5":{},"24-7":{}},"name":{},"text":{},"component":{}}],["2\\ell\\right",{"_index":2281,"title":{},"name":{},"text":{"53":{}},"component":{}}],["2^{192}+1",{"_index":1714,"title":{},"name":{},"text":{"36":{}},"component":{}}],["2^{251",{"_index":1767,"title":{},"name":{},"text":{"37":{},"45":{}},"component":{}}],["2^{64}+1",{"_index":2151,"title":{},"name":{},"text":{"52":{}},"component":{}}],["2^{\\ell_r",{"_index":2401,"title":{},"name":{},"text":{"56":{}},"component":{}}],["2^{length",{"_index":2380,"title":{},"name":{},"text":{"56":{}},"component":{}}],["2n+2m",{"_index":2259,"title":{},"name":{},"text":{"53":{}},"component":{}}],["3",{"_index":1837,"title":{"55-6":{},"55-10":{}},"name":{},"text":{"42":{},"46":{},"47":{},"48":{},"51":{},"52":{},"54":{},"56":{},"57":{}},"component":{}}],["3+\\text{payload_s",{"_index":2267,"title":{},"name":{},"text":{"53":{}},"component":{}}],["3.10",{"_index":1122,"title":{},"name":{},"text":{"22":{}},"component":{}}],["3.8",{"_index":1123,"title":{},"name":{},"text":{"22":{}},"component":{}}],["3.9",{"_index":1121,"title":{},"name":{},"text":{"22":{}},"component":{}}],["3.9.0",{"_index":626,"title":{},"name":{},"text":{"15":{}},"component":{}}],["30",{"_index":821,"title":{},"name":{},"text":{"20":{},"55":{}},"component":{}}],["300",{"_index":2178,"title":{},"name":{},"text":{"52":{}},"component":{}}],["31",{"_index":1247,"title":{"24-3":{}},"name":{},"text":{},"component":{}}],["3141592653589793238462643383279502884197169399375105820974944592307816406665",{"_index":1773,"title":{},"name":{},"text":{"38":{}},"component":{}}],["32",{"_index":1113,"title":{},"name":{},"text":{"22":{},"53":{}},"component":{}}],["3423542542364363",{"_index":2009,"title":{},"name":{},"text":{"46":{},"47":{},"48":{}},"component":{}}],["3429319713503054399243751728532349500489096444181867640228809233993992987070",{"_index":2170,"title":{},"name":{},"text":{"52":{}},"component":{}}],["3476138891838001128614704553731964710634238587541803499001822322602421164873",{"_index":2172,"title":{},"name":{},"text":{"52":{}},"component":{}}],["3534535754756246375475423547453",{"_index":2016,"title":{},"name":{},"text":{"46":{},"47":{},"48":{}},"component":{}}],["3m",{"_index":921,"title":{},"name":{},"text":{"21":{}},"component":{}}],["3t",{"_index":2278,"title":{},"name":{},"text":{"53":{}},"component":{}}],["4",{"_index":1782,"title":{},"name":{},"text":{"38":{},"51":{},"52":{},"53":{},"57":{}},"component":{}}],["40",{"_index":2225,"title":{},"name":{},"text":{"53":{},"55":{}},"component":{}}],["400",{"_index":1274,"title":{},"name":{},"text":{"24":{},"52":{}},"component":{}}],["4321",{"_index":2098,"title":{},"name":{},"text":{"50":{}},"component":{}}],["4337",{"_index":1591,"title":{},"name":{},"text":{"31":{},"33":{}},"component":{}}],["5",{"_index":1345,"title":{},"name":{},"text":{"24":{},"52":{},"53":{},"55":{}},"component":{}}],["500",{"_index":1273,"title":{},"name":{},"text":{"24":{},"52":{},"53":{}},"component":{}}],["541081937647750334353499719661793404023294520617957763260656728924567461866",{"_index":2167,"title":{},"name":{},"text":{"52":{}},"component":{}}],["558404273560404778508455254030458021013656352466216690688595011803280448030",{"_index":2176,"title":{},"name":{},"text":{"52":{}},"component":{}}],["558404273560404778508455254030458021013656352466216690688595011803280448031",{"_index":2177,"title":{},"name":{},"text":{"52":{}},"component":{}}],["558404273560404778508455254030458021013656352466216690688595011803280448032",{"_index":2149,"title":{},"name":{},"text":{"52":{}},"component":{}}],["562652117844076",{"_index":590,"title":{},"name":{},"text":{"14":{}},"component":{}}],["568383605914463",{"_index":471,"title":{},"name":{},"text":{"13":{}},"component":{}}],["59664015286291125586727181187045849528930298741728639958614076589374875456",{"_index":2173,"title":{},"name":{},"text":{"52":{}},"component":{}}],["5m",{"_index":2238,"title":{},"name":{},"text":{"53":{}},"component":{}}],["6",{"_index":1596,"title":{},"name":{},"text":{"31":{},"52":{}},"component":{}}],["600",{"_index":2174,"title":{},"name":{},"text":{"52":{}},"component":{}}],["61440",{"_index":924,"title":{},"name":{},"text":{"21":{}},"component":{}}],["619473939880410191267127038055308002651079521370507951329266275707625062498",{"_index":2164,"title":{},"name":{},"text":{"52":{}},"component":{}}],["619473939880410191267127038055308002651079521370507951329266275707625062499",{"_index":2166,"title":{},"name":{},"text":{"52":{}},"component":{}}],["64",{"_index":2071,"title":{},"name":{},"text":{"49":{}},"component":{}}],["6807",{"_index":2093,"title":{},"name":{},"text":{"50":{}},"component":{}}],["726",{"_index":1176,"title":{},"name":{},"text":{"22":{}},"component":{}}],["79590795788372",{"_index":547,"title":{},"name":{},"text":{"13":{}},"component":{}}],["799",{"_index":1160,"title":{},"name":{},"text":{"22":{}},"component":{}}],["8",{"_index":1802,"title":{},"name":{},"text":{"41":{},"52":{}},"component":{}}],["80",{"_index":2340,"title":{},"name":{},"text":{"55":{}},"component":{}}],["8224",{"_index":584,"title":{},"name":{},"text":{"14":{}},"component":{}}],["822400000000000",{"_index":582,"title":{},"name":{},"text":{"14":{}},"component":{}}],["895",{"_index":782,"title":{},"name":{},"text":{"20":{}},"component":{}}],["8m",{"_index":920,"title":{},"name":{},"text":{"21":{}},"component":{}}],["900",{"_index":785,"title":{},"name":{},"text":{"20":{}},"component":{}}],["907",{"_index":779,"title":{},"name":{},"text":{"20":{}},"component":{}}],["908",{"_index":788,"title":{},"name":{},"text":{"20":{}},"component":{}}],["95220",{"_index":1118,"title":{},"name":{},"text":{"22":{}},"component":{}}],["955723665991825982403667749532843665052270105995360175183368988948217233556",{"_index":2168,"title":{},"name":{},"text":{"52":{}},"component":{}}],["_",{"_index":1617,"title":{},"name":{},"text":{"32":{},"42":{}},"component":{}}],["__default__",{"_index":206,"title":{},"name":{},"text":{"7":{}},"component":{}}],["__execute__",{"_index":1587,"title":{},"name":{},"text":{"31":{},"34":{},"35":{}},"component":{}}],["__validate__",{"_index":1586,"title":{},"name":{},"text":{"31":{},"34":{},"35":{}},"component":{}}],["__validate_deploy__",{"_index":1604,"title":{},"name":{},"text":{"32":{}},"component":{}}],["_public_key",{"_index":1623,"title":{},"name":{},"text":{"32":{}},"component":{}}],["_validate_deploy",{"_index":1616,"title":{},"name":{},"text":{"32":{}},"component":{}}],["_{\\text{numb",{"_index":2260,"title":{},"name":{},"text":{"53":{}},"component":{}}],["_{i=1}^n",{"_index":1814,"title":{},"name":{},"text":{"41":{}},"component":{}}],["a=index",{"_index":1490,"title":{},"name":{},"text":{"29":{}},"component":{}}],["a_1",{"_index":1740,"title":{},"name":{},"text":{"36":{}},"component":{}}],["a_2",{"_index":1743,"title":{},"name":{},"text":{"36":{}},"component":{}}],["a_3",{"_index":1751,"title":{},"name":{},"text":{"36":{}},"component":{}}],["a_len",{"_index":1839,"title":{},"name":{},"text":{"42":{}},"component":{}}],["a_n",{"_index":1741,"title":{},"name":{},"text":{"36":{}},"component":{}}],["a_n;0",{"_index":1745,"title":{},"name":{},"text":{"36":{}},"component":{}}],["a_n;\\text{had",{"_index":1752,"title":{},"name":{},"text":{"36":{}},"component":{}}],["a_n;s_1",{"_index":1746,"title":{},"name":{},"text":{"36":{}},"component":{}}],["a_{high",{"_index":1778,"title":{},"name":{},"text":{"38":{}},"component":{}}],["a_{low",{"_index":1777,"title":{},"name":{},"text":{"38":{}},"component":{}}],["abdk",{"_index":1408,"title":{},"name":{},"text":{"26":{}},"component":{}}],["abi",{"_index":123,"title":{"42":{},"9-8":{},"30-6":{},"42-1":{},"42-2":{},"57-2":{}},"name":{"42":{}},"text":{"7":{},"9":{},"22":{},"24":{},"30":{},"41":{},"42":{},"57":{}},"component":{}}],["abi.encodepack",{"_index":2304,"title":{},"name":{},"text":{"54":{}},"component":{}}],["abi_hash",{"_index":1812,"title":{},"name":{},"text":{"41":{}},"component":{}}],["abil",{"_index":727,"title":{},"name":{},"text":{"18":{},"22":{},"32":{},"35":{},"55":{}},"component":{}}],["abov",{"_index":380,"title":{},"name":{},"text":{"10":{},"13":{},"24":{},"29":{},"31":{},"35":{},"36":{},"41":{},"42":{},"45":{},"52":{},"53":{},"54":{},"56":{},"57":{}},"component":{}}],["abstract",{"_index":556,"title":{"33-2":{}},"name":{},"text":{"14":{},"24":{},"31":{},"33":{},"35":{}},"component":{}}],["abus",{"_index":1494,"title":{},"name":{},"text":{"29":{}},"component":{}}],["acceler",{"_index":1269,"title":{},"name":{},"text":{"24":{}},"component":{}}],["accept",{"_index":137,"title":{},"name":{},"text":{"7":{},"20":{},"22":{},"24":{},"29":{},"50":{},"52":{}},"component":{}}],["accepted_on_l1",{"_index":284,"title":{"50-5":{}},"name":{},"text":{"7":{}},"component":{}}],["accepted_on_l2",{"_index":283,"title":{"50-4":{}},"name":{},"text":{"7":{},"22":{},"24":{},"55":{}},"component":{}}],["access",{"_index":237,"title":{"30-7":{}},"name":{},"text":{"7":{},"20":{},"22":{},"25":{},"28":{},"30":{},"32":{},"33":{},"46":{},"47":{},"48":{},"54":{}},"component":{}}],["accidentili",{"_index":1099,"title":{},"name":{},"text":{"22":{}},"component":{}}],["accommod",{"_index":806,"title":{},"name":{},"text":{"20":{}},"component":{}}],["accomplish",{"_index":409,"title":{},"name":{},"text":{"13":{}},"component":{}}],["accord",{"_index":1311,"title":{},"name":{},"text":{"24":{},"29":{},"52":{},"53":{},"56":{}},"component":{}}],["account",{"_index":169,"title":{"14":{},"31":{},"32":{},"33":{},"13-3":{},"14-4":{},"14-5":{},"14-6":{},"14-7":{},"32-1":{},"33-1":{},"33-2":{},"33-3":{},"51-15":{},"51-16":{}},"name":{},"text":{"7":{},"9":{},"13":{},"14":{},"20":{},"24":{},"31":{},"32":{},"33":{},"35":{},"42":{},"46":{},"48":{},"51":{},"53":{},"54":{},"55":{}},"component":{}}],["account_contract",{"_index":310,"title":{"9-10":{}},"name":{},"text":{"9":{}},"component":{}}],["account_nam",{"_index":203,"title":{},"name":{},"text":{"7":{},"13":{}},"component":{}}],["account_setup",{"_index":551,"title":{},"name":{"14":{}},"text":{},"component":{}}],["account’",{"_index":447,"title":{},"name":{},"text":{"13":{},"14":{},"31":{},"33":{},"35":{}},"component":{}}],["accur",{"_index":1207,"title":{},"name":{},"text":{"22":{}},"component":{}}],["achiev",{"_index":27,"title":{},"name":{},"text":{"4":{},"16":{},"22":{},"29":{},"33":{},"35":{}},"component":{}}],["acord",{"_index":1890,"title":{},"name":{},"text":{"42":{}},"component":{}}],["acquir",{"_index":573,"title":{},"name":{},"text":{"14":{}},"component":{}}],["action",{"_index":1707,"title":{},"name":{},"text":{"35":{}},"component":{}}],["activ",{"_index":595,"title":{"15-3":{},"15-4":{}},"name":{},"text":{"15":{},"18":{},"24":{},"54":{}},"component":{}}],["actor",{"_index":1612,"title":{},"name":{},"text":{"32":{}},"component":{}}],["actual",{"_index":1465,"title":{},"name":{},"text":{"29":{},"50":{},"53":{},"55":{},"56":{}},"component":{}}],["ad",{"_index":265,"title":{"15-13":{},"20-2":{},"20-6":{},"20-9":{},"20-13":{},"20-20":{},"22-12":{},"22-21":{},"22-23":{},"22-27":{},"22-30":{},"22-33":{},"22-39":{},"22-47":{},"22-51":{},"22-59":{},"22-69":{},"53-6":{}},"name":{},"text":{"7":{},"13":{},"15":{},"20":{},"22":{},"23":{},"24":{},"30":{},"42":{},"44":{},"45":{},"54":{}},"component":{}}],["adapt",{"_index":427,"title":{},"name":{},"text":{"13":{}},"component":{}}],["add",{"_index":274,"title":{"30-5":{}},"name":{},"text":{"7":{},"13":{},"14":{},"15":{},"20":{},"22":{},"24":{},"29":{},"30":{},"33":{},"35":{},"42":{},"54":{},"57":{}},"component":{}}],["added_valu",{"_index":1866,"title":{},"name":{},"text":{"42":{}},"component":{}}],["addit",{"_index":597,"title":{"15-5":{}},"name":{},"text":{"15":{},"22":{},"23":{},"24":{},"29":{},"30":{},"42":{},"51":{},"52":{},"53":{}},"component":{}}],["addition",{"_index":2366,"title":{},"name":{},"text":{"56":{}},"component":{}}],["addition/multipl",{"_index":2207,"title":{},"name":{},"text":{"53":{}},"component":{}}],["address",{"_index":127,"title":{"19":{},"43":{},"21-4":{},"21-5":{}},"name":{"43":{}},"text":{"7":{},"13":{},"14":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"29":{},"32":{},"33":{},"43":{},"45":{},"46":{},"47":{},"48":{},"49":{},"51":{},"52":{},"53":{},"54":{},"55":{},"56":{},"57":{}},"component":{}}],["address.adoc",{"_index":2156,"title":{},"name":{},"text":{"52":{}},"component":{}}],["address_domain",{"_index":1908,"title":{},"name":{},"text":{"45":{},"47":{},"48":{}},"component":{}}],["adher",{"_index":1598,"title":{},"name":{},"text":{"31":{}},"component":{}}],["adjust",{"_index":817,"title":{},"name":{},"text":{"20":{}},"component":{}}],["advanc",{"_index":1605,"title":{},"name":{},"text":{"32":{}},"component":{}}],["affect",{"_index":135,"title":{},"name":{},"text":{"7":{},"24":{},"30":{},"41":{},"52":{},"53":{}},"component":{}}],["aggreg",{"_index":2203,"title":{},"name":{},"text":{"53":{}},"component":{}}],["aim",{"_index":772,"title":{},"name":{},"text":{"20":{},"23":{}},"component":{}}],["air",{"_index":1435,"title":{"29-3":{}},"name":{},"text":{},"component":{}}],["alchemi",{"_index":1385,"title":{},"name":{},"text":{"25":{},"28":{}},"component":{}}],["alchemy’",{"_index":415,"title":{},"name":{},"text":{"13":{}},"component":{}}],["algebra",{"_index":1726,"title":{},"name":{},"text":{"36":{}},"component":{}}],["algorithm",{"_index":637,"title":{},"name":{},"text":{"15":{},"22":{},"51":{}},"component":{}}],["align",{"_index":2105,"title":{},"name":{},"text":{"51":{}},"component":{}}],["alloc",{"_index":1992,"title":{},"name":{},"text":{"46":{},"48":{},"53":{},"57":{}},"component":{}}],["alloc_loc",{"_index":1488,"title":{},"name":{},"text":{"29":{}},"component":{}}],["allow",{"_index":195,"title":{},"name":{},"text":{"7":{},"13":{},"14":{},"15":{},"22":{},"23":{},"24":{},"29":{},"32":{},"33":{},"35":{},"41":{},"42":{},"45":{},"46":{},"48":{},"52":{},"54":{}},"component":{}}],["along",{"_index":1197,"title":{},"name":{},"text":{"22":{},"56":{}},"component":{}}],["alpha",{"_index":98,"title":{"19-1":{},"19-2":{},"19-3":{},"23-1":{},"55-2":{}},"name":{},"text":{"7":{},"16":{},"21":{},"29":{},"52":{},"53":{},"55":{}},"component":{}}],["alpha=1",{"_index":1772,"title":{},"name":{},"text":{"38":{}},"component":{}}],["alphabet",{"_index":1429,"title":{},"name":{},"text":{"27":{}},"component":{}}],["alreadi",{"_index":517,"title":{},"name":{},"text":{"13":{},"29":{}},"component":{}}],["altern",{"_index":586,"title":{},"name":{},"text":{"14":{},"15":{},"22":{}},"component":{}}],["although",{"_index":1643,"title":{},"name":{},"text":{"33":{}},"component":{}}],["alway",{"_index":1321,"title":{},"name":{},"text":{"24":{},"29":{},"35":{},"41":{},"50":{},"54":{}},"component":{}}],["amount",{"_index":453,"title":{},"name":{},"text":{"13":{},"14":{},"21":{},"30":{},"42":{},"53":{},"54":{},"55":{}},"component":{}}],["analog",{"_index":1901,"title":{},"name":{},"text":{"44":{},"46":{},"47":{},"48":{}},"component":{}}],["analogu",{"_index":1902,"title":{},"name":{},"text":{"44":{}},"component":{}}],["analysi",{"_index":698,"title":{},"name":{},"text":{"17":{}},"component":{}}],["analyz",{"_index":1240,"title":{},"name":{},"text":{"23":{},"53":{}},"component":{}}],["annot",{"_index":1550,"title":{},"name":{},"text":{"30":{},"42":{},"54":{}},"component":{}}],["anot",{"_index":1534,"title":{"30-2":{},"30-3":{}},"name":{},"text":{"30":{},"42":{}},"component":{}}],["anoth",{"_index":1672,"title":{},"name":{},"text":{"33":{},"45":{},"46":{},"47":{},"48":{},"56":{}},"component":{}}],["anyon",{"_index":2132,"title":{},"name":{},"text":{"52":{},"55":{}},"component":{}}],["ap",{"_index":1338,"title":{},"name":{},"text":{"24":{}},"component":{}}],["api",{"_index":55,"title":{"5":{},"25":{},"28":{},"22-43":{}},"name":{"5":{},"25":{}},"text":{"13":{},"19":{},"22":{},"24":{},"25":{},"28":{},"41":{}},"component":{}}],["api/starknet",{"_index":1390,"title":{},"name":{},"text":{"25":{},"28":{}},"component":{}}],["api_vers",{"_index":1823,"title":{},"name":{},"text":{"41":{}},"component":{}}],["appear",{"_index":1087,"title":{},"name":{},"text":{"22":{},"42":{},"46":{},"47":{},"48":{},"53":{},"54":{},"57":{}},"component":{}}],["appli",{"_index":196,"title":{},"name":{},"text":{"7":{},"22":{},"24":{},"50":{}},"component":{}}],["applic",{"_index":245,"title":{},"name":{},"text":{"7":{},"15":{},"32":{},"53":{}},"component":{}}],["approach",{"_index":1585,"title":{},"name":{"31":{}},"text":{},"component":{}}],["appropri",{"_index":452,"title":{},"name":{},"text":{"13":{},"14":{}},"component":{}}],["approv",{"_index":1687,"title":{},"name":{},"text":{"35":{},"42":{}},"component":{}}],["apt",{"_index":650,"title":{},"name":{},"text":{"15":{}},"component":{}}],["arbitrari",{"_index":528,"title":{},"name":{},"text":{"13":{},"31":{},"35":{},"36":{},"46":{},"47":{},"48":{}},"component":{}}],["arbitrarili",{"_index":1608,"title":{},"name":{},"text":{"32":{}},"component":{}}],["architectur",{"_index":57,"title":{"6":{},"55-1":{}},"name":{},"text":{"17":{},"48":{}},"component":{}}],["arg",{"_index":1919,"title":{},"name":{},"text":{"45":{}},"component":{}}],["arguement",{"_index":178,"title":{},"name":{},"text":{"7":{}},"component":{}}],["argument",{"_index":138,"title":{"9-4":{},"9-6":{},"46-5":{},"46-11":{},"46-17":{},"46-23":{},"46-29":{},"46-35":{},"46-41":{},"46-47":{},"46-53":{},"46-60":{},"46-66":{},"46-72":{},"46-79":{},"46-85":{},"46-92":{},"47-10":{},"47-16":{},"47-22":{},"47-27":{},"47-34":{},"47-40":{},"47-47":{},"47-53":{},"47-60":{}},"name":{},"text":{"7":{},"9":{},"13":{},"14":{},"22":{},"24":{},"30":{},"32":{},"45":{},"46":{},"47":{},"48":{},"51":{},"56":{}},"component":{}}],["aris",{"_index":1606,"title":{},"name":{},"text":{"32":{}},"component":{}}],["arithmet",{"_index":632,"title":{},"name":{},"text":{"15":{},"56":{}},"component":{}}],["around",{"_index":1332,"title":{},"name":{},"text":{"24":{}},"component":{}}],["arr",{"_index":2423,"title":{},"name":{},"text":{"57":{}},"component":{}}],["arr_len",{"_index":2422,"title":{},"name":{},"text":{"57":{}},"component":{}}],["array",{"_index":832,"title":{"36-5":{}},"name":{},"text":{"20":{},"29":{},"36":{},"41":{},"42":{},"43":{},"46":{},"47":{},"48":{},"52":{},"54":{},"57":{}},"component":{}}],["array_len",{"_index":1846,"title":{},"name":{},"text":{"42":{}},"component":{}}],["array_ptr",{"_index":1484,"title":{},"name":{},"text":{"29":{}},"component":{}}],["arraytrait::new",{"_index":2039,"title":{},"name":{},"text":{"47":{},"48":{},"54":{},"57":{}},"component":{}}],["ascii",{"_index":1032,"title":{},"name":{},"text":{"22":{},"41":{},"43":{},"45":{},"51":{},"54":{},"56":{},"57":{}},"component":{}}],["assembl",{"_index":1288,"title":{},"name":{},"text":{"24":{},"29":{},"36":{},"56":{}},"component":{}}],["assert",{"_index":1473,"title":{},"name":{},"text":{"29":{},"46":{},"48":{},"50":{},"53":{},"57":{}},"component":{}}],["assert_nn_l",{"_index":1489,"title":{},"name":{},"text":{"29":{}},"component":{}}],["asset",{"_index":1629,"title":{},"name":{},"text":{"33":{},"54":{}},"component":{}}],["associ",{"_index":259,"title":{},"name":{},"text":{"7":{},"18":{},"29":{},"33":{},"41":{},"46":{},"47":{},"52":{},"53":{},"54":{},"55":{},"56":{}},"component":{}}],["assumpt",{"_index":2208,"title":{},"name":{},"text":{"53":{}},"component":{}}],["asynchron",{"_index":2287,"title":{},"name":{},"text":{"54":{}},"component":{}}],["atom",{"_index":2283,"title":{},"name":{},"text":{"53":{}},"component":{}}],["attach",{"_index":2288,"title":{},"name":{},"text":{"54":{}},"component":{}}],["attack",{"_index":1437,"title":{"29-3":{}},"name":{},"text":{"29":{},"32":{},"35":{},"54":{}},"component":{}}],["attacker’",{"_index":1703,"title":{},"name":{},"text":{"35":{}},"component":{}}],["attribut",{"_index":1,"title":{"1":{},"30-6":{}},"name":{},"text":{"30":{},"42":{}},"component":{}}],["audit",{"_index":367,"title":{"11":{},"26":{}},"name":{"11":{},"26":{}},"text":{"10":{},"11":{},"26":{}},"component":{}}],["auger",{"_index":1062,"title":{},"name":{},"text":{"22":{}},"component":{}}],["augment",{"_index":1724,"title":{},"name":{},"text":{"36":{}},"component":{}}],["author",{"_index":1057,"title":{},"name":{},"text":{"22":{}},"component":{}}],["autoformatt",{"_index":1296,"title":{},"name":{},"text":{"24":{}},"component":{}}],["automat",{"_index":1297,"title":{},"name":{},"text":{"24":{},"45":{},"57":{}},"component":{}}],["avail",{"_index":1167,"title":{},"name":{},"text":{"22":{},"23":{},"29":{},"46":{},"47":{},"48":{},"51":{},"53":{}},"component":{}}],["averag",{"_index":1276,"title":{},"name":{},"text":{"24":{}},"component":{}}],["avoid",{"_index":1692,"title":{},"name":{},"text":{"35":{},"54":{}},"component":{}}],["away",{"_index":1525,"title":{},"name":{},"text":{"29":{},"35":{}},"component":{}}],["b",{"_index":1774,"title":{},"name":{},"text":{"38":{},"42":{},"57":{}},"component":{}}],["b=n_elm",{"_index":1491,"title":{},"name":{},"text":{"29":{}},"component":{}}],["b_l",{"_index":2395,"title":{},"name":{},"text":{"56":{}},"component":{}}],["b_r",{"_index":2398,"title":{},"name":{},"text":{"56":{}},"component":{}}],["b_{high",{"_index":1780,"title":{},"name":{},"text":{"38":{}},"component":{}}],["b_{low",{"_index":1779,"title":{},"name":{},"text":{"38":{}},"component":{}}],["back",{"_index":2236,"title":{},"name":{},"text":{"53":{},"55":{}},"component":{}}],["backup",{"_index":230,"title":{},"name":{},"text":{"7":{}},"component":{}}],["bad",{"_index":1611,"title":{},"name":{},"text":{"32":{}},"component":{}}],["balanc",{"_index":1938,"title":{},"name":{},"text":{"45":{},"55":{}},"component":{}}],["balance.read",{"_index":2059,"title":{},"name":{},"text":{"48":{}},"component":{}}],["balance.writ",{"_index":2060,"title":{},"name":{},"text":{"48":{}},"component":{}}],["balance_of",{"_index":1862,"title":{},"name":{},"text":{"42":{}},"component":{}}],["base",{"_index":638,"title":{},"name":{},"text":{"15":{},"17":{},"19":{},"20":{},"24":{},"36":{},"37":{},"55":{}},"component":{}}],["bash",{"_index":617,"title":{},"name":{},"text":{"15":{}},"component":{}}],["bashrc",{"_index":618,"title":{},"name":{},"text":{"15":{}},"component":{}}],["basi",{"_index":918,"title":{},"name":{},"text":{"21":{}},"component":{}}],["basic",{"_index":5,"title":{"2":{},"7-1":{}},"name":{"2":{}},"text":{"33":{},"45":{},"50":{}},"component":{}}],["batch",{"_index":2030,"title":{},"name":{},"text":{"47":{},"48":{}},"component":{}}],["be",{"_index":140,"title":{},"name":{},"text":{"7":{},"20":{},"22":{},"29":{},"32":{},"33":{},"36":{},"54":{}},"component":{}}],["becom",{"_index":1324,"title":{},"name":{},"text":{"24":{},"51":{},"53":{},"56":{}},"component":{}}],["befor",{"_index":103,"title":{},"name":{},"text":{"7":{},"13":{},"14":{},"20":{},"22":{},"24":{},"29":{},"33":{},"35":{},"49":{},"52":{},"54":{},"55":{}},"component":{}}],["begin",{"_index":1776,"title":{},"name":{},"text":{"38":{},"55":{}},"component":{}}],["beginn",{"_index":692,"title":{},"name":{},"text":{"17":{}},"component":{}}],["begin{cas",{"_index":1749,"title":{},"name":{},"text":{"36":{},"56":{}},"component":{}}],["behav",{"_index":1512,"title":{},"name":{},"text":{"29":{},"44":{},"47":{}},"component":{}}],["behavior",{"_index":825,"title":{},"name":{},"text":{"20":{},"33":{}},"component":{}}],["behind",{"_index":1653,"title":{},"name":{},"text":{"33":{}},"component":{}}],["below",{"_index":407,"title":{},"name":{},"text":{"13":{},"15":{},"24":{},"26":{},"29":{},"30":{},"32":{},"36":{},"45":{},"46":{},"48":{},"52":{},"53":{},"54":{},"56":{},"57":{}},"component":{}}],["best",{"_index":914,"title":{},"name":{},"text":{"21":{},"35":{}},"component":{}}],["beta",{"_index":1771,"title":{},"name":{},"text":{"38":{}},"component":{}}],["better",{"_index":850,"title":{},"name":{},"text":{"20":{},"25":{},"28":{},"29":{}},"component":{}}],["between",{"_index":983,"title":{},"name":{},"text":{"22":{},"24":{},"29":{},"41":{},"44":{},"47":{},"52":{},"54":{},"56":{}},"component":{}}],["big",{"_index":1164,"title":{},"name":{},"text":{"22":{},"24":{},"36":{},"54":{}},"component":{}}],["bin",{"_index":1833,"title":{},"name":{},"text":{"42":{}},"component":{}}],["binari",{"_index":426,"title":{},"name":{},"text":{"13":{},"15":{},"49":{},"56":{}},"component":{}}],["bit",{"_index":437,"title":{},"name":{},"text":{"13":{},"26":{},"36":{},"38":{},"52":{},"56":{}},"component":{}}],["bits}}}_{\\text{lsb",{"_index":2144,"title":{},"name":{},"text":{"52":{}},"component":{}}],["bitwis",{"_index":2246,"title":{},"name":{},"text":{"53":{}},"component":{}}],["bitwise_builtin",{"_index":2086,"title":{},"name":{},"text":{"50":{}},"component":{}}],["blake2s.cairo",{"_index":1381,"title":{},"name":{},"text":{"24":{}},"component":{}}],["blastapi.io/publ",{"_index":1389,"title":{},"name":{},"text":{"25":{},"28":{}},"component":{}}],["block",{"_index":152,"title":{"27":{},"49":{},"21-1":{},"21-2":{},"49-1":{},"49-2":{},"55-6":{},"55-9":{}},"name":{},"text":{"7":{},"14":{},"20":{},"21":{},"22":{},"23":{},"24":{},"27":{},"29":{},"34":{},"35":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"52":{},"53":{},"54":{},"55":{},"56":{},"57":{}},"component":{}}],["block/transaction/execut",{"_index":2029,"title":{},"name":{},"text":{"47":{},"48":{}},"component":{}}],["block_download",{"_index":1009,"title":{},"name":{},"text":{"22":{}},"component":{}}],["block_hash",{"_index":130,"title":{},"name":{},"text":{"7":{},"50":{}},"component":{}}],["block_lat",{"_index":1006,"title":{},"name":{},"text":{"22":{}},"component":{}}],["block_numb",{"_index":131,"title":{},"name":{},"text":{"7":{},"46":{},"47":{},"48":{},"49":{},"50":{}},"component":{}}],["block_process",{"_index":1013,"title":{},"name":{},"text":{"22":{}},"component":{}}],["block_tim",{"_index":1003,"title":{},"name":{},"text":{"22":{}},"component":{}}],["block_timestamp",{"_index":1961,"title":{},"name":{},"text":{"46":{},"48":{},"49":{}},"component":{}}],["blockchain",{"_index":1428,"title":{},"name":{},"text":{"27":{},"33":{}},"component":{}}],["blockhash",{"_index":1285,"title":{},"name":{},"text":{"24":{}},"component":{}}],["blockifi",{"_index":1267,"title":{},"name":{},"text":{"24":{}},"component":{}}],["blocknumb",{"_index":2021,"title":{},"name":{},"text":{"47":{}},"component":{}}],["block’",{"_index":1011,"title":{},"name":{},"text":{"22":{},"49":{}},"component":{}}],["bmod",{"_index":1928,"title":{},"name":{},"text":{"45":{}},"component":{}}],["bodi",{"_index":1560,"title":{},"name":{},"text":{"30":{}},"component":{}}],["book",{"_index":302,"title":{"17":{}},"name":{"17":{}},"text":{"8":{},"17":{}},"component":{}}],["bool",{"_index":1567,"title":{},"name":{},"text":{"30":{},"42":{},"47":{},"48":{}},"component":{}}],["boolean",{"_index":1365,"title":{},"name":{},"text":{"24":{}},"component":{}}],["both",{"_index":1142,"title":{},"name":{},"text":{"22":{},"24":{},"42":{},"45":{},"50":{},"52":{},"53":{},"54":{},"56":{}},"component":{}}],["bottom",{"_index":2377,"title":{},"name":{},"text":{"56":{}},"component":{}}],["bound",{"_index":2191,"title":{},"name":{},"text":{"53":{}},"component":{}}],["bounti",{"_index":366,"title":{"10":{}},"name":{"10":{}},"text":{"10":{}},"component":{}}],["break",{"_index":789,"title":{"22-70":{}},"name":{},"text":{"20":{},"22":{},"24":{},"38":{}},"component":{}}],["breakdown",{"_index":1538,"title":{},"name":{},"text":{"30":{}},"component":{}}],["breviti",{"_index":1497,"title":{},"name":{},"text":{"29":{}},"component":{}}],["brew",{"_index":654,"title":{},"name":{},"text":{"15":{}},"component":{}}],["bridg",{"_index":457,"title":{"55":{},"19-4":{}},"name":{"55":{}},"text":{"13":{},"14":{},"19":{},"54":{},"55":{}},"component":{}}],["brief",{"_index":2363,"title":{},"name":{},"text":{"56":{}},"component":{}}],["bring",{"_index":1651,"title":{},"name":{},"text":{"33":{}},"component":{}}],["broader",{"_index":1952,"title":{},"name":{},"text":{"46":{},"47":{},"48":{}},"component":{}}],["brows",{"_index":542,"title":{},"name":{},"text":{"13":{}},"component":{}}],["bug",{"_index":365,"title":{"10":{}},"name":{"10":{}},"text":{"10":{},"22":{},"24":{},"54":{}},"component":{}}],["bugfix",{"_index":1115,"title":{},"name":{},"text":{"22":{}},"component":{}}],["build",{"_index":671,"title":{},"name":{},"text":{"15":{},"22":{},"26":{}},"component":{}}],["built",{"_index":289,"title":{},"name":{},"text":{"8":{},"51":{}},"component":{}}],["builtin",{"_index":222,"title":{"23-6":{},"53-5":{},"53-6":{}},"name":{},"text":{"7":{},"23":{},"24":{},"32":{},"41":{},"53":{}},"component":{}}],["builtin_instance_count",{"_index":2083,"title":{},"name":{},"text":{"50":{}},"component":{}}],["builtin_nam",{"_index":1824,"title":{},"name":{},"text":{"41":{}},"component":{}}],["bulk",{"_index":1103,"title":{},"name":{},"text":{"22":{}},"component":{}}],["bump",{"_index":2310,"title":{},"name":{},"text":{"54":{}},"component":{}}],["bundl",{"_index":1149,"title":{},"name":{},"text":{"22":{}},"component":{}}],["burn",{"_index":2358,"title":{},"name":{},"text":{"55":{}},"component":{}}],["busi",{"_index":53,"title":{},"name":{},"text":{"4":{}},"component":{}}],["bware",{"_index":1387,"title":{},"name":{},"text":{"25":{},"28":{}},"component":{}}],["bypass",{"_index":1659,"title":{},"name":{},"text":{"33":{}},"component":{}}],["byte",{"_index":252,"title":{},"name":{},"text":{"7":{},"15":{},"41":{},"44":{},"53":{},"54":{}},"component":{}}],["bytecod",{"_index":190,"title":{},"name":{},"text":{"7":{},"9":{},"21":{},"41":{}},"component":{}}],["bytecode_hash",{"_index":1826,"title":{},"name":{},"text":{"41":{}},"component":{}}],["byteorder=\"big",{"_index":2126,"title":{},"name":{},"text":{"51":{}},"component":{}}],["c",{"_index":1325,"title":{},"name":{},"text":{"24":{},"36":{}},"component":{}}],["c_w",{"_index":2261,"title":{},"name":{},"text":{"53":{}},"component":{}}],["c_w\\cdot",{"_index":2266,"title":{},"name":{},"text":{"53":{}},"component":{}}],["c_w\\cdot\\underbrac",{"_index":2258,"title":{},"name":{},"text":{"53":{}},"component":{}}],["c_w\\left",{"_index":2276,"title":{},"name":{},"text":{"53":{}},"component":{}}],["cach",{"_index":1175,"title":{},"name":{},"text":{"22":{}},"component":{}}],["cairo",{"_index":47,"title":{"29":{},"15-3":{},"15-4":{},"15-8":{},"15-10":{},"15-11":{},"15-12":{},"15-13":{},"21-1":{},"29-5":{},"41-1":{},"41-2":{},"41-3":{},"41-4":{},"42-1":{},"48-1":{},"48-7":{}},"name":{"29":{}},"text":{"4":{},"7":{},"9":{},"11":{},"13":{},"15":{},"17":{},"18":{},"20":{},"21":{},"22":{},"24":{},"29":{},"30":{},"32":{},"36":{},"37":{},"41":{},"42":{},"43":{},"44":{},"45":{},"46":{},"47":{},"48":{},"51":{},"52":{},"53":{},"54":{},"56":{},"57":{}},"component":{}}],["cairo0",{"_index":1951,"title":{},"name":{"46":{}},"text":{},"component":{}}],["cairo1",{"_index":2019,"title":{},"name":{"47":{}},"text":{},"component":{}}],["cairo1.0",{"_index":1331,"title":{},"name":{},"text":{"24":{}},"component":{}}],["cairo_compiler_arg",{"_index":430,"title":{},"name":{},"text":{"13":{},"14":{}},"component":{}}],["cairo_compiler_dir=~/.cairo/target/releas",{"_index":429,"title":{},"name":{},"text":{"13":{},"14":{}},"component":{}}],["cairo_depend",{"_index":320,"title":{"9-19":{}},"name":{},"text":{"9":{}},"component":{}}],["cairo_path",{"_index":315,"title":{"9-14":{}},"name":{},"text":{"9":{}},"component":{}}],["cairo_practic",{"_index":488,"title":{},"name":{},"text":{"13":{}},"component":{}}],["cairo_venv",{"_index":611,"title":{},"name":{},"text":{"15":{}},"component":{}}],["cairo_venv/bin/activ",{"_index":612,"title":{},"name":{},"text":{"15":{}},"component":{}}],["cairoresourcefeeweight",{"_index":2235,"title":{},"name":{},"text":{"53":{}},"component":{}}],["cairoresourceusag",{"_index":2232,"title":{},"name":{},"text":{"53":{}},"component":{}}],["cairo’",{"_index":2199,"title":{},"name":{},"text":{"53":{}},"component":{}}],["calcul",{"_index":875,"title":{"51-2":{},"51-5":{},"51-7":{},"51-10":{},"51-13":{},"51-14":{},"51-16":{}},"name":{},"text":{"20":{},"41":{},"45":{},"51":{},"53":{},"54":{}},"component":{}}],["call",{"_index":65,"title":{"46":{},"47":{},"48":{},"7-4":{},"55-4":{},"55-8":{}},"name":{"46":{},"47":{},"48":{}},"text":{"7":{},"13":{},"15":{},"18":{},"22":{},"24":{},"29":{},"30":{},"32":{},"33":{},"34":{},"35":{},"41":{},"43":{},"44":{},"45":{},"46":{},"47":{},"48":{},"51":{},"54":{},"55":{},"57":{}},"component":{}}],["call_contract",{"_index":1947,"title":{"46-38":{},"47-13":{},"48-9":{}},"name":{},"text":{"46":{},"47":{},"48":{}},"component":{}}],["call_contract_syscal",{"_index":2032,"title":{},"name":{},"text":{"47":{},"48":{}},"component":{}}],["call_contract{syscall_ptr",{"_index":1973,"title":{},"name":{},"text":{"46":{},"48":{}},"component":{}}],["callabl",{"_index":1800,"title":{},"name":{},"text":{"41":{}},"component":{}}],["calldata",{"_index":1976,"title":{},"name":{},"text":{"46":{},"47":{},"48":{},"51":{},"52":{},"53":{},"54":{}},"component":{}}],["calldata_s",{"_index":1975,"title":{},"name":{},"text":{"46":{},"48":{}},"component":{}}],["caller",{"_index":506,"title":{},"name":{},"text":{"13":{},"46":{},"47":{},"48":{},"54":{}},"component":{}}],["caller=get_caller_address",{"_index":505,"title":{},"name":{},"text":{"13":{}},"component":{}}],["caller_address",{"_index":1963,"title":{},"name":{},"text":{"46":{},"48":{}},"component":{}}],["caller’",{"_index":1986,"title":{},"name":{},"text":{"46":{}},"component":{}}],["came",{"_index":2353,"title":{},"name":{},"text":{"55":{}},"component":{}}],["cancel",{"_index":2286,"title":{"54-4":{}},"name":{},"text":{"54":{}},"component":{}}],["cancell1tol2messag",{"_index":2323,"title":{},"name":{},"text":{"54":{}},"component":{}}],["candid",{"_index":942,"title":{},"name":{},"text":{"21":{}},"component":{}}],["canon",{"_index":1478,"title":{},"name":{},"text":{"29":{}},"component":{}}],["can’t",{"_index":1185,"title":{},"name":{},"text":{"22":{},"31":{},"53":{}},"component":{}}],["capabl",{"_index":717,"title":{},"name":{},"text":{"18":{},"23":{},"55":{}},"component":{}}],["capac",{"_index":1230,"title":{},"name":{},"text":{"23":{}},"component":{}}],["cargo",{"_index":670,"title":{},"name":{},"text":{"15":{},"42":{}},"component":{}}],["carri",{"_index":1613,"title":{},"name":{},"text":{"32":{}},"component":{}}],["case",{"_index":51,"title":{"53-7":{}},"name":{},"text":{"4":{},"7":{},"14":{},"29":{},"33":{},"42":{},"43":{},"50":{},"53":{},"54":{},"55":{}},"component":{}}],["casm",{"_index":980,"title":{"29-1":{},"29-4":{}},"name":{},"text":{"22":{},"24":{},"29":{},"56":{}},"component":{}}],["cater",{"_index":683,"title":{},"name":{},"text":{"17":{}},"component":{}}],["caus",{"_index":1134,"title":{},"name":{},"text":{"22":{},"52":{}},"component":{}}],["caveat",{"_index":1213,"title":{},"name":{},"text":{"22":{}},"component":{}}],["cd",{"_index":487,"title":{},"name":{},"text":{"13":{},"15":{}},"component":{}}],["cdot",{"_index":1784,"title":{},"name":{},"text":{"38":{},"53":{}},"component":{}}],["cdot]_j",{"_index":1736,"title":{},"name":{},"text":{"36":{}},"component":{}}],["cell",{"_index":2153,"title":{},"name":{},"text":{"52":{},"53":{}},"component":{}}],["certain",{"_index":931,"title":{},"name":{},"text":{"21":{},"22":{},"29":{}},"component":{}}],["chain",{"_index":412,"title":{"52":{},"51-18":{},"52-2":{},"52-5":{},"53-8":{}},"name":{"52":{}},"text":{"13":{},"22":{},"24":{},"26":{},"32":{},"33":{},"41":{},"43":{},"46":{},"47":{},"48":{},"50":{},"51":{},"52":{},"53":{}},"component":{}}],["chain_id",{"_index":2104,"title":{},"name":{},"text":{"51":{},"54":{}},"component":{}}],["chainsecurity.com",{"_index":1410,"title":{},"name":{},"text":{"26":{}},"component":{}}],["chainstack",{"_index":1391,"title":{},"name":{},"text":{"25":{},"28":{}},"component":{}}],["chainstack.com/build",{"_index":1392,"title":{},"name":{},"text":{"25":{},"28":{}},"component":{}}],["chang",{"_index":760,"title":{"20-3":{},"20-7":{},"20-10":{},"20-14":{},"20-21":{},"22-5":{},"22-10":{},"22-14":{},"22-19":{},"22-40":{},"22-45":{},"22-53":{},"22-57":{},"22-67":{},"22-71":{},"23-3":{},"42-1":{}},"name":{},"text":{"20":{},"21":{},"22":{},"23":{},"24":{},"30":{},"33":{},"35":{},"42":{},"50":{},"51":{},"52":{},"53":{},"55":{}},"component":{}}],["changelog",{"_index":833,"title":{},"name":{},"text":{"20":{}},"component":{}}],["chapter",{"_index":702,"title":{},"name":{},"text":{"17":{}},"component":{}}],["charact",{"_index":988,"title":{},"name":{},"text":{"22":{}},"component":{}}],["charg",{"_index":1238,"title":{"53-3":{},"53-13":{}},"name":{},"text":{"23":{},"24":{},"29":{},"31":{},"32":{},"34":{},"35":{},"46":{},"48":{},"53":{},"54":{}},"component":{}}],["check",{"_index":479,"title":{},"name":{},"text":{"13":{},"14":{},"15":{},"24":{},"35":{},"53":{},"55":{}},"component":{}}],["checkout",{"_index":668,"title":{},"name":{},"text":{"15":{}},"component":{}}],["child",{"_index":2390,"title":{},"name":{},"text":{"56":{}},"component":{}}],["children",{"_index":2407,"title":{},"name":{},"text":{"56":{}},"component":{}}],["choic",{"_index":481,"title":{},"name":{},"text":{"13":{}},"component":{}}],["choos",{"_index":186,"title":{"14-3":{}},"name":{},"text":{"7":{}},"component":{}}],["chose",{"_index":459,"title":{},"name":{},"text":{"13":{},"29":{}},"component":{}}],["circuit",{"_index":1727,"title":{},"name":{},"text":{"36":{}},"component":{}}],["claim",{"_index":1353,"title":{},"name":{},"text":{"24":{}},"component":{}}],["class",{"_index":177,"title":{"41":{},"44":{},"13-5":{},"41-1":{},"41-2":{},"41-3":{},"41-4":{},"44-1":{},"56-3":{}},"name":{"41":{},"44":{}},"text":{"7":{},"9":{},"13":{},"20":{},"21":{},"22":{},"24":{},"29":{},"32":{},"41":{},"43":{},"44":{},"46":{},"47":{},"48":{},"51":{},"52":{},"53":{},"56":{}},"component":{}}],["class/inst",{"_index":1366,"title":{},"name":{},"text":{"24":{}},"component":{}}],["class_hash",{"_index":525,"title":{},"name":{},"text":{"13":{},"32":{},"41":{},"43":{},"46":{},"47":{},"48":{},"51":{}},"component":{}}],["classes_tree_root",{"_index":2371,"title":{},"name":{},"text":{"56":{}},"component":{}}],["classhash",{"_index":2036,"title":{},"name":{},"text":{"47":{},"48":{}},"component":{}}],["class’",{"_index":1803,"title":{},"name":{},"text":{"41":{}},"component":{}}],["clear",{"_index":1499,"title":{},"name":{},"text":{"29":{},"54":{},"55":{}},"component":{}}],["cli",{"_index":77,"title":{"8":{},"15-8":{}},"name":{},"text":{"7":{},"8":{},"13":{},"14":{},"15":{},"18":{},"24":{},"54":{}},"component":{}}],["clone",{"_index":603,"title":{"15-12":{}},"name":{},"text":{"15":{}},"component":{}}],["close",{"_index":1593,"title":{},"name":{},"text":{"31":{},"53":{}},"component":{}}],["closer",{"_index":1221,"title":{},"name":{},"text":{"22":{}},"component":{}}],["cmake",{"_index":362,"title":{},"name":{},"text":{"9":{}},"component":{}}],["code",{"_index":182,"title":{"12":{}},"name":{},"text":{"7":{},"9":{},"10":{},"13":{},"15":{},"22":{},"24":{},"29":{},"30":{},"33":{},"41":{},"42":{},"43":{},"44":{},"45":{},"46":{},"47":{},"48":{},"52":{},"56":{},"57":{}},"component":{}}],["collabor",{"_index":1594,"title":{},"name":{},"text":{"31":{}},"component":{}}],["collect",{"_index":1955,"title":{},"name":{},"text":{"46":{},"48":{}},"component":{}}],["collis",{"_index":2311,"title":{},"name":{},"text":{"54":{},"56":{}},"component":{}}],["combin",{"_index":1040,"title":{},"name":{},"text":{"22":{},"24":{},"53":{},"56":{}},"component":{}}],["come",{"_index":1439,"title":{},"name":{},"text":{"29":{}},"component":{}}],["command",{"_index":58,"title":{"7":{},"7-1":{}},"name":{"7":{}},"text":{"7":{},"8":{},"9":{},"13":{},"14":{},"15":{},"22":{},"24":{},"41":{}},"component":{}}],["comment",{"_index":1337,"title":{},"name":{},"text":{"24":{}},"component":{}}],["commit",{"_index":871,"title":{"56-1":{}},"name":{},"text":{"20":{},"22":{},"24":{},"49":{},"56":{}},"component":{}}],["common",{"_index":1482,"title":{"46-7":{},"46-13":{},"46-19":{},"46-25":{},"46-31":{},"46-37":{},"46-43":{},"46-49":{},"46-55":{},"46-62":{},"46-68":{},"46-74":{},"46-81":{},"46-87":{},"46-94":{},"47-5":{},"47-12":{},"47-18":{},"47-23":{},"47-29":{},"47-36":{},"47-42":{},"47-49":{},"47-55":{}},"name":{},"text":{"29":{},"45":{},"47":{},"48":{}},"component":{}}],["commonli",{"_index":1089,"title":{},"name":{},"text":{"22":{}},"component":{}}],["commun",{"_index":297,"title":{},"name":{},"text":{"8":{},"30":{},"31":{},"55":{}},"component":{}}],["compani",{"_index":1406,"title":{},"name":{},"text":{"26":{}},"component":{}}],["companion",{"_index":709,"title":{},"name":{},"text":{"17":{}},"component":{}}],["compar",{"_index":1656,"title":{},"name":{},"text":{"33":{}},"component":{}}],["compat",{"_index":791,"title":{},"name":{},"text":{"20":{},"30":{}},"component":{}}],["compens",{"_index":1457,"title":{},"name":{},"text":{"29":{},"32":{}},"component":{}}],["compil",{"_index":181,"title":{"9":{},"13-4":{},"15-11":{},"15-12":{}},"name":{"9":{}},"text":{"7":{},"9":{},"13":{},"15":{},"20":{},"22":{},"24":{},"29":{},"30":{},"32":{},"41":{},"42":{},"45":{},"51":{},"52":{},"56":{},"57":{}},"component":{}}],["compiled_class_hash",{"_index":2112,"title":{},"name":{},"text":{"51":{},"56":{}},"component":{}}],["complet",{"_index":385,"title":{"11":{}},"name":{"11":{}},"text":{"11":{},"14":{},"17":{},"21":{},"31":{},"32":{},"33":{},"35":{},"48":{},"53":{},"54":{},"55":{}},"component":{}}],["complex",{"_index":1930,"title":{},"name":{},"text":{"45":{},"53":{},"57":{}},"component":{}}],["compliant",{"_index":859,"title":{},"name":{},"text":{"20":{}},"component":{}}],["complic",{"_index":1521,"title":{},"name":{},"text":{"29":{}},"component":{}}],["compon",{"_index":1293,"title":{},"name":{},"text":{"24":{},"29":{},"41":{},"53":{}},"component":{}}],["compos",{"_index":34,"title":{},"name":{},"text":{"4":{},"16":{},"53":{}},"component":{}}],["comprehens",{"_index":678,"title":{},"name":{},"text":{"17":{},"30":{}},"component":{}}],["compress",{"_index":2337,"title":{},"name":{},"text":{"55":{}},"component":{}}],["compris",{"_index":2101,"title":{},"name":{},"text":{"51":{}},"component":{}}],["compromis",{"_index":32,"title":{},"name":{},"text":{"4":{},"16":{}},"component":{}}],["comput",{"_index":30,"title":{"41-2":{},"41-4":{},"53-4":{}},"name":{},"text":{"4":{},"7":{},"13":{},"14":{},"16":{},"21":{},"22":{},"24":{},"29":{},"32":{},"34":{},"41":{},"43":{},"45":{},"46":{},"47":{},"48":{},"49":{},"51":{},"53":{},"54":{},"55":{},"56":{}},"component":{}}],["concept",{"_index":1368,"title":{},"name":{},"text":{"24":{}},"component":{}}],["concern",{"_index":235,"title":{},"name":{},"text":{"7":{}},"component":{}}],["conclud",{"_index":1464,"title":{},"name":{},"text":{"29":{},"34":{}},"component":{}}],["concret",{"_index":1533,"title":{"30-1":{}},"name":{},"text":{"35":{},"53":{}},"component":{}}],["condit",{"_index":1333,"title":{},"name":{},"text":{"24":{}},"component":{}}],["conduct",{"_index":402,"title":{"12":{}},"name":{"12":{}},"text":{"55":{}},"component":{}}],["confid",{"_index":2347,"title":{},"name":{},"text":{"55":{}},"component":{}}],["config",{"_index":1120,"title":{},"name":{},"text":{"22":{}},"component":{}}],["configur",{"_index":559,"title":{"22-45":{},"22-63":{},"22-66":{}},"name":{},"text":{"14":{},"22":{}},"component":{}}],["confirm",{"_index":1172,"title":{},"name":{},"text":{"22":{},"33":{},"54":{},"55":{}},"component":{}}],["confus",{"_index":1130,"title":{},"name":{},"text":{"22":{}},"component":{}}],["congratul",{"_index":540,"title":{},"name":{},"text":{"13":{}},"component":{}}],["connect",{"_index":1020,"title":{},"name":{},"text":{"22":{}},"component":{}}],["consecut",{"_index":1305,"title":{},"name":{},"text":{"24":{}},"component":{}}],["consensi",{"_index":1411,"title":{},"name":{},"text":{"26":{}},"component":{}}],["consensys.net/dilig",{"_index":1413,"title":{},"name":{},"text":{"26":{}},"component":{}}],["consequ",{"_index":2135,"title":{},"name":{},"text":{"52":{},"53":{}},"component":{}}],["consid",{"_index":1453,"title":{},"name":{},"text":{"29":{},"31":{},"32":{},"35":{},"42":{},"46":{},"47":{},"48":{}},"component":{}}],["consider",{"_index":1480,"title":{},"name":{},"text":{"29":{}},"component":{}}],["consist",{"_index":348,"title":{},"name":{},"text":{"9":{},"14":{},"21":{},"38":{},"45":{},"54":{},"56":{}},"component":{}}],["constant",{"_index":1789,"title":{},"name":{},"text":{"38":{},"43":{},"51":{},"53":{},"54":{},"56":{}},"component":{}}],["constraint",{"_index":1443,"title":{},"name":{},"text":{"29":{}},"component":{}}],["construct",{"_index":893,"title":{},"name":{},"text":{"20":{},"36":{},"55":{},"56":{}},"component":{}}],["constructor",{"_index":194,"title":{},"name":{},"text":{"7":{},"32":{},"41":{},"42":{},"43":{},"46":{},"47":{},"48":{},"51":{},"56":{}},"component":{}}],["constructor_calldata",{"_index":1983,"title":{},"name":{},"text":{"46":{},"48":{},"51":{}},"component":{}}],["constructor_calldata_hash",{"_index":1897,"title":{},"name":{},"text":{"43":{}},"component":{}}],["constructor_calldata_s",{"_index":1982,"title":{},"name":{},"text":{"46":{},"48":{}},"component":{}}],["constructor_entry_point",{"_index":1811,"title":{},"name":{},"text":{"41":{}},"component":{}}],["constructor_input",{"_index":192,"title":{},"name":{},"text":{"7":{}},"component":{}}],["constructor{syscall_ptr",{"_index":1619,"title":{},"name":{},"text":{"32":{}},"component":{}}],["constructor’",{"_index":1985,"title":{},"name":{},"text":{"46":{},"47":{},"48":{}},"component":{}}],["consum",{"_index":935,"title":{},"name":{},"text":{"21":{},"23":{},"46":{},"48":{},"50":{},"54":{}},"component":{}}],["consumemessagefroml2",{"_index":2296,"title":{},"name":{},"text":{"54":{}},"component":{}}],["consumpt",{"_index":2313,"title":{},"name":{},"text":{"54":{}},"component":{}}],["contact_address",{"_index":253,"title":{},"name":{},"text":{"7":{}},"component":{}}],["contain",{"_index":145,"title":{},"name":{},"text":{"7":{},"9":{},"21":{},"22":{},"24":{},"29":{},"46":{},"47":{},"48":{},"50":{},"52":{},"54":{},"56":{},"57":{}},"component":{}}],["content",{"_index":2007,"title":{},"name":{},"text":{"46":{},"47":{},"48":{}},"component":{}}],["context",{"_index":153,"title":{},"name":{},"text":{"7":{},"46":{},"47":{},"48":{}},"component":{}}],["continu",{"_index":1074,"title":{},"name":{},"text":{"22":{},"45":{}},"component":{}}],["contract",{"_index":4,"title":{"2":{},"13":{},"30":{},"42":{},"43":{},"44":{},"45":{},"13-4":{},"13-5":{},"13-6":{},"13-7":{},"30-1":{},"30-2":{},"30-4":{},"53-11":{},"56-2":{}},"name":{"30":{},"42":{},"43":{},"44":{},"45":{}},"text":{"4":{},"7":{},"9":{},"10":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"24":{},"26":{},"29":{},"30":{},"31":{},"32":{},"33":{},"35":{},"41":{},"42":{},"43":{},"44":{},"45":{},"46":{},"47":{},"48":{},"51":{},"52":{},"53":{},"54":{},"55":{},"56":{},"57":{}},"component":{}}],["contract.cairo",{"_index":325,"title":{},"name":{},"text":{"9":{},"42":{}},"component":{}}],["contract_abi",{"_index":141,"title":{},"name":{},"text":{"7":{}},"component":{}}],["contract_abi.json",{"_index":329,"title":{},"name":{},"text":{"9":{},"42":{}},"component":{}}],["contract_address",{"_index":139,"title":{},"name":{},"text":{"7":{},"42":{},"43":{},"46":{},"48":{},"51":{},"52":{},"53":{},"54":{}},"component":{}}],["contract_address_salt",{"_index":1627,"title":{},"name":{},"text":{"32":{},"46":{},"47":{},"48":{},"51":{}},"component":{}}],["contract_class",{"_index":179,"title":{},"name":{},"text":{"7":{},"51":{}},"component":{}}],["contract_class_leaf_v0",{"_index":2374,"title":{},"name":{},"text":{"56":{}},"component":{}}],["contract_class_v0.1.0",{"_index":1819,"title":{},"name":{},"text":{"41":{}},"component":{}}],["contract_class_vers",{"_index":1797,"title":{},"name":{},"text":{"41":{}},"component":{}}],["contract_compiled.json",{"_index":327,"title":{},"name":{},"text":{"9":{},"42":{}},"component":{}}],["contract_definit",{"_index":189,"title":{},"name":{},"text":{"7":{}},"component":{}}],["contract_hash",{"_index":2157,"title":{},"name":{},"text":{"52":{}},"component":{}}],["contract_hash.pi",{"_index":1822,"title":{},"name":{},"text":{"41":{}},"component":{}}],["contractaddress",{"_index":1883,"title":{},"name":{},"text":{"42":{},"47":{},"48":{},"54":{},"57":{}},"component":{}}],["contractclass",{"_index":1374,"title":{},"name":{},"text":{"24":{},"51":{}},"component":{}}],["contractdefinit",{"_index":1373,"title":{},"name":{},"text":{"24":{}},"component":{}}],["contracts_tree_root",{"_index":2370,"title":{},"name":{},"text":{"56":{}},"component":{}}],["contractst",{"_index":1562,"title":{},"name":{},"text":{"30":{},"42":{}},"component":{}}],["contract’",{"_index":180,"title":{},"name":{},"text":{"7":{},"9":{},"13":{},"22":{},"30":{},"32":{},"41":{},"42":{},"45":{},"46":{},"47":{},"48":{},"52":{},"54":{},"56":{},"57":{}},"component":{}}],["contrast",{"_index":2015,"title":{},"name":{},"text":{"46":{},"47":{},"48":{}},"component":{}}],["contribut",{"_index":401,"title":{"12":{}},"name":{},"text":{"22":{}},"component":{}}],["contributor",{"_index":298,"title":{"22-49":{},"22-54":{}},"name":{},"text":{"8":{}},"component":{}}],["control",{"_index":1634,"title":{},"name":{},"text":{"33":{},"35":{}},"component":{}}],["conveni",{"_index":1168,"title":{},"name":{},"text":{"22":{}},"component":{}}],["convert",{"_index":1327,"title":{},"name":{},"text":{"24":{}},"component":{}}],["coordin",{"_index":1738,"title":{},"name":{},"text":{"36":{},"38":{}},"component":{}}],["copi",{"_index":359,"title":{},"name":{},"text":{"9":{},"13":{}},"component":{}}],["cor",{"_index":1075,"title":{},"name":{},"text":{"22":{}},"component":{}}],["core",{"_index":735,"title":{},"name":{},"text":{"19":{},"24":{},"31":{},"46":{},"47":{},"48":{},"54":{},"55":{}},"component":{}}],["core::felt252",{"_index":1850,"title":{},"name":{},"text":{"42":{}},"component":{}}],["core::integer::u128",{"_index":1871,"title":{},"name":{},"text":{"42":{}},"component":{}}],["core::integer::u256",{"_index":1855,"title":{},"name":{},"text":{"42":{},"57":{}},"component":{}}],["core::integer::u8",{"_index":1853,"title":{},"name":{},"text":{"42":{}},"component":{}}],["core::starknet::contract_address::contractaddress",{"_index":1856,"title":{},"name":{},"text":{"42":{},"57":{}},"component":{}}],["correct",{"_index":1180,"title":{},"name":{},"text":{"22":{},"29":{},"53":{}},"component":{}}],["correctli",{"_index":1071,"title":{},"name":{},"text":{"22":{},"29":{}},"component":{}}],["correl",{"_index":2213,"title":{},"name":{},"text":{"53":{}},"component":{}}],["correspond",{"_index":729,"title":{},"name":{},"text":{"18":{},"30":{},"42":{},"44":{},"49":{},"53":{},"54":{},"55":{},"56":{}},"component":{}}],["correspondingli",{"_index":2384,"title":{},"name":{},"text":{"56":{},"57":{}},"component":{}}],["cost",{"_index":1304,"title":{},"name":{},"text":{"24":{},"47":{},"53":{},"54":{}},"component":{}}],["count",{"_index":2297,"title":{},"name":{},"text":{"54":{}},"component":{}}],["counter",{"_index":1543,"title":{},"name":{},"text":{"30":{},"42":{},"54":{}},"component":{}}],["counter::read",{"_index":1570,"title":{},"name":{},"text":{"30":{}},"component":{}}],["counter_contract",{"_index":1879,"title":{},"name":{},"text":{"42":{}},"component":{}}],["counter_decreas",{"_index":1578,"title":{},"name":{},"text":{"30":{}},"component":{}}],["counter_increas",{"_index":1577,"title":{},"name":{},"text":{"30":{}},"component":{}}],["countercontract",{"_index":1541,"title":{},"name":{},"text":{"30":{},"42":{}},"component":{}}],["counterdecreas",{"_index":1581,"title":{},"name":{},"text":{"30":{},"42":{}},"component":{}}],["counterincreas",{"_index":1580,"title":{},"name":{},"text":{"30":{},"42":{}},"component":{}}],["cours",{"_index":1217,"title":{},"name":{},"text":{"22":{}},"component":{}}],["cover",{"_index":377,"title":{},"name":{},"text":{"10":{},"17":{},"24":{},"53":{}},"component":{}}],["cpu",{"_index":2057,"title":{},"name":{},"text":{"48":{}},"component":{}}],["creat",{"_index":404,"title":{"13-4":{},"14-4":{}},"name":{},"text":{"13":{},"14":{},"15":{},"24":{},"45":{},"47":{},"49":{},"50":{},"54":{}},"component":{}}],["creation",{"_index":1306,"title":{},"name":{},"text":{"24":{}},"component":{}}],["cross",{"_index":2234,"title":{},"name":{},"text":{"53":{}},"component":{}}],["crucial",{"_index":1454,"title":{},"name":{},"text":{"29":{}},"component":{}}],["crypto",{"_index":864,"title":{},"name":{},"text":{"20":{}},"component":{}}],["cryptoexpert",{"_index":1739,"title":{},"name":{},"text":{"36":{}},"component":{}}],["cryptograph",{"_index":41,"title":{},"name":{},"text":{"4":{},"15":{}},"component":{}}],["cryptographi",{"_index":701,"title":{},"name":{},"text":{"17":{}},"component":{}}],["curat",{"_index":689,"title":{},"name":{},"text":{"17":{}},"component":{}}],["curl",{"_index":615,"title":{},"name":{},"text":{"15":{}},"component":{}}],["current",{"_index":287,"title":{"21":{}},"name":{},"text":{"8":{},"10":{},"16":{},"19":{},"20":{},"21":{},"22":{},"24":{},"29":{},"30":{},"31":{},"33":{},"35":{},"37":{},"41":{},"42":{},"45":{},"46":{},"47":{},"48":{},"51":{},"52":{},"56":{}},"component":{}}],["current_block",{"_index":999,"title":{},"name":{},"text":{"22":{},"47":{}},"component":{}}],["curv",{"_index":635,"title":{"38-1":{}},"name":{"38":{}},"text":{"15":{},"24":{},"38":{},"51":{}},"component":{}}],["custodi",{"_index":2315,"title":{},"name":{},"text":{"54":{}},"component":{}}],["custom",{"_index":63,"title":{"7-3":{},"33-3":{}},"name":{},"text":{"7":{},"13":{},"22":{},"33":{},"57":{}},"component":{}}],["custom.sqlit",{"_index":1198,"title":{},"name":{},"text":{"22":{}},"component":{}}],["cycl",{"_index":2078,"title":{},"name":{"50":{}},"text":{},"component":{}}],["dai",{"_index":2341,"title":{},"name":{},"text":{"55":{}},"component":{}}],["dapp",{"_index":26,"title":{},"name":{},"text":{"4":{},"16":{}},"component":{}}],["dapp’",{"_index":2314,"title":{},"name":{},"text":{"54":{}},"component":{}}],["data",{"_index":7,"title":{"3":{},"52":{},"52-2":{},"52-5":{},"53-8":{}},"name":{"52":{}},"text":{"20":{},"22":{},"24":{},"25":{},"28":{},"42":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"52":{},"53":{},"54":{},"56":{},"57":{}},"component":{}}],["data[0",{"_index":1995,"title":{},"name":{},"text":{"46":{},"48":{},"57":{}},"component":{}}],["data[1",{"_index":1996,"title":{},"name":{},"text":{"46":{},"48":{},"57":{}},"component":{}}],["data[2",{"_index":1997,"title":{},"name":{},"text":{"46":{},"48":{},"57":{}},"component":{}}],["data_len",{"_index":1989,"title":{},"name":{},"text":{"46":{},"48":{}},"component":{}}],["databas",{"_index":790,"title":{},"name":{},"text":{"20":{},"22":{}},"component":{}}],["date",{"_index":1222,"title":{},"name":{},"text":{"22":{}},"component":{}}],["day",{"_index":2322,"title":{},"name":{},"text":{"54":{}},"component":{}}],["db",{"_index":1019,"title":{},"name":{},"text":{"22":{}},"component":{}}],["deal",{"_index":2375,"title":{},"name":{},"text":{"56":{},"57":{}},"component":{}}],["debug",{"_index":272,"title":{},"name":{},"text":{"7":{},"9":{}},"component":{}}],["debug_info_with_sourc",{"_index":319,"title":{"9-18":{}},"name":{},"text":{"9":{}},"component":{}}],["dec",{"_index":1249,"title":{"24-6":{}},"name":{},"text":{},"component":{}}],["decentr",{"_index":14,"title":{},"name":{},"text":{"4":{},"16":{},"29":{}},"component":{}}],["decentralis",{"_index":773,"title":{},"name":{},"text":{"20":{}},"component":{}}],["decid",{"_index":1203,"title":{},"name":{},"text":{"22":{},"32":{},"53":{}},"component":{}}],["decim",{"_index":750,"title":{},"name":{},"text":{"19":{},"22":{},"45":{}},"component":{}}],["decimals_",{"_index":1852,"title":{},"name":{},"text":{"42":{}},"component":{}}],["declar",{"_index":66,"title":{"7-5":{},"13-5":{},"51-8":{},"51-9":{},"51-12":{}},"name":{},"text":{"7":{},"13":{},"18":{},"22":{},"24":{},"29":{},"41":{},"44":{},"45":{},"46":{},"47":{},"48":{},"51":{},"52":{},"54":{},"56":{}},"component":{}}],["declare_v0_tx_hash",{"_index":2117,"title":{},"name":{},"text":{"51":{}},"component":{}}],["declare_v1_tx_hash",{"_index":2114,"title":{},"name":{},"text":{"51":{}},"component":{}}],["declare_v2_tx_hash",{"_index":2113,"title":{},"name":{},"text":{"51":{}},"component":{}}],["declaretransact",{"_index":872,"title":{},"name":{},"text":{"20":{}},"component":{}}],["decod",{"_index":830,"title":{},"name":{},"text":{"20":{},"52":{},"54":{}},"component":{}}],["decor",{"_index":1917,"title":{},"name":{},"text":{"45":{},"54":{},"57":{}},"component":{}}],["decreas",{"_index":2298,"title":{},"name":{},"text":{"54":{}},"component":{}}],["decrease_allow",{"_index":1566,"title":{},"name":{},"text":{"30":{},"42":{}},"component":{}}],["decrease_count",{"_index":1557,"title":{},"name":{},"text":{"30":{},"42":{}},"component":{}}],["dedic",{"_index":1649,"title":{},"name":{},"text":{"33":{},"42":{},"55":{}},"component":{}}],["deduc",{"_index":2385,"title":{},"name":{},"text":{"56":{}},"component":{}}],["deep",{"_index":2187,"title":{},"name":{},"text":{"53":{}},"component":{}}],["deepen",{"_index":711,"title":{},"name":{},"text":{"17":{}},"component":{}}],["default",{"_index":356,"title":{"22-71":{}},"name":{},"text":{"9":{},"13":{},"22":{},"24":{}},"component":{}}],["defin",{"_index":349,"title":{},"name":{},"text":{"9":{},"10":{},"14":{},"24":{},"29":{},"31":{},"36":{},"37":{},"38":{},"41":{},"42":{},"44":{},"45":{},"46":{},"47":{},"48":{},"49":{},"53":{},"56":{},"57":{}},"component":{}}],["definit",{"_index":874,"title":{"30-8":{},"38-2":{},"41-1":{},"41-3":{}},"name":{},"text":{"20":{},"24":{},"41":{},"44":{},"56":{},"57":{}},"component":{}}],["delay",{"_index":1007,"title":{},"name":{},"text":{"22":{},"54":{}},"component":{}}],["deleg",{"_index":1903,"title":{},"name":{},"text":{"44":{},"46":{},"47":{},"48":{}},"component":{}}],["delegate_cal",{"_index":1371,"title":{},"name":{},"text":{"24":{}},"component":{}}],["delimit",{"_index":150,"title":{},"name":{},"text":{"7":{}},"component":{}}],["deliv",{"_index":1262,"title":{},"name":{},"text":{"24":{}},"component":{}}],["delv",{"_index":700,"title":{},"name":{},"text":{"17":{}},"component":{}}],["demonstr",{"_index":2300,"title":{},"name":{},"text":{"54":{}},"component":{}}],["denial",{"_index":1682,"title":{},"name":{},"text":{"35":{}},"component":{}}],["denomin",{"_index":2197,"title":{},"name":{},"text":{"53":{}},"component":{}}],["denot",{"_index":1721,"title":{},"name":{},"text":{"36":{},"38":{},"56":{}},"component":{}}],["depend",{"_index":598,"title":{"15-5":{}},"name":{},"text":{"15":{},"22":{},"24":{},"46":{},"47":{},"48":{},"53":{}},"component":{}}],["deploy",{"_index":49,"title":{"13":{},"32":{},"7-6":{},"13-6":{},"14-6":{},"14-7":{},"32-1":{},"32-3":{},"32-4":{},"46-44":{},"47-19":{},"48-10":{},"51-2":{},"51-15":{},"51-16":{},"53-11":{}},"name":{},"text":{"4":{},"7":{},"13":{},"14":{},"15":{},"16":{},"18":{},"24":{},"32":{},"43":{},"44":{},"46":{},"47":{},"48":{},"51":{},"52":{},"53":{}},"component":{}}],["deploy_account",{"_index":67,"title":{"7-7":{}},"name":{},"text":{"7":{},"13":{},"14":{},"24":{},"32":{},"51":{},"56":{}},"component":{}}],["deploy_account_tx_hash",{"_index":2118,"title":{},"name":{},"text":{"51":{}},"component":{}}],["deploy_contract",{"_index":1359,"title":{},"name":{},"text":{"24":{}},"component":{}}],["deploy_from_zero",{"_index":1362,"title":{},"name":{},"text":{"24":{},"43":{},"46":{},"47":{},"48":{}},"component":{}}],["deploy_syscal",{"_index":2035,"title":{},"name":{},"text":{"47":{},"48":{}},"component":{}}],["deploy_tx_hash",{"_index":2103,"title":{},"name":{},"text":{"51":{}},"component":{}}],["deployaccount",{"_index":1308,"title":{},"name":{},"text":{"24":{}},"component":{}}],["deployer_address",{"_index":1896,"title":{},"name":{},"text":{"43":{}},"component":{}}],["deploying_contract",{"_index":405,"title":{},"name":{"13":{}},"text":{},"component":{}}],["deploying_new_account",{"_index":1602,"title":{},"name":{"32":{}},"text":{},"component":{}}],["deploy{syscall_ptr",{"_index":1981,"title":{},"name":{},"text":{"46":{},"48":{}},"component":{}}],["deposit",{"_index":1991,"title":{"55-3":{},"55-4":{},"55-5":{}},"name":{},"text":{"46":{},"47":{},"48":{},"55":{},"57":{}},"component":{}}],["deprec",{"_index":78,"title":{"18":{},"18-1":{},"22-63":{},"51-6":{},"51-11":{}},"name":{"18":{}},"text":{"7":{},"8":{},"18":{},"22":{},"24":{},"41":{},"51":{}},"component":{}}],["deprecated_declar",{"_index":1282,"title":{},"name":{},"text":{"24":{}},"component":{}}],["deriv",{"_index":1575,"title":{},"name":{},"text":{"30":{},"33":{},"42":{},"53":{}},"component":{}}],["describ",{"_index":163,"title":{},"name":{},"text":{"7":{},"10":{},"24":{},"32":{},"41":{},"42":{},"46":{},"48":{},"51":{},"52":{},"54":{}},"component":{}}],["descript",{"_index":305,"title":{"9-3":{},"46-4":{},"46-10":{},"46-16":{},"46-22":{},"46-28":{},"46-34":{},"46-40":{},"46-46":{},"46-52":{},"46-59":{},"46-65":{},"46-71":{},"46-78":{},"46-84":{},"46-91":{},"47-3":{},"47-9":{},"47-15":{},"47-21":{},"47-26":{},"47-33":{},"47-39":{},"47-46":{},"47-52":{},"47-59":{}},"name":{},"text":{"15":{},"18":{},"25":{},"28":{},"48":{},"49":{},"51":{}},"component":{}}],["design",{"_index":640,"title":{},"name":{},"text":{"15":{},"17":{},"24":{},"26":{},"29":{},"31":{},"33":{},"35":{},"36":{}},"component":{}}],["desir",{"_index":166,"title":{},"name":{},"text":{"7":{},"51":{},"53":{},"56":{}},"component":{}}],["destin",{"_index":2265,"title":{},"name":{},"text":{"53":{}},"component":{}}],["detail",{"_index":730,"title":{},"name":{},"text":{"18":{},"20":{},"22":{},"24":{},"34":{},"41":{},"42":{},"43":{},"47":{},"48":{},"50":{},"51":{}},"component":{}}],["detect",{"_index":801,"title":{},"name":{},"text":{"20":{}},"component":{}}],["determin",{"_index":1529,"title":{},"name":{},"text":{"29":{},"31":{},"32":{},"33":{},"35":{},"45":{},"51":{},"53":{},"56":{}},"component":{}}],["determinist",{"_index":1505,"title":{},"name":{},"text":{"29":{}},"component":{}}],["dev",{"_index":648,"title":{},"name":{},"text":{"15":{}},"component":{}}],["dev/gmp",{"_index":628,"title":{},"name":{},"text":{"15":{}},"component":{}}],["develop",{"_index":296,"title":{},"name":{},"text":{"8":{},"13":{},"15":{},"17":{},"23":{},"29":{},"31":{},"51":{},"55":{}},"component":{}}],["deviat",{"_index":1219,"title":{},"name":{},"text":{"22":{}},"component":{}}],["diagram",{"_index":2299,"title":{},"name":{},"text":{"54":{}},"component":{}}],["dictat",{"_index":1641,"title":{},"name":{},"text":{"33":{}},"component":{}}],["diff",{"_index":1312,"title":{},"name":{},"text":{"24":{},"52":{}},"component":{}}],["differ",{"_index":454,"title":{},"name":{},"text":{"13":{},"14":{},"22":{},"29":{},"33":{},"35":{},"46":{},"47":{},"48":{},"51":{},"52":{},"53":{},"54":{}},"component":{}}],["digest",{"_index":2367,"title":{},"name":{},"text":{"56":{}},"component":{}}],["digit",{"_index":636,"title":{},"name":{},"text":{"15":{},"20":{},"22":{}},"component":{}}],["dilig",{"_index":1412,"title":{},"name":{},"text":{"26":{}},"component":{}}],["direct",{"_index":261,"title":{},"name":{},"text":{"7":{},"20":{},"46":{},"47":{},"48":{}},"component":{}}],["directli",{"_index":219,"title":{},"name":{},"text":{"7":{},"14":{},"22":{},"24":{},"44":{},"46":{},"48":{},"53":{}},"component":{}}],["directori",{"_index":232,"title":{},"name":{},"text":{"7":{},"9":{},"13":{},"15":{}},"component":{}}],["disabl",{"_index":333,"title":{},"name":{},"text":{"9":{},"24":{}},"component":{}}],["disable_hint_valid",{"_index":309,"title":{"9-9":{}},"name":{},"text":{"9":{}},"component":{}}],["disallow",{"_index":1043,"title":{},"name":{},"text":{"22":{}},"component":{}}],["discord",{"_index":384,"title":{},"name":{},"text":{"10":{}},"component":{}}],["discov",{"_index":1693,"title":{},"name":{},"text":{"35":{}},"component":{}}],["discuss",{"_index":1658,"title":{},"name":{},"text":{"33":{},"45":{},"53":{},"56":{},"57":{}},"component":{}}],["disk",{"_index":1094,"title":{},"name":{},"text":{"22":{}},"component":{}}],["dispatch",{"_index":1563,"title":{},"name":{},"text":{"30":{}},"component":{}}],["distinct",{"_index":1265,"title":{},"name":{},"text":{"24":{},"31":{}},"component":{}}],["distinguish",{"_index":1496,"title":{},"name":{},"text":{"29":{},"44":{}},"component":{}}],["dive",{"_index":2188,"title":{},"name":{},"text":{"53":{}},"component":{}}],["divis",{"_index":2219,"title":{},"name":{},"text":{"53":{}},"component":{}}],["do",{"_index":1436,"title":{"29-3":{}},"name":{},"text":{"29":{},"32":{},"35":{},"54":{}},"component":{}}],["doc",{"_index":554,"title":{},"name":{},"text":{"14":{}},"component":{}}],["docker",{"_index":1147,"title":{},"name":{},"text":{"22":{}},"component":{}}],["document",{"_index":3,"title":{},"name":{},"text":{"8":{},"13":{},"22":{},"43":{}},"component":{"1":{},"2":{},"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"44":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"52":{},"53":{},"54":{},"55":{},"56":{},"57":{}}}],["doesn’t",{"_index":368,"title":{},"name":{},"text":{"10":{},"29":{},"30":{},"54":{},"55":{}},"component":{}}],["domain",{"_index":1077,"title":{"36-1":{}},"name":{},"text":{"22":{},"41":{},"47":{}},"component":{}}],["done",{"_index":260,"title":{},"name":{},"text":{"7":{},"35":{},"54":{},"56":{}},"component":{}}],["dont_filter_identifi",{"_index":311,"title":{"9-11":{}},"name":{},"text":{"9":{},"24":{}},"component":{}}],["don’t",{"_index":358,"title":{},"name":{},"text":{"9":{},"13":{},"22":{}},"component":{}}],["download",{"_index":657,"title":{},"name":{},"text":{"15":{},"22":{}},"component":{}}],["drain",{"_index":1610,"title":{},"name":{},"text":{"32":{}},"component":{}}],["drawback",{"_index":1638,"title":{},"name":{},"text":{"33":{}},"component":{}}],["drop",{"_index":1028,"title":{},"name":{},"text":{"22":{},"30":{},"42":{}},"component":{}}],["dry_run",{"_index":1361,"title":{},"name":{},"text":{"24":{}},"component":{}}],["due",{"_index":993,"title":{},"name":{},"text":{"22":{},"33":{},"35":{},"54":{}},"component":{}}],["dure",{"_index":361,"title":{},"name":{},"text":{"9":{},"23":{},"35":{},"46":{},"48":{},"50":{},"54":{},"55":{}},"component":{}}],["e",{"_index":2412,"title":{},"name":{},"text":{"57":{}},"component":{}}],["e.emit",{"_index":2413,"title":{},"name":{},"text":{"57":{}},"component":{}}],["e.g",{"_index":936,"title":{},"name":{},"text":{"21":{},"24":{},"29":{},"33":{},"45":{},"46":{},"48":{},"53":{},"55":{}},"component":{}}],["each",{"_index":90,"title":{},"name":{},"text":{"7":{},"14":{},"17":{},"19":{},"20":{},"21":{},"22":{},"24":{},"30":{},"42":{},"44":{},"45":{},"51":{},"52":{},"53":{},"55":{},"56":{},"57":{}},"component":{}}],["earlier",{"_index":1030,"title":{},"name":{},"text":{"22":{}},"component":{}}],["eas",{"_index":2345,"title":{},"name":{},"text":{"55":{}},"component":{}}],["easi",{"_index":643,"title":{},"name":{},"text":{"15":{},"29":{}},"component":{}}],["ec",{"_index":1377,"title":{},"name":{},"text":{"24":{}},"component":{}}],["ec_op",{"_index":2247,"title":{},"name":{},"text":{"53":{}},"component":{}}],["ec_op_builtin",{"_index":2089,"title":{},"name":{},"text":{"50":{}},"component":{}}],["ecdsa",{"_index":633,"title":{},"name":{},"text":{"15":{},"51":{},"53":{}},"component":{}}],["ecdsa_builtin",{"_index":2088,"title":{},"name":{},"text":{"50":{}},"component":{}}],["ecdsa_ptr",{"_index":1625,"title":{},"name":{},"text":{"32":{}},"component":{}}],["ecosystem",{"_index":713,"title":{},"name":{},"text":{"17":{}},"component":{}}],["edg",{"_index":2327,"title":{},"name":{},"text":{"54":{}},"component":{}}],["effect",{"_index":1292,"title":{},"name":{},"text":{"24":{}},"component":{}}],["effici",{"_index":642,"title":{},"name":{},"text":{"15":{},"23":{},"36":{},"51":{}},"component":{}}],["eip",{"_index":1590,"title":{},"name":{},"text":{"31":{},"33":{}},"component":{}}],["element",{"_index":162,"title":{},"name":{},"text":{"7":{},"20":{},"29":{},"36":{},"37":{},"38":{},"41":{},"45":{},"46":{},"47":{},"48":{},"49":{},"51":{},"52":{},"53":{},"54":{},"56":{},"57":{}},"component":{}}],["elig",{"_index":1694,"title":{},"name":{},"text":{"35":{}},"component":{}}],["ell",{"_index":2270,"title":{},"name":{},"text":{"53":{}},"component":{}}],["ell_l",{"_index":2393,"title":{},"name":{},"text":{"56":{}},"component":{}}],["ell_r",{"_index":2396,"title":{},"name":{},"text":{"56":{}},"component":{}}],["ellipt",{"_index":634,"title":{},"name":{},"text":{"15":{},"38":{}},"component":{}}],["elm_ptr",{"_index":1487,"title":{},"name":{},"text":{"29":{}},"component":{}}],["elm_ptr=elm_ptr",{"_index":1493,"title":{},"name":{},"text":{"29":{}},"component":{}}],["elm_siz",{"_index":1485,"title":{},"name":{},"text":{"29":{}},"component":{}}],["elment",{"_index":2421,"title":{},"name":{},"text":{"57":{}},"component":{}}],["embed",{"_index":1215,"title":{},"name":{},"text":{"22":{}},"component":{}}],["emit",{"_index":1065,"title":{"30-9":{},"57-1":{}},"name":{},"text":{"22":{},"30":{},"42":{},"46":{},"47":{},"48":{},"50":{},"54":{},"55":{},"57":{}},"component":{}}],["emit_ev",{"_index":1948,"title":{"46-50":{},"47-24":{},"48-11":{}},"name":{},"text":{"46":{},"48":{},"57":{}},"component":{}}],["emit_event_syscal",{"_index":2038,"title":{},"name":{},"text":{"47":{},"48":{},"57":{}},"component":{}}],["emit_event{syscall_ptr",{"_index":1987,"title":{},"name":{},"text":{"46":{},"48":{}},"component":{}}],["emphas",{"_index":1195,"title":{},"name":{},"text":{"22":{}},"component":{}}],["empti",{"_index":278,"title":{},"name":{},"text":{"7":{},"56":{}},"component":{}}],["enabl",{"_index":25,"title":{},"name":{},"text":{"4":{},"7":{},"22":{},"27":{},"46":{},"47":{},"48":{},"51":{}},"component":{}}],["encod",{"_index":847,"title":{},"name":{},"text":{"20":{},"41":{},"43":{},"45":{},"51":{},"52":{},"54":{},"56":{},"57":{}},"component":{}}],["encrypt",{"_index":229,"title":{},"name":{},"text":{"7":{}},"component":{}}],["end",{"_index":1328,"title":{},"name":{},"text":{"24":{},"45":{},"55":{},"57":{}},"component":{}}],["endian",{"_index":1382,"title":{},"name":{},"text":{"24":{},"54":{}},"component":{}}],["endpoint",{"_index":64,"title":{"7-3":{}},"name":{},"text":{"7":{},"20":{},"22":{},"24":{}},"component":{}}],["end{cas",{"_index":1762,"title":{},"name":{},"text":{"36":{},"56":{}},"component":{}}],["enforc",{"_index":726,"title":{},"name":{},"text":{"18":{},"21":{},"24":{},"29":{},"32":{},"35":{},"41":{},"53":{}},"component":{}}],["enhanc",{"_index":720,"title":{},"name":{},"text":{"18":{},"20":{},"23":{}},"component":{}}],["enough",{"_index":572,"title":{},"name":{},"text":{"14":{},"24":{},"29":{},"32":{},"54":{},"55":{}},"component":{}}],["enrich",{"_index":1660,"title":{},"name":{},"text":{"33":{}},"component":{}}],["ensur",{"_index":552,"title":{},"name":{},"text":{"14":{},"20":{},"21":{},"23":{},"29":{},"31":{},"35":{}},"component":{}}],["enter",{"_index":82,"title":{},"name":{},"text":{"7":{},"9":{},"15":{},"50":{}},"component":{}}],["entir",{"_index":1516,"title":{},"name":{},"text":{"29":{}},"component":{}}],["entiti",{"_index":919,"title":{},"name":{},"text":{"21":{}},"component":{}}],["entri",{"_index":1310,"title":{"42-2":{}},"name":{},"text":{"24":{},"32":{},"41":{},"42":{},"44":{},"53":{},"56":{}},"component":{}}],["entry_point_selector",{"_index":2033,"title":{},"name":{},"text":{"47":{},"48":{},"51":{},"54":{}},"component":{}}],["entry_point_typ",{"_index":1313,"title":{},"name":{},"text":{"24":{}},"component":{}}],["entrypoint",{"_index":1110,"title":{},"name":{},"text":{"22":{},"32":{},"41":{}},"component":{}}],["enum",{"_index":1573,"title":{},"name":{},"text":{"30":{},"42":{}},"component":{}}],["enumer",{"_index":2245,"title":{},"name":{},"text":{"53":{}},"component":{}}],["env",{"_index":1150,"title":{},"name":{},"text":{"22":{}},"component":{}}],["environ",{"_index":62,"title":{"15":{},"7-2":{},"13-2":{},"15-3":{},"15-4":{},"24-1":{}},"name":{},"text":{"7":{},"9":{},"13":{},"14":{},"15":{},"22":{},"24":{}},"component":{}}],["environment_setup",{"_index":605,"title":{},"name":{"15":{}},"text":{},"component":{}}],["eoa",{"_index":438,"title":{},"name":{},"text":{"13":{},"14":{},"31":{},"33":{}},"component":{}}],["ephemer",{"_index":1093,"title":{},"name":{},"text":{"22":{}},"component":{}}],["equal",{"_index":1984,"title":{},"name":{},"text":{"46":{},"48":{},"53":{}},"component":{}}],["equilibrium",{"_index":1402,"title":{},"name":{},"text":{"25":{},"28":{}},"component":{}}],["equival",{"_index":1466,"title":{},"name":{},"text":{"29":{},"36":{}},"component":{}}],["erc",{"_index":754,"title":{},"name":{},"text":{"19":{},"53":{},"55":{}},"component":{}}],["erc20",{"_index":1630,"title":{},"name":{},"text":{"33":{},"55":{}},"component":{}}],["error",{"_index":275,"title":{"47-6":{}},"name":{},"text":{"7":{},"22":{},"24":{},"47":{}},"component":{}}],["error_messag",{"_index":269,"title":{},"name":{},"text":{"7":{}},"component":{}}],["especi",{"_index":985,"title":{},"name":{},"text":{"22":{}},"component":{}}],["estim",{"_index":240,"title":{},"name":{},"text":{"7":{},"14":{},"22":{},"24":{},"53":{},"54":{}},"component":{}}],["estimate_fe",{"_index":68,"title":{"7-8":{}},"name":{},"text":{"7":{},"14":{}},"component":{}}],["estimate_fee_bulk",{"_index":1302,"title":{},"name":{},"text":{"24":{}},"component":{}}],["estimate_message_fe",{"_index":69,"title":{"7-9":{}},"name":{},"text":{"7":{}},"component":{}}],["etc",{"_index":213,"title":{},"name":{},"text":{"7":{},"54":{}},"component":{}}],["eth",{"_index":470,"title":{"14-5":{}},"name":{},"text":{"13":{},"14":{},"20":{},"34":{},"53":{},"54":{},"55":{}},"component":{}}],["ethereum",{"_index":24,"title":{"33-1":{},"52-8":{}},"name":{},"text":{"4":{},"14":{},"16":{},"21":{},"22":{},"24":{},"29":{},"31":{},"33":{},"35":{},"46":{},"47":{},"48":{},"50":{},"52":{},"54":{},"55":{},"56":{}},"component":{}}],["ethereumaddress",{"_index":2303,"title":{},"name":{},"text":{"54":{}},"component":{}}],["ethereum’",{"_index":33,"title":{},"name":{},"text":{"4":{},"16":{},"31":{},"44":{},"46":{},"47":{},"48":{}},"component":{}}],["ethereum↔starknet",{"_index":2334,"title":{},"name":{},"text":{"55":{}},"component":{}}],["eval",{"_index":621,"title":{},"name":{},"text":{"15":{}},"component":{}}],["even",{"_index":699,"title":{},"name":{},"text":{"17":{},"29":{},"33":{},"35":{},"55":{}},"component":{}}],["event",{"_index":497,"title":{"57":{},"30-8":{},"30-9":{},"42-3":{},"57-1":{},"57-2":{},"57-3":{}},"name":{"57":{}},"text":{"13":{},"22":{},"30":{},"42":{},"46":{},"47":{},"48":{},"49":{},"50":{},"54":{},"55":{},"57":{}},"component":{}}],["event_commit",{"_index":2068,"title":{},"name":{},"text":{"49":{},"57":{}},"component":{}}],["event_count",{"_index":2067,"title":{},"name":{},"text":{"49":{}},"component":{}}],["event_nam",{"_index":2418,"title":{},"name":{},"text":{"57":{}},"component":{}}],["eventu",{"_index":1461,"title":{},"name":{},"text":{"29":{},"36":{}},"component":{}}],["event’",{"_index":1284,"title":{},"name":{},"text":{"24":{},"42":{},"46":{},"47":{},"48":{},"57":{}},"component":{}}],["everyth",{"_index":1899,"title":{},"name":{},"text":{"44":{}},"component":{}}],["evolv",{"_index":1081,"title":{},"name":{},"text":{"22":{},"30":{}},"component":{}}],["exact",{"_index":1078,"title":{},"name":{},"text":{"22":{},"36":{},"41":{},"53":{}},"component":{}}],["exactli",{"_index":250,"title":{},"name":{},"text":{"7":{}},"component":{}}],["exampl",{"_index":101,"title":{"9-2":{},"33-3":{},"46-56":{},"46-75":{},"46-88":{},"47-30":{},"47-43":{},"47-56":{},"52-4":{},"52-7":{},"56-6":{}},"name":{},"text":{"7":{},"9":{},"15":{},"24":{},"29":{},"33":{},"35":{},"42":{},"45":{},"46":{},"47":{},"48":{},"50":{},"52":{},"53":{},"54":{},"56":{},"57":{}},"component":{}}],["except",{"_index":2424,"title":{},"name":{},"text":{"57":{}},"component":{}}],["exchang",{"_index":2330,"title":{},"name":{},"text":{"54":{}},"component":{}}],["exclud",{"_index":1012,"title":{},"name":{},"text":{"22":{}},"component":{}}],["execut",{"_index":86,"title":{"35":{},"15-13":{},"35-4":{}},"name":{},"text":{"7":{},"9":{},"14":{},"15":{},"20":{},"21":{},"22":{},"23":{},"24":{},"29":{},"31":{},"32":{},"34":{},"35":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"53":{},"54":{},"55":{},"56":{},"57":{}},"component":{}}],["execution_resourc",{"_index":2082,"title":{},"name":{},"text":{"50":{}},"component":{}}],["executioninfo",{"_index":2058,"title":{},"name":{},"text":{"48":{}},"component":{}}],["exhibit",{"_index":982,"title":{},"name":{},"text":{"22":{}},"component":{}}],["exist",{"_index":576,"title":{},"name":{},"text":{"14":{},"20":{},"22":{},"24":{},"29":{},"51":{},"56":{}},"component":{}}],["exit",{"_index":332,"title":{},"name":{},"text":{"9":{},"20":{}},"component":{}}],["exot",{"_index":1689,"title":{},"name":{},"text":{"35":{}},"component":{}}],["expans",{"_index":2381,"title":{},"name":{},"text":{"56":{}},"component":{}}],["expect",{"_index":256,"title":{"23-2":{}},"name":{},"text":{"7":{},"22":{},"24":{},"30":{},"32":{},"46":{},"47":{},"48":{},"52":{}},"component":{}}],["experi",{"_index":707,"title":{},"name":{},"text":{"17":{},"33":{}},"component":{}}],["experienc",{"_index":694,"title":{},"name":{},"text":{"17":{}},"component":{}}],["experiment",{"_index":997,"title":{},"name":{},"text":{"22":{},"24":{}},"component":{}}],["explain",{"_index":1914,"title":{},"name":{},"text":{"45":{},"53":{}},"component":{}}],["explan",{"_index":2201,"title":{},"name":{},"text":{"53":{}},"component":{}}],["explicit",{"_index":2351,"title":{},"name":{},"text":{"55":{}},"component":{}}],["explicitli",{"_index":263,"title":{},"name":{},"text":{"7":{},"24":{},"46":{},"47":{},"48":{}},"component":{}}],["explor",{"_index":578,"title":{"27":{}},"name":{},"text":{"14":{},"17":{},"27":{}},"component":{}}],["export",{"_index":105,"title":{},"name":{},"text":{"7":{},"13":{},"14":{},"15":{}},"component":{}}],["expos",{"_index":807,"title":{},"name":{},"text":{"20":{},"22":{},"35":{},"46":{},"47":{},"48":{}},"component":{}}],["express",{"_index":1298,"title":{},"name":{},"text":{"24":{}},"component":{}}],["extend",{"_index":376,"title":{},"name":{},"text":{"10":{},"31":{}},"component":{}}],["extend_rang",{"_index":1840,"title":{},"name":{},"text":{"42":{}},"component":{}}],["extens",{"_index":1188,"title":{},"name":{},"text":{"22":{}},"component":{}}],["extern",{"_index":502,"title":{},"name":{},"text":{"13":{},"24":{},"30":{},"32":{},"33":{},"35":{},"41":{},"42":{},"47":{},"48":{}},"component":{}}],["external_entry_point",{"_index":1809,"title":{},"name":{},"text":{"41":{}},"component":{}}],["extra",{"_index":1607,"title":{},"name":{},"text":{"32":{},"49":{}},"component":{}}],["extract",{"_index":2131,"title":{"52-8":{}},"name":{},"text":{"52":{}},"component":{}}],["extran",{"_index":2070,"title":{},"name":{},"text":{"49":{}},"component":{}}],["extropi",{"_index":1414,"title":{},"name":{},"text":{"26":{}},"component":{}}],["f",{"_index":2271,"title":{},"name":{},"text":{"53":{}},"component":{}}],["face",{"_index":1695,"title":{},"name":{},"text":{"35":{}},"component":{}}],["facial",{"_index":1667,"title":{},"name":{},"text":{"33":{}},"component":{}}],["facilit",{"_index":2335,"title":{},"name":{},"text":{"55":{}},"component":{}}],["fact",{"_index":1472,"title":{},"name":{},"text":{"29":{},"54":{},"55":{}},"component":{}}],["factor",{"_index":2229,"title":{},"name":{},"text":{"53":{}},"component":{}}],["fail",{"_index":516,"title":{"23-5":{}},"name":{},"text":{"13":{},"22":{},"23":{},"29":{},"35":{},"50":{},"55":{}},"component":{}}],["failur",{"_index":1242,"title":{},"name":{},"text":{"23":{},"29":{},"35":{}},"component":{}}],["fake",{"_index":1352,"title":{},"name":{},"text":{"24":{}},"component":{}}],["fals",{"_index":826,"title":{},"name":{},"text":{"20":{},"22":{}},"component":{}}],["famili",{"_index":1725,"title":{},"name":{},"text":{"36":{}},"component":{}}],["faq",{"_index":1156,"title":{},"name":{},"text":{"22":{}},"component":{}}],["fashion",{"_index":1107,"title":{},"name":{},"text":{"22":{}},"component":{}}],["fast",{"_index":641,"title":{},"name":{},"text":{"15":{},"22":{}},"component":{}}],["fast_pedersen_hash.pi",{"_index":1794,"title":{},"name":{},"text":{"38":{}},"component":{}}],["fastecdsa",{"_index":639,"title":{},"name":{},"text":{"15":{}},"component":{}}],["faster",{"_index":853,"title":{},"name":{},"text":{"20":{},"24":{}},"component":{}}],["faucet",{"_index":456,"title":{},"name":{},"text":{"13":{},"14":{}},"component":{}}],["favor",{"_index":1196,"title":{},"name":{},"text":{"22":{}},"component":{}}],["favour",{"_index":80,"title":{},"name":{},"text":{"7":{}},"component":{}}],["featur",{"_index":715,"title":{"18":{},"18-1":{},"18-2":{},"51-6":{},"51-11":{}},"name":{},"text":{"18":{},"20":{},"22":{},"42":{}},"component":{}}],["fee",{"_index":201,"title":{"53":{},"53-2":{},"53-3":{},"53-12":{},"53-13":{},"54-5":{}},"name":{"53":{}},"text":{"7":{},"13":{},"14":{},"18":{},"22":{},"24":{},"29":{},"31":{},"32":{},"33":{},"34":{},"35":{},"46":{},"48":{},"51":{},"53":{},"54":{}},"component":{}}],["feeder",{"_index":115,"title":{},"name":{},"text":{"7":{},"20":{},"22":{},"24":{}},"component":{}}],["feeder_gateway_url",{"_index":111,"title":{},"name":{},"text":{"7":{}},"component":{}}],["felt",{"_index":923,"title":{},"name":{},"text":{"21":{},"22":{},"24":{},"29":{},"32":{},"42":{},"45":{},"46":{},"47":{},"48":{},"57":{}},"component":{}}],["felt252",{"_index":1889,"title":{},"name":{},"text":{"42":{},"45":{},"47":{},"48":{}},"component":{}}],["fetch",{"_index":823,"title":{},"name":{},"text":{"20":{}},"component":{}}],["few",{"_index":1102,"title":{},"name":{},"text":{"22":{},"24":{}},"component":{}}],["field",{"_index":161,"title":{},"name":{},"text":{"7":{},"9":{},"20":{},"22":{},"24":{},"36":{},"37":{},"41":{},"42":{},"45":{},"49":{},"51":{},"53":{},"56":{},"57":{}},"component":{}}],["fieldel",{"_index":2063,"title":{},"name":{},"text":{"49":{},"51":{},"54":{}},"component":{}}],["file",{"_index":144,"title":{"9-5":{},"22-66":{}},"name":{},"text":{"7":{},"9":{},"13":{},"15":{},"19":{},"22":{},"24":{},"41":{}},"component":{}}],["filenam",{"_index":1199,"title":{},"name":{},"text":{"22":{}},"component":{}}],["file’",{"_index":1375,"title":{},"name":{},"text":{"24":{}},"component":{}}],["fill",{"_index":1696,"title":{},"name":{},"text":{"35":{}},"component":{}}],["filter",{"_index":335,"title":{},"name":{},"text":{"9":{},"22":{},"46":{},"47":{},"48":{}},"component":{}}],["final",{"_index":1024,"title":{},"name":{},"text":{"22":{},"24":{},"45":{},"53":{},"54":{},"55":{},"56":{}},"component":{}}],["find",{"_index":508,"title":{},"name":{},"text":{"13":{},"29":{},"36":{},"42":{},"43":{},"52":{}},"component":{}}],["find_el",{"_index":1481,"title":{},"name":{},"text":{"29":{}},"component":{}}],["find_element{range_check_ptr",{"_index":1483,"title":{},"name":{},"text":{"29":{}},"component":{}}],["fine",{"_index":1517,"title":{},"name":{},"text":{"29":{}},"component":{}}],["finish",{"_index":2012,"title":{},"name":{},"text":{"46":{},"47":{},"48":{}},"component":{}}],["finit",{"_index":344,"title":{},"name":{},"text":{"9":{}},"component":{}}],["first",{"_index":538,"title":{},"name":{},"text":{"13":{},"16":{},"20":{},"22":{},"24":{},"32":{},"33":{},"36":{},"45":{},"47":{},"51":{},"52":{},"53":{},"54":{},"56":{}},"component":{}}],["first_v0_12_0_block",{"_index":2022,"title":{},"name":{},"text":{"47":{}},"component":{}}],["fit",{"_index":428,"title":{},"name":{},"text":{"13":{},"36":{}},"component":{}}],["five",{"_index":2233,"title":{},"name":{},"text":{"53":{},"54":{}},"component":{}}],["fix",{"_index":719,"title":{"20-4":{},"20-11":{},"20-15":{},"20-17":{},"20-23":{},"22-2":{},"22-4":{},"22-7":{},"22-9":{},"22-13":{},"22-16":{},"22-18":{},"22-24":{},"22-25":{},"22-28":{},"22-31":{},"22-34":{},"22-36":{},"22-41":{},"22-48":{},"22-52":{},"22-56":{},"22-60":{},"22-68":{}},"name":{},"text":{"18":{},"20":{},"22":{},"24":{},"33":{},"54":{},"56":{}},"component":{}}],["flag",{"_index":526,"title":{},"name":{},"text":{"13":{},"22":{},"24":{},"46":{},"47":{},"48":{},"52":{}},"component":{}}],["flag}}_{\\text{1",{"_index":2139,"title":{},"name":{},"text":{"52":{}},"component":{}}],["flexibl",{"_index":1523,"title":{},"name":{},"text":{"29":{},"31":{},"33":{}},"component":{}}],["fli",{"_index":2221,"title":{},"name":{},"text":{"53":{}},"component":{}}],["flow",{"_index":1514,"title":{"34":{},"32-2":{}},"name":{},"text":{"29":{},"32":{},"35":{},"54":{}},"component":{}}],["fluctuat",{"_index":579,"title":{},"name":{},"text":{"14":{}},"component":{}}],["fn",{"_index":498,"title":{},"name":{},"text":{"13":{},"30":{},"42":{},"47":{},"48":{},"57":{}},"component":{}}],["focu",{"_index":392,"title":{},"name":{},"text":{"11":{},"22":{},"23":{}},"component":{}}],["focus",{"_index":373,"title":{},"name":{},"text":{"10":{},"17":{},"53":{}},"component":{}}],["folder",{"_index":444,"title":{},"name":{},"text":{"13":{},"15":{}},"component":{}}],["follow",{"_index":83,"title":{},"name":{},"text":{"7":{},"9":{},"11":{},"13":{},"14":{},"15":{},"18":{},"19":{},"20":{},"22":{},"24":{},"27":{},"29":{},"30":{},"31":{},"32":{},"35":{},"38":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"52":{},"53":{},"54":{},"56":{},"57":{}},"component":{}}],["foo",{"_index":1342,"title":{},"name":{},"text":{"24":{}},"component":{}}],["foo.return.s",{"_index":1384,"title":{},"name":{},"text":{"24":{}},"component":{}}],["footprint",{"_index":2193,"title":{},"name":{},"text":{"53":{}},"component":{}}],["forbid",{"_index":1318,"title":{},"name":{},"text":{"24":{}},"component":{}}],["forev",{"_index":2316,"title":{},"name":{},"text":{"54":{}},"component":{}}],["forg",{"_index":1685,"title":{},"name":{},"text":{"35":{}},"component":{}}],["form",{"_index":2324,"title":{},"name":{},"text":{"54":{}},"component":{}}],["formal",{"_index":1171,"title":{},"name":{},"text":{"22":{}},"component":{}}],["format",{"_index":1080,"title":{"52-3":{},"52-6":{}},"name":{},"text":{"22":{},"24":{},"42":{},"52":{}},"component":{}}],["former",{"_index":175,"title":{},"name":{},"text":{"7":{}},"component":{}}],["formul",{"_index":1441,"title":{},"name":{},"text":{"29":{},"53":{}},"component":{}}],["formula",{"_index":2189,"title":{},"name":{},"text":{"53":{}},"component":{}}],["forum",{"_index":1539,"title":{},"name":{},"text":{"30":{}},"component":{}}],["found",{"_index":984,"title":{},"name":{},"text":{"22":{},"38":{},"42":{}},"component":{}}],["foundat",{"_index":379,"title":{},"name":{},"text":{"10":{}},"component":{}}],["framework",{"_index":1279,"title":{},"name":{},"text":{"24":{}},"component":{}}],["free",{"_index":371,"title":{},"name":{},"text":{"10":{},"18":{}},"component":{}}],["freedom",{"_index":1507,"title":{},"name":{},"text":{"29":{}},"component":{}}],["friendli",{"_index":1769,"title":{},"name":{},"text":{"38":{},"42":{},"48":{},"51":{}},"component":{}}],["from:contractaddress",{"_index":500,"title":{},"name":{},"text":{"13":{}},"component":{}}],["from_address",{"_index":241,"title":{},"name":{},"text":{"7":{},"22":{},"50":{},"57":{}},"component":{}}],["from_block=\"latest",{"_index":1174,"title":{},"name":{},"text":{"22":{}},"component":{}}],["fromaddress",{"_index":2301,"title":{},"name":{},"text":{"54":{}},"component":{}}],["frontend",{"_index":695,"title":{},"name":{},"text":{"17":{}},"component":{}}],["full",{"_index":300,"title":{"25":{},"28":{}},"name":{},"text":{"8":{},"9":{},"20":{},"22":{},"25":{},"28":{},"52":{},"53":{},"54":{}},"component":{}}],["fulli",{"_index":844,"title":{},"name":{},"text":{"20":{}},"component":{}}],["func",{"_index":1341,"title":{},"name":{},"text":{"24":{},"29":{},"32":{},"45":{},"46":{},"48":{},"57":{}},"component":{}}],["function",{"_index":128,"title":{"36":{},"33-3":{},"35-1":{},"35-4":{},"45-2":{},"55-4":{},"55-8":{}},"name":{"36":{}},"text":{"7":{},"9":{},"13":{},"22":{},"23":{},"24":{},"29":{},"30":{},"31":{},"33":{},"34":{},"35":{},"36":{},"41":{},"42":{},"44":{},"45":{},"46":{},"47":{},"48":{},"51":{},"54":{},"55":{},"56":{},"57":{}},"component":{}}],["function_idx",{"_index":1799,"title":{},"name":{},"text":{"41":{}},"component":{}}],["function_nam",{"_index":146,"title":{},"name":{},"text":{"7":{}},"component":{}}],["function_selector",{"_index":1974,"title":{},"name":{},"text":{"46":{},"47":{},"48":{}},"component":{}}],["function’",{"_index":1383,"title":{},"name":{},"text":{"24":{},"46":{},"47":{},"48":{}},"component":{}}],["fund",{"_index":432,"title":{"55-10":{}},"name":{},"text":{"13":{},"14":{},"24":{},"32":{},"35":{},"51":{},"55":{}},"component":{}}],["further",{"_index":1235,"title":{},"name":{},"text":{"23":{},"29":{},"35":{}},"component":{}}],["furthermor",{"_index":1503,"title":{},"name":{},"text":{"29":{}},"component":{}}],["futur",{"_index":198,"title":{},"name":{},"text":{"7":{},"10":{},"18":{},"22":{},"24":{},"29":{},"31":{},"33":{},"35":{},"47":{},"49":{},"51":{},"53":{},"56":{}},"component":{}}],["g=\\left",{"_index":2119,"title":{},"name":{},"text":{"51":{}},"component":{}}],["g_x",{"_index":2120,"title":{},"name":{},"text":{"51":{}},"component":{}}],["g_x=874739451078007766457464989774322083649278607533249481151382481072868806602",{"_index":2122,"title":{},"name":{},"text":{"51":{}},"component":{}}],["g_y=152666792071518830868575557812948353041420400780739481342941381225525861407",{"_index":2123,"title":{},"name":{},"text":{"51":{}},"component":{}}],["g_y\\right",{"_index":2121,"title":{},"name":{},"text":{"51":{}},"component":{}}],["ga",{"_index":530,"title":{"21-2":{}},"name":{},"text":{"13":{},"14":{},"21":{},"22":{},"24":{},"29":{},"53":{},"54":{}},"component":{}}],["gap",{"_index":1446,"title":{},"name":{},"text":{"29":{}},"component":{}}],["gas/appl",{"_index":2251,"title":{},"name":{},"text":{"53":{}},"component":{}}],["gas/step",{"_index":2249,"title":{},"name":{},"text":{"53":{}},"component":{}}],["gasbuiltin",{"_index":2027,"title":{},"name":{},"text":{"47":{},"48":{}},"component":{}}],["gateway",{"_index":109,"title":{"22-65":{}},"name":{},"text":{"7":{},"20":{},"22":{},"24":{}},"component":{}}],["gateway_url",{"_index":113,"title":{},"name":{},"text":{"7":{}},"component":{}}],["gateway’",{"_index":1035,"title":{},"name":{},"text":{"22":{}},"component":{}}],["gather",{"_index":1547,"title":{},"name":{},"text":{"30":{}},"component":{}}],["gener",{"_index":211,"title":{"53-7":{},"55-1":{}},"name":{},"text":{"7":{},"9":{},"13":{},"14":{},"24":{},"29":{},"30":{},"41":{},"42":{},"45":{},"46":{},"48":{},"51":{},"53":{},"54":{},"55":{}},"component":{}}],["genesi",{"_index":1154,"title":{},"name":{},"text":{"22":{}},"component":{}}],["get",{"_index":675,"title":{"16":{}},"name":{},"text":{"22":{},"35":{},"45":{},"46":{},"47":{},"48":{}},"component":{}}],["get_block",{"_index":70,"title":{"7-10":{}},"name":{},"text":{"7":{}},"component":{}}],["get_block_hash",{"_index":1271,"title":{"47-1":{}},"name":{},"text":{"24":{},"47":{}},"component":{}}],["get_block_numb",{"_index":1941,"title":{"46-2":{},"48-2":{}},"name":{},"text":{},"component":{}}],["get_block_number{syscall_ptr",{"_index":1958,"title":{},"name":{},"text":{"46":{},"48":{}},"component":{}}],["get_block_timestamp",{"_index":1942,"title":{"46-8":{},"48-3":{}},"name":{},"text":{},"component":{}}],["get_block_timestamp{syscall_ptr",{"_index":1960,"title":{},"name":{},"text":{"46":{},"48":{}},"component":{}}],["get_block_trac",{"_index":1356,"title":{},"name":{},"text":{"24":{}},"component":{}}],["get_caller_address",{"_index":1943,"title":{"46-14":{},"48-4":{}},"name":{},"text":{},"component":{}}],["get_caller_address{syscall_ptr",{"_index":1962,"title":{},"name":{},"text":{"46":{},"48":{}},"component":{}}],["get_class_by_hash",{"_index":1369,"title":{},"name":{},"text":{"24":{}},"component":{}}],["get_class_hash_at",{"_index":1370,"title":{},"name":{},"text":{"24":{}},"component":{}}],["get_cod",{"_index":71,"title":{"7-11":{}},"name":{},"text":{"7":{}},"component":{}}],["get_contract_address",{"_index":1944,"title":{"46-20":{},"48-5":{}},"name":{},"text":{"46":{},"47":{},"48":{}},"component":{}}],["get_contract_address{syscall_ptr",{"_index":1964,"title":{},"name":{},"text":{"46":{},"48":{}},"component":{}}],["get_count",{"_index":1558,"title":{},"name":{},"text":{"30":{},"42":{}},"component":{}}],["get_decim",{"_index":1860,"title":{},"name":{},"text":{"42":{}},"component":{}}],["get_execution_info",{"_index":2018,"title":{"47-7":{},"48-8":{}},"name":{},"text":{"48":{}},"component":{}}],["get_execution_info_syscal",{"_index":2024,"title":{},"name":{},"text":{"47":{},"48":{}},"component":{}}],["get_nam",{"_index":1858,"title":{},"name":{},"text":{"42":{}},"component":{}}],["get_sequencer_address",{"_index":1945,"title":{"46-26":{},"48-6":{}},"name":{},"text":{},"component":{}}],["get_sequencer_address{syscall_ptr",{"_index":1966,"title":{},"name":{},"text":{"46":{},"48":{}},"component":{}}],["get_state_upd",{"_index":1278,"title":{},"name":{},"text":{"24":{}},"component":{}}],["get_storage_at",{"_index":72,"title":{"7-12":{}},"name":{},"text":{"7":{}},"component":{}}],["get_symbol",{"_index":1859,"title":{},"name":{},"text":{"42":{}},"component":{}}],["get_total_suppli",{"_index":1861,"title":{},"name":{},"text":{"42":{}},"component":{}}],["get_transact",{"_index":73,"title":{"7-13":{}},"name":{},"text":{"7":{}},"component":{}}],["get_transaction_info",{"_index":1946,"title":{"46-32":{}},"name":{},"text":{"48":{}},"component":{}}],["get_transaction_receipt",{"_index":74,"title":{"7-14":{}},"name":{},"text":{"7":{}},"component":{}}],["get_tx_info",{"_index":1628,"title":{},"name":{},"text":{"32":{}},"component":{}}],["get_tx_info{syscall_ptr",{"_index":1968,"title":{},"name":{},"text":{"46":{},"48":{}},"component":{}}],["getter",{"_index":1940,"title":{"46-1":{},"48-1":{},"48-7":{}},"name":{},"text":{"47":{},"48":{}},"component":{}}],["ginger",{"_index":1425,"title":{},"name":{},"text":{"26":{}},"component":{}}],["gingersec.xyz",{"_index":1426,"title":{},"name":{},"text":{"26":{}},"component":{}}],["git",{"_index":665,"title":{},"name":{},"text":{"15":{}},"component":{}}],["github",{"_index":775,"title":{},"name":{},"text":{"20":{},"22":{}},"component":{}}],["github.com/eqlabs/pathfind",{"_index":1403,"title":{},"name":{},"text":{"25":{},"28":{}},"component":{}}],["github.com/nethermindeth/juno",{"_index":1398,"title":{},"name":{},"text":{"25":{},"28":{}},"component":{}}],["github.com/starkwar",{"_index":1400,"title":{},"name":{},"text":{"25":{},"28":{}},"component":{}}],["give",{"_index":977,"title":{},"name":{},"text":{"22":{},"33":{},"35":{},"41":{}},"component":{}}],["given",{"_index":193,"title":{},"name":{},"text":{"7":{},"24":{},"29":{},"30":{},"32":{},"36":{},"38":{},"41":{},"46":{},"47":{},"48":{},"51":{},"53":{},"54":{},"56":{},"57":{}},"component":{}}],["global_state_root",{"_index":2064,"title":{},"name":{},"text":{"49":{}},"component":{}}],["gmp",{"_index":653,"title":{},"name":{},"text":{"15":{}},"component":{}}],["gnark",{"_index":863,"title":{},"name":{},"text":{"20":{}},"component":{}}],["gnu",{"_index":630,"title":{},"name":{},"text":{"15":{}},"component":{}}],["go",{"_index":171,"title":{},"name":{},"text":{"7":{},"13":{},"15":{},"22":{},"25":{},"28":{},"29":{},"47":{},"53":{}},"component":{}}],["goal",{"_index":410,"title":{},"name":{},"text":{"13":{}},"component":{}}],["goerli",{"_index":99,"title":{"14-5":{},"19-2":{},"19-3":{}},"name":{},"text":{"7":{},"13":{},"14":{},"20":{},"21":{},"24":{}},"component":{}}],["goerli.json",{"_index":747,"title":{},"name":{},"text":{"19":{}},"component":{}}],["goerli2.json",{"_index":748,"title":{},"name":{},"text":{"19":{}},"component":{}}],["golang",{"_index":770,"title":{},"name":{},"text":{"20":{}},"component":{}}],["good",{"_index":606,"title":{},"name":{},"text":{"15":{},"29":{},"31":{}},"component":{}}],["grace",{"_index":889,"title":{},"name":{},"text":{"20":{},"29":{}},"component":{}}],["gracefulli",{"_index":810,"title":{},"name":{},"text":{"20":{}},"component":{}}],["gradual",{"_index":2263,"title":{},"name":{},"text":{"53":{},"55":{}},"component":{}}],["greater",{"_index":2023,"title":{},"name":{},"text":{"47":{}},"component":{}}],["grow",{"_index":2348,"title":{},"name":{},"text":{"55":{}},"component":{}}],["grpc",{"_index":804,"title":{},"name":{},"text":{"20":{}},"component":{}}],["guarante",{"_index":1456,"title":{},"name":{},"text":{"29":{},"31":{},"35":{}},"component":{}}],["guid",{"_index":417,"title":{"30":{}},"name":{},"text":{"13":{},"17":{},"22":{}},"component":{}}],["gurante",{"_index":369,"title":{},"name":{},"text":{"10":{}},"component":{}}],["h",{"_index":307,"title":{"9-7":{}},"name":{},"text":{"9":{},"36":{},"38":{},"41":{},"45":{},"49":{},"51":{},"54":{},"56":{},"57":{}},"component":{}}],["h\\big",{"_index":1750,"title":{},"name":{},"text":{"36":{}},"component":{}}],["hade",{"_index":1730,"title":{},"name":{},"text":{"36":{}},"component":{}}],["halt",{"_index":1467,"title":{},"name":{},"text":{"29":{}},"component":{}}],["handi",{"_index":1440,"title":{},"name":{},"text":{"29":{}},"component":{}}],["handl",{"_index":802,"title":{},"name":{},"text":{"20":{},"22":{},"24":{},"29":{},"35":{},"54":{}},"component":{}}],["handle_deposit",{"_index":2352,"title":{},"name":{},"text":{"55":{}},"component":{}}],["handler",{"_index":244,"title":{},"name":{},"text":{"7":{},"22":{},"41":{},"42":{},"46":{},"48":{},"50":{},"54":{},"55":{}},"component":{}}],["happen",{"_index":1568,"title":{},"name":{},"text":{"30":{},"54":{},"55":{}},"component":{}}],["happi",{"_index":1513,"title":{},"name":{},"text":{"29":{}},"component":{}}],["hard",{"_index":1166,"title":{},"name":{},"text":{"22":{}},"component":{}}],["harder",{"_index":1710,"title":{},"name":{},"text":{"35":{}},"component":{}}],["hardwar",{"_index":1670,"title":{},"name":{},"text":{"33":{}},"component":{}}],["harm",{"_index":1508,"title":{},"name":{},"text":{"29":{}},"component":{}}],["hash",{"_index":151,"title":{"36":{},"41":{},"36-3":{},"36-4":{},"36-5":{},"41-2":{},"41-4":{},"49-2":{},"51-2":{},"51-5":{},"51-7":{},"51-10":{},"51-13":{},"51-14":{},"51-16":{},"54-2":{},"54-6":{},"57-3":{}},"name":{"36":{},"41":{}},"text":{"7":{},"13":{},"14":{},"20":{},"22":{},"24":{},"31":{},"32":{},"36":{},"38":{},"41":{},"43":{},"44":{},"45":{},"46":{},"47":{},"48":{},"49":{},"51":{},"52":{},"53":{},"54":{},"56":{},"57":{}},"component":{}}],["hashbuiltin",{"_index":1621,"title":{},"name":{},"text":{"32":{}},"component":{}}],["hassl",{"_index":1148,"title":{},"name":{},"text":{"22":{}},"component":{}}],["have",{"_index":560,"title":{},"name":{},"text":{"14":{},"32":{},"35":{},"44":{},"54":{}},"component":{}}],["header",{"_index":2061,"title":{"49-1":{}},"name":{"49":{}},"text":{"49":{}},"component":{}}],["header’",{"_index":2075,"title":{},"name":{},"text":{"49":{}},"component":{}}],["heavier",{"_index":2194,"title":{},"name":{},"text":{"53":{}},"component":{}}],["height",{"_index":1001,"title":{},"name":{},"text":{"22":{},"49":{},"56":{}},"component":{}}],["held",{"_index":1022,"title":{},"name":{},"text":{"22":{}},"component":{}}],["hello",{"_index":499,"title":{},"name":{},"text":{"13":{}},"component":{}}],["hello_starknet.cairo",{"_index":485,"title":{},"name":{},"text":{"13":{}},"component":{}}],["hello_starknet.json",{"_index":511,"title":{},"name":{},"text":{"13":{}},"component":{}}],["hellostarknet",{"_index":494,"title":{},"name":{},"text":{"13":{}},"component":{}}],["help",{"_index":308,"title":{"9-7":{}},"name":{},"text":{"9":{},"20":{}},"component":{}}],["helper",{"_index":1380,"title":{},"name":{},"text":{"24":{}},"component":{}}],["here",{"_index":164,"title":{},"name":{},"text":{"7":{},"14":{},"18":{},"22":{},"24":{},"30":{},"36":{},"41":{},"42":{},"51":{},"53":{},"55":{},"56":{},"57":{}},"component":{}}],["hex",{"_index":1112,"title":{},"name":{},"text":{"22":{}},"component":{}}],["hidden",{"_index":1036,"title":{},"name":{},"text":{"22":{}},"component":{}}],["hierarchi",{"_index":1888,"title":{},"name":{},"text":{"42":{}},"component":{}}],["high",{"_index":529,"title":{"53-3":{}},"name":{},"text":{"13":{},"32":{},"38":{},"42":{}},"component":{}}],["higher",{"_index":1700,"title":{},"name":{},"text":{"35":{},"46":{},"47":{},"48":{},"57":{}},"component":{}}],["highest",{"_index":2389,"title":{},"name":{},"text":{"56":{}},"component":{}}],["highest_block",{"_index":1002,"title":{},"name":{},"text":{"22":{}},"component":{}}],["highli",{"_index":989,"title":{},"name":{},"text":{"22":{}},"component":{}}],["highlight",{"_index":968,"title":{"22-38":{},"22-62":{}},"name":{},"text":{"30":{}},"component":{}}],["hinder",{"_index":1202,"title":{},"name":{},"text":{"22":{}},"component":{}}],["hint",{"_index":334,"title":{"29-5":{}},"name":{},"text":{"9":{},"13":{},"14":{},"24":{},"29":{},"44":{}},"component":{}}],["histor",{"_index":1069,"title":{},"name":{},"text":{"22":{},"24":{}},"component":{}}],["histori",{"_index":836,"title":{},"name":{},"text":{"20":{},"22":{}},"component":{}}],["hold",{"_index":2179,"title":{},"name":{},"text":{"52":{},"53":{}},"component":{}}],["home",{"_index":231,"title":{},"name":{},"text":{"7":{},"13":{},"15":{}},"component":{}}],["home/downloads/cairo",{"_index":658,"title":{},"name":{},"text":{"15":{}},"component":{}}],["homebrew",{"_index":652,"title":{},"name":{},"text":{"15":{}},"component":{}}],["honest",{"_index":1808,"title":{},"name":{},"text":{"41":{}},"component":{}}],["host",{"_index":1209,"title":{},"name":{},"text":{"22":{}},"component":{}}],["hotfix",{"_index":1151,"title":{},"name":{},"text":{"22":{}},"component":{}}],["http",{"_index":994,"title":{},"name":{},"text":{"22":{},"24":{}},"component":{}}],["https://alpha",{"_index":118,"title":{},"name":{},"text":{"7":{},"19":{}},"component":{}}],["https://alpha4",{"_index":744,"title":{},"name":{},"text":{"19":{}},"component":{}}],["https://alpha4.starknet.io",{"_index":742,"title":{},"name":{},"text":{"19":{}},"component":{}}],["https://alpha4.starknet.io/feeder_gateway",{"_index":117,"title":{},"name":{},"text":{"7":{}},"component":{}}],["https://alpha4.starknet.io/gateway",{"_index":120,"title":{},"name":{},"text":{"7":{}},"component":{}}],["https://github.com/eqlabs/pathfinder/releases/tag/v0.4.1",{"_index":1137,"title":{},"name":{},"text":{"22":{}},"component":{}}],["https://github.com/matthieuaug",{"_index":1063,"title":{},"name":{},"text":{"22":{}},"component":{}}],["https://github.com/shrame",{"_index":1060,"title":{},"name":{},"text":{"22":{}},"component":{}}],["https://github.com/starknet",{"_index":394,"title":{},"name":{},"text":{"11":{}},"component":{}}],["https://github.com/starkwar",{"_index":666,"title":{},"name":{},"text":{"15":{},"20":{}},"component":{}}],["https://pyenv.run",{"_index":616,"title":{},"name":{},"text":{"15":{}},"component":{}}],["https://starkscan.co",{"_index":1430,"title":{},"name":{},"text":{"27":{}},"component":{}}],["https://v2.viewblock.io/starknet",{"_index":1432,"title":{},"name":{},"text":{"27":{}},"component":{}}],["https://voyager.onlin",{"_index":1433,"title":{},"name":{},"text":{"27":{}},"component":{}}],["hypothet",{"_index":2226,"title":{},"name":{},"text":{"53":{}},"component":{}}],["i'th",{"_index":2074,"title":{},"name":{},"text":{"49":{}},"component":{}}],["i.",{"_index":1640,"title":{},"name":{},"text":{"33":{},"41":{},"46":{},"47":{},"48":{},"53":{},"55":{}},"component":{}}],["icountercontract",{"_index":1559,"title":{},"name":{},"text":{"30":{},"42":{}},"component":{}}],["id",{"_index":1177,"title":{"51-18":{}},"name":{},"text":{"22":{},"46":{},"48":{},"51":{}},"component":{}}],["idea",{"_index":1652,"title":{},"name":{},"text":{"33":{}},"component":{}}],["identifi",{"_index":336,"title":{},"name":{},"text":{"9":{},"22":{},"24":{},"41":{},"43":{},"44":{},"50":{},"57":{}},"component":{}}],["if/els",{"_index":1479,"title":{},"name":{},"text":{"29":{}},"component":{}}],["ignor",{"_index":860,"title":{},"name":{},"text":{"20":{},"22":{},"24":{},"53":{}},"component":{}}],["illustr",{"_index":2124,"title":{},"name":{},"text":{"51":{},"54":{},"57":{}},"component":{}}],["imagin",{"_index":2216,"title":{},"name":{},"text":{"53":{},"54":{}},"component":{}}],["immedi",{"_index":1108,"title":{},"name":{},"text":{"22":{}},"component":{}}],["impact",{"_index":1146,"title":{},"name":{},"text":{"22":{}},"component":{}}],["impl",{"_index":1535,"title":{"30-5":{},"42-2":{}},"name":{},"text":{"30":{},"42":{}},"component":{}}],["implement",{"_index":424,"title":{},"name":{},"text":{"13":{},"14":{},"15":{},"20":{},"22":{},"24":{},"30":{},"31":{},"36":{},"41":{},"42":{},"44":{},"46":{},"48":{},"49":{},"51":{},"52":{}},"component":{}}],["implicit",{"_index":2026,"title":{},"name":{},"text":{"47":{},"48":{},"55":{}},"component":{}}],["import",{"_index":347,"title":{"19":{}},"name":{},"text":{"9":{},"13":{},"20":{},"24":{},"29":{},"31":{},"45":{},"46":{},"47":{},"48":{},"53":{},"57":{}},"component":{}}],["important_address",{"_index":734,"title":{},"name":{"19":{}},"text":{},"component":{}}],["imposs",{"_index":1671,"title":{},"name":{},"text":{"33":{}},"component":{}}],["improv",{"_index":809,"title":{},"name":{},"text":{"20":{},"22":{},"23":{},"24":{},"31":{},"33":{},"53":{}},"component":{}}],["in%20cairo",{"_index":399,"title":{},"name":{},"text":{"11":{}},"component":{}}],["in\\mathbb{f}_p^2",{"_index":1775,"title":{},"name":{},"text":{"38":{}},"component":{}}],["inaccess",{"_index":1953,"title":{},"name":{},"text":{"46":{},"47":{},"48":{}},"component":{}}],["incent",{"_index":2328,"title":{},"name":{},"text":{"54":{}},"component":{}}],["includ",{"_index":100,"title":{"55-6":{},"55-9":{}},"name":{},"text":{"7":{},"9":{},"20":{},"22":{},"23":{},"24":{},"29":{},"31":{},"32":{},"34":{},"35":{},"46":{},"47":{},"48":{},"49":{},"51":{},"53":{},"54":{},"56":{},"57":{}},"component":{}}],["inclus",{"_index":943,"title":{"23-5":{}},"name":{},"text":{"21":{},"23":{},"46":{},"48":{}},"component":{}}],["incom",{"_index":777,"title":{},"name":{},"text":{"20":{},"22":{}},"component":{}}],["incompat",{"_index":1067,"title":{},"name":{},"text":{"22":{}},"component":{}}],["inconsist",{"_index":981,"title":{},"name":{},"text":{"22":{}},"component":{}}],["incorpor",{"_index":202,"title":{},"name":{},"text":{"7":{}},"component":{}}],["incorrect",{"_index":1806,"title":{},"name":{},"text":{"41":{}},"component":{}}],["increas",{"_index":819,"title":{},"name":{},"text":{"20":{},"22":{},"24":{},"33":{},"51":{},"54":{}},"component":{}}],["increase_allow",{"_index":1865,"title":{},"name":{},"text":{"42":{}},"component":{}}],["increase_count",{"_index":1556,"title":{},"name":{},"text":{"30":{},"42":{}},"component":{}}],["increment",{"_index":1597,"title":{},"name":{},"text":{"31":{}},"component":{}}],["inde",{"_index":1683,"title":{},"name":{},"text":{"35":{},"54":{},"55":{}},"component":{}}],["independ",{"_index":1266,"title":{},"name":{},"text":{"24":{}},"component":{}}],["index",{"_index":11,"title":{},"name":{"4":{},"6":{},"16":{}},"text":{"29":{},"41":{},"49":{},"50":{},"52":{},"57":{}},"component":{}}],["indic",{"_index":614,"title":{},"name":{},"text":{"15":{},"47":{},"54":{},"56":{}},"component":{}}],["individu",{"_index":1632,"title":{},"name":{},"text":{"33":{}},"component":{}}],["induc",{"_index":2312,"title":{},"name":{},"text":{"54":{}},"component":{}}],["info",{"_index":2031,"title":{},"name":{},"text":{"47":{},"48":{}},"component":{}}],["inform",{"_index":273,"title":{},"name":{},"text":{"7":{},"9":{},"17":{},"24":{},"25":{},"27":{},"28":{},"43":{},"44":{},"46":{},"47":{},"48":{},"51":{},"52":{},"53":{},"54":{},"56":{},"57":{}},"component":{}}],["infura",{"_index":1393,"title":{},"name":{},"text":{"25":{},"28":{}},"component":{}}],["inher",{"_index":1657,"title":{},"name":{},"text":{"33":{}},"component":{}}],["inherit",{"_index":939,"title":{},"name":{},"text":{"21":{}},"component":{}}],["init",{"_index":623,"title":{},"name":{},"text":{"15":{}},"component":{}}],["initi",{"_index":566,"title":{},"name":{},"text":{"14":{},"24":{},"31":{},"33":{},"35":{},"45":{},"46":{},"48":{},"51":{},"54":{},"55":{}},"component":{}}],["initial_count",{"_index":1872,"title":{},"name":{},"text":{"42":{}},"component":{}}],["initial_suppli",{"_index":1854,"title":{},"name":{},"text":{"42":{}},"component":{}}],["initiate_withdraw",{"_index":2357,"title":{},"name":{},"text":{"55":{}},"component":{}}],["inject",{"_index":2284,"title":{},"name":{},"text":{"53":{}},"component":{}}],["input",{"_index":129,"title":{},"name":{},"text":{"7":{},"13":{},"22":{},"29":{},"36":{},"38":{},"42":{},"43":{},"57":{}},"component":{}}],["input_array",{"_index":1842,"title":{},"name":{},"text":{"42":{}},"component":{}}],["input_nested_array",{"_index":1845,"title":{},"name":{},"text":{"42":{}},"component":{}}],["input_output_struct",{"_index":1848,"title":{},"name":{},"text":{"42":{}},"component":{}}],["insid",{"_index":484,"title":{},"name":{},"text":{"13":{},"24":{},"29":{},"30":{},"33":{},"41":{},"46":{},"48":{},"49":{},"52":{},"54":{},"57":{}},"component":{}}],["insight",{"_index":681,"title":{},"name":{},"text":{"17":{}},"component":{}}],["inspir",{"_index":1589,"title":{},"name":{},"text":{"31":{},"44":{}},"component":{}}],["instal",{"_index":322,"title":{"15-2":{},"15-5":{},"15-8":{},"15-10":{},"15-11":{}},"name":{},"text":{"9":{},"13":{},"15":{}},"component":{}}],["instanc",{"_index":513,"title":{},"name":{},"text":{"13":{},"18":{},"24":{},"44":{},"46":{},"47":{},"48":{},"51":{},"56":{}},"component":{}}],["instead",{"_index":293,"title":{},"name":{},"text":{"8":{},"9":{},"20":{},"22":{},"24":{},"29":{},"31":{},"44":{},"46":{},"48":{}},"component":{}}],["instruct",{"_index":1330,"title":{},"name":{},"text":{"24":{},"29":{},"41":{}},"component":{}}],["int",{"_index":1109,"title":{},"name":{},"text":{"22":{}},"component":{}}],["int.from_byt",{"_index":2125,"title":{},"name":{},"text":{"51":{}},"component":{}}],["integ",{"_index":1765,"title":{},"name":{},"text":{"37":{},"49":{},"56":{}},"component":{}}],["integr",{"_index":696,"title":{},"name":{},"text":{"17":{},"20":{},"22":{}},"component":{}}],["intend",{"_index":1805,"title":{},"name":{},"text":{"41":{},"46":{},"48":{}},"component":{}}],["intent",{"_index":2319,"title":{},"name":{},"text":{"54":{}},"component":{}}],["intention",{"_index":1807,"title":{},"name":{},"text":{"41":{}},"component":{}}],["interact",{"_index":110,"title":{"13-7":{}},"name":{},"text":{"7":{},"13":{},"14":{},"15":{},"24":{},"33":{},"45":{},"54":{}},"component":{}}],["interest",{"_index":686,"title":{},"name":{},"text":{"17":{}},"component":{}}],["interfac",{"_index":288,"title":{"31":{},"30-4":{},"30-5":{},"42-2":{}},"name":{},"text":{"8":{},"14":{},"15":{},"30":{},"31":{},"42":{},"46":{},"47":{},"48":{}},"component":{}}],["interface_nam",{"_index":1868,"title":{},"name":{},"text":{"42":{}},"component":{}}],["intermedi",{"_index":1291,"title":{},"name":{},"text":{"24":{},"29":{},"56":{}},"component":{}}],["intern",{"_index":2378,"title":{},"name":{},"text":{"56":{}},"component":{}}],["interpret",{"_index":1132,"title":{},"name":{},"text":{"22":{},"52":{},"56":{}},"component":{}}],["interv",{"_index":1014,"title":{},"name":{},"text":{"22":{}},"component":{}}],["introduc",{"_index":724,"title":{},"name":{},"text":{"18":{},"20":{},"22":{},"24":{},"32":{},"33":{},"42":{},"47":{},"51":{}},"component":{}}],["introduct",{"_index":10,"title":{"4":{},"14-1":{},"52-1":{},"53-1":{}},"name":{"33":{}},"text":{"24":{}},"component":{}}],["invalid",{"_index":1101,"title":{"35-2":{}},"name":{},"text":{"22":{},"23":{},"24":{},"32":{},"33":{},"35":{},"54":{}},"component":{}}],["invent",{"_index":2356,"title":{},"name":{},"text":{"55":{}},"component":{}}],["invoc",{"_index":2289,"title":{},"name":{},"text":{"54":{}},"component":{}}],["invok",{"_index":75,"title":{"7-15":{},"51-3":{},"51-4":{}},"name":{},"text":{"7":{},"13":{},"14":{},"18":{},"22":{},"24":{},"46":{},"48":{},"49":{},"50":{},"51":{},"54":{},"56":{}},"component":{}}],["invoke_v0_tx_hash",{"_index":2111,"title":{},"name":{},"text":{"51":{}},"component":{}}],["invoke_v1_tx_hash",{"_index":2108,"title":{},"name":{},"text":{"51":{}},"component":{}}],["invoketransact",{"_index":878,"title":{},"name":{},"text":{"20":{}},"component":{}}],["involv",{"_index":435,"title":{},"name":{},"text":{"13":{},"15":{},"21":{},"22":{},"46":{},"47":{},"48":{},"53":{},"55":{}},"component":{}}],["io/starknet",{"_index":395,"title":{},"name":{},"text":{"11":{}},"component":{}}],["iothercontract",{"_index":1565,"title":{},"name":{},"text":{"30":{},"42":{}},"component":{}}],["iothercontractdispatch",{"_index":1546,"title":{},"name":{},"text":{"30":{},"42":{}},"component":{}}],["iothercontractdispatchertrait",{"_index":1881,"title":{},"name":{},"text":{"42":{}},"component":{}}],["iothercontractlibrarydispatch",{"_index":1882,"title":{},"name":{},"text":{"42":{}},"component":{}}],["ip",{"_index":910,"title":{"21-4":{},"21-5":{}},"name":{},"text":{"21":{}},"component":{}}],["isn’t",{"_index":1510,"title":{},"name":{},"text":{"29":{}},"component":{}}],["isol",{"_index":607,"title":{},"name":{},"text":{"15":{}},"component":{}}],["issu",{"_index":383,"title":{},"name":{},"text":{"10":{},"13":{},"20":{},"22":{},"23":{},"24":{},"32":{},"35":{}},"component":{}}],["item",{"_index":1870,"title":{},"name":{},"text":{"42":{}},"component":{}}],["itself",{"_index":1674,"title":{},"name":{},"text":{"33":{},"54":{},"55":{}},"component":{}}],["it’",{"_index":811,"title":{},"name":{},"text":{"20":{},"24":{},"29":{},"31":{},"35":{},"50":{},"53":{}},"component":{}}],["journey",{"_index":704,"title":{},"name":{},"text":{"17":{}},"component":{}}],["json",{"_index":143,"title":{},"name":{},"text":{"7":{},"19":{},"20":{},"22":{},"41":{},"42":{}},"component":{}}],["juli",{"_index":1244,"title":{"24-2":{},"24-10":{}},"name":{},"text":{},"component":{}}],["june",{"_index":1259,"title":{"24-11":{}},"name":{},"text":{},"component":{}}],["juno",{"_index":768,"title":{"20":{}},"name":{},"text":{"20":{},"25":{},"28":{}},"component":{}}],["juno_gettransactionstatu",{"_index":798,"title":{},"name":{},"text":{"20":{}},"component":{}}],["juno_vers",{"_index":769,"title":{},"name":{"20":{}},"text":{"20":{}},"component":{}}],["juno’",{"_index":892,"title":{},"name":{},"text":{"20":{}},"component":{}}],["j’th",{"_index":1737,"title":{},"name":{},"text":{"36":{}},"component":{}}],["k",{"_index":2244,"title":{},"name":{},"text":{"53":{}},"component":{}}],["k_1",{"_index":1925,"title":{},"name":{},"text":{"45":{}},"component":{}}],["k_2",{"_index":1927,"title":{},"name":{},"text":{"45":{}},"component":{}}],["k_n",{"_index":1926,"title":{},"name":{},"text":{"45":{}},"component":{}}],["keccak",{"_index":1228,"title":{"23-6":{},"36-2":{}},"name":{},"text":{"23":{},"36":{},"45":{},"51":{}},"component":{}}],["keccak256",{"_index":1723,"title":{},"name":{},"text":{"36":{},"54":{}},"component":{}}],["keep",{"_index":912,"title":{},"name":{},"text":{"21":{},"33":{}},"component":{}}],["kept",{"_index":228,"title":{},"name":{},"text":{"7":{},"9":{},"45":{}},"component":{}}],["key",{"_index":210,"title":{},"name":{},"text":{"7":{},"13":{},"14":{},"20":{},"29":{},"33":{},"34":{},"35":{},"42":{},"45":{},"46":{},"47":{},"48":{},"50":{},"52":{},"53":{},"56":{},"57":{}},"component":{}}],["key/valu",{"_index":2362,"title":{},"name":{},"text":{"56":{}},"component":{}}],["keys.append",{"_index":2040,"title":{},"name":{},"text":{"47":{},"48":{},"57":{}},"component":{}}],["keys[0",{"_index":1993,"title":{},"name":{},"text":{"46":{},"48":{},"57":{}},"component":{}}],["keys[1",{"_index":1994,"title":{},"name":{},"text":{"46":{},"48":{},"57":{}},"component":{}}],["keys_len",{"_index":1988,"title":{},"name":{},"text":{"46":{},"48":{}},"component":{}}],["keyword",{"_index":1335,"title":{},"name":{},"text":{"24":{}},"component":{}}],["kick",{"_index":2209,"title":{},"name":{},"text":{"53":{}},"component":{}}],["kind",{"_index":1875,"title":{},"name":{},"text":{"42":{}},"component":{}}],["know",{"_index":2409,"title":{},"name":{},"text":{"56":{}},"component":{}}],["knowledg",{"_index":1444,"title":{},"name":{},"text":{"29":{}},"component":{}}],["known",{"_index":17,"title":{},"name":{},"text":{"4":{},"22":{},"24":{},"33":{},"46":{},"47":{},"48":{},"50":{},"55":{},"56":{}},"component":{}}],["l",{"_index":2205,"title":{},"name":{},"text":{"53":{}},"component":{}}],["l1",{"_index":243,"title":{"54":{},"54-1":{},"54-2":{},"54-3":{},"54-4":{},"54-5":{},"54-6":{},"55-4":{},"55-10":{}},"name":{},"text":{"7":{},"10":{},"14":{},"18":{},"19":{},"20":{},"21":{},"22":{},"24":{},"41":{},"42":{},"46":{},"47":{},"48":{},"50":{},"52":{},"53":{},"54":{},"55":{}},"component":{}}],["l1/l2",{"_index":937,"title":{},"name":{},"text":{"21":{}},"component":{}}],["l1_bridge_address",{"_index":757,"title":{},"name":{},"text":{"19":{}},"component":{}}],["l1_handler",{"_index":1887,"title":{},"name":{},"text":{"42":{},"54":{}},"component":{}}],["l1_handler_entry_point",{"_index":1810,"title":{},"name":{},"text":{"41":{}},"component":{}}],["l1_handler_tx_hash",{"_index":2331,"title":{},"name":{},"text":{"54":{}},"component":{}}],["l1_token_address",{"_index":753,"title":{},"name":{},"text":{"19":{}},"component":{}}],["l1→l2",{"_index":728,"title":{"55-3":{}},"name":{},"text":{"18":{},"46":{},"48":{},"54":{}},"component":{}}],["l2",{"_index":21,"title":{"54":{},"54-1":{},"54-2":{},"54-3":{},"54-4":{},"54-5":{},"54-6":{},"55-8":{}},"name":{},"text":{"4":{},"7":{},"14":{},"16":{},"18":{},"19":{},"22":{},"29":{},"50":{},"53":{},"54":{},"55":{}},"component":{}}],["l2_bridge_address",{"_index":758,"title":{},"name":{},"text":{"19":{}},"component":{}}],["l2_to_l1_messag",{"_index":2097,"title":{},"name":{},"text":{"50":{}},"component":{}}],["l2_token_address",{"_index":756,"title":{},"name":{},"text":{"19":{}},"component":{}}],["l2→l1",{"_index":2183,"title":{"53-10":{},"55-7":{}},"name":{},"text":{"53":{},"54":{}},"component":{}}],["l3",{"_index":1531,"title":{},"name":{},"text":{"29":{}},"component":{}}],["lab",{"_index":1388,"title":{},"name":{},"text":{"25":{},"28":{}},"component":{}}],["lambdaclass’",{"_index":1268,"title":{},"name":{},"text":{"24":{}},"component":{}}],["lang",{"_index":224,"title":{},"name":{},"text":{"7":{},"15":{},"22":{},"25":{},"28":{}},"component":{}}],["languag",{"_index":644,"title":{},"name":{},"text":{"15":{},"24":{},"29":{},"44":{},"46":{},"47":{},"48":{},"51":{}},"component":{}}],["larg",{"_index":1026,"title":{},"name":{},"text":{"22":{}},"component":{}}],["larger",{"_index":2195,"title":{},"name":{},"text":{"53":{}},"component":{}}],["latenc",{"_index":2206,"title":{},"name":{},"text":{"53":{}},"component":{}}],["later",{"_index":1704,"title":{},"name":{},"text":{"35":{},"53":{},"54":{}},"component":{}}],["latest",{"_index":155,"title":{"15-10":{},"20-1":{},"22-1":{}},"name":{},"text":{"7":{},"15":{},"22":{},"24":{},"53":{}},"component":{}}],["latter",{"_index":176,"title":{},"name":{},"text":{"7":{}},"component":{}}],["lava",{"_index":1395,"title":{},"name":{},"text":{"25":{},"28":{}},"component":{}}],["layer",{"_index":557,"title":{},"name":{},"text":{"14":{},"20":{},"24":{},"29":{},"54":{}},"component":{}}],["layout",{"_index":1905,"title":{"45-1":{}},"name":{},"text":{},"component":{}}],["lead",{"_index":2388,"title":{},"name":{},"text":{"56":{}},"component":{}}],["leaf",{"_index":2073,"title":{},"name":{},"text":{"49":{},"56":{}},"component":{}}],["learn",{"_index":406,"title":{},"name":{},"text":{"13":{},"14":{},"17":{}},"component":{}}],["leav",{"_index":1522,"title":{},"name":{},"text":{"29":{},"55":{},"56":{}},"component":{}}],["led",{"_index":1129,"title":{},"name":{},"text":{"22":{}},"component":{}}],["left",{"_index":2383,"title":{},"name":{},"text":{"56":{}},"component":{}}],["left=right",{"_index":2399,"title":{},"name":{},"text":{"56":{}},"component":{}}],["left[\\text{hades_permut",{"_index":1733,"title":{},"name":{},"text":{"36":{}},"component":{}}],["left[shift\\_point",{"_index":1783,"title":{},"name":{},"text":{"38":{}},"component":{}}],["legacymap",{"_index":1939,"title":{},"name":{},"text":{"45":{}},"component":{}}],["length",{"_index":2204,"title":{},"name":{},"text":{"53":{},"56":{}},"component":{}}],["length>0",{"_index":2387,"title":{},"name":{},"text":{"56":{}},"component":{}}],["less",{"_index":587,"title":{},"name":{},"text":{"14":{},"47":{},"53":{}},"component":{}}],["let",{"_index":1106,"title":{},"name":{},"text":{"22":{}},"component":{}}],["let’",{"_index":515,"title":{},"name":{},"text":{"13":{},"53":{}},"component":{}}],["level",{"_index":885,"title":{"45-2":{},"53-3":{}},"name":{},"text":{"20":{},"24":{},"31":{},"33":{},"42":{},"46":{},"47":{},"48":{},"56":{},"57":{}},"component":{}}],["li",{"_index":1931,"title":{},"name":{},"text":{"45":{}},"component":{}}],["libfunc",{"_index":996,"title":{},"name":{},"text":{"22":{}},"component":{}}],["libgmp3",{"_index":627,"title":{},"name":{},"text":{"15":{}},"component":{}}],["librari",{"_index":351,"title":{"46-7":{},"46-13":{},"46-19":{},"46-25":{},"46-31":{},"46-37":{},"46-43":{},"46-49":{},"46-55":{},"46-62":{},"46-68":{},"46-74":{},"46-81":{},"46-87":{},"46-94":{},"47-5":{},"47-12":{},"47-18":{},"47-23":{},"47-29":{},"47-36":{},"47-42":{},"47-49":{},"47-55":{}},"name":{},"text":{"9":{},"15":{},"24":{},"29":{},"32":{},"47":{},"48":{},"51":{}},"component":{}}],["library_cal",{"_index":1372,"title":{"46-57":{},"47-31":{},"48-12":{}},"name":{},"text":{"24":{},"44":{},"46":{},"48":{}},"component":{}}],["library_call_l1_handl",{"_index":1949,"title":{"46-63":{},"48-13":{}},"name":{},"text":{"46":{},"48":{}},"component":{}}],["library_call_l1_handler{syscall_ptr",{"_index":2000,"title":{},"name":{},"text":{"46":{},"48":{}},"component":{}}],["library_call_syscal",{"_index":2043,"title":{},"name":{},"text":{"47":{},"48":{}},"component":{}}],["library_call{syscall_ptr",{"_index":1998,"title":{},"name":{},"text":{"46":{},"48":{}},"component":{}}],["libs/cairo",{"_index":667,"title":{},"name":{},"text":{"15":{}},"component":{}}],["libs/papyru",{"_index":1401,"title":{},"name":{},"text":{"25":{},"28":{}},"component":{}}],["libs/starknet",{"_index":882,"title":{},"name":{},"text":{"20":{}},"component":{}}],["life",{"_index":2077,"title":{},"name":{"50":{}},"text":{},"component":{}}],["lifecycl",{"_index":286,"title":{"50":{}},"name":{},"text":{"7":{}},"component":{}}],["lifetim",{"_index":1679,"title":{},"name":{},"text":{"34":{}},"component":{}}],["lift",{"_index":2346,"title":{},"name":{},"text":{"55":{}},"component":{}}],["limit",{"_index":531,"title":{"21":{},"21-1":{},"21-2":{},"21-3":{},"21-4":{},"21-5":{},"35-3":{},"55-2":{}},"name":{},"text":{"13":{},"20":{},"21":{},"22":{},"29":{},"32":{},"33":{},"35":{},"45":{},"53":{},"55":{}},"component":{}}],["limits_and_trigg",{"_index":911,"title":{},"name":{"21":{}},"text":{},"component":{}}],["line",{"_index":59,"title":{"7-1":{}},"name":{},"text":{"7":{},"8":{},"9":{},"14":{},"15":{},"22":{},"24":{},"29":{},"45":{}},"component":{}}],["linear",{"_index":1706,"title":{},"name":{},"text":{"35":{}},"component":{}}],["link",{"_index":393,"title":{},"name":{},"text":{"11":{},"22":{}},"component":{}}],["linux",{"_index":599,"title":{"15-6":{}},"name":{},"text":{"15":{}},"component":{}}],["list",{"_index":148,"title":{},"name":{},"text":{"7":{},"9":{},"19":{},"22":{},"24":{},"25":{},"26":{},"28":{},"49":{},"50":{},"51":{},"53":{},"54":{},"57":{}},"component":{}}],["live",{"_index":1218,"title":{},"name":{},"text":{"22":{},"24":{}},"component":{}}],["local",{"_index":441,"title":{},"name":{},"text":{"13":{},"14":{},"15":{},"22":{},"29":{},"46":{},"47":{},"48":{},"52":{}},"component":{}}],["locat",{"_index":276,"title":{},"name":{},"text":{"7":{},"13":{}},"component":{}}],["lock",{"_index":2339,"title":{},"name":{},"text":{"55":{}},"component":{}}],["log",{"_index":776,"title":{},"name":{},"text":{"20":{},"22":{},"57":{}},"component":{}}],["logic",{"_index":54,"title":{},"name":{},"text":{"4":{},"14":{},"31":{},"33":{},"35":{},"46":{},"47":{},"48":{}},"component":{}}],["logmessagetol1",{"_index":2295,"title":{},"name":{},"text":{"54":{}},"component":{}}],["logstateupd",{"_index":1283,"title":{},"name":{},"text":{"24":{}},"component":{}}],["longer",{"_index":303,"title":{},"name":{},"text":{"8":{},"13":{},"18":{},"20":{},"22":{},"24":{},"41":{},"42":{},"51":{}},"component":{}}],["look",{"_index":463,"title":{},"name":{},"text":{"13":{},"15":{},"17":{},"29":{},"52":{}},"component":{}}],["lose",{"_index":236,"title":{},"name":{},"text":{"7":{},"33":{},"54":{}},"component":{}}],["lot",{"_index":1462,"title":{},"name":{},"text":{"29":{},"35":{}},"component":{}}],["low",{"_index":1339,"title":{"45-2":{}},"name":{},"text":{"24":{},"38":{},"57":{}},"component":{}}],["lower",{"_index":1979,"title":{},"name":{},"text":{"46":{},"47":{},"48":{}},"component":{}}],["ly",{"_index":1526,"title":{},"name":{},"text":{"29":{}},"component":{}}],["m",{"_index":609,"title":{},"name":{},"text":{"15":{},"53":{}},"component":{}}],["mac",{"_index":655,"title":{},"name":{},"text":{"15":{}},"component":{}}],["machin",{"_index":443,"title":{},"name":{},"text":{"13":{},"53":{}},"component":{}}],["maco",{"_index":600,"title":{"15-7":{}},"name":{},"text":{"15":{}},"component":{}}],["macro",{"_index":0,"title":{"1":{}},"name":{},"text":{},"component":{}}],["macros_and_attribut",{"_index":2,"title":{},"name":{"1":{}},"text":{},"component":{}}],["made",{"_index":818,"title":{},"name":{},"text":{"20":{},"22":{}},"component":{}}],["mail",{"_index":1264,"title":{},"name":{},"text":{"24":{}},"component":{}}],["main",{"_index":411,"title":{},"name":{},"text":{"13":{},"24":{},"51":{}},"component":{}}],["mainnet",{"_index":94,"title":{"19-1":{}},"name":{},"text":{"7":{},"19":{},"21":{},"22":{},"24":{},"55":{}},"component":{}}],["mainnet.json",{"_index":746,"title":{},"name":{},"text":{"19":{}},"component":{}}],["mainnet.starknet.io",{"_index":739,"title":{},"name":{},"text":{"19":{}},"component":{}}],["mainnet.starknet.io/feeder_gateway",{"_index":119,"title":{},"name":{},"text":{"7":{}},"component":{}}],["mainnet.starknet.io/gateway",{"_index":121,"title":{},"name":{},"text":{"7":{}},"component":{}}],["maintain",{"_index":852,"title":{},"name":{},"text":{"20":{},"42":{},"54":{}},"component":{}}],["major",{"_index":1163,"title":{},"name":{},"text":{"22":{},"33":{}},"component":{}}],["make",{"_index":460,"title":{},"name":{},"text":{"13":{},"15":{},"21":{},"24":{},"29":{},"30":{},"33":{},"35":{},"38":{},"46":{},"48":{}},"component":{}}],["malici",{"_index":1350,"title":{},"name":{},"text":{"24":{},"29":{},"31":{}},"component":{}}],["manag",{"_index":204,"title":{"15-4":{}},"name":{},"text":{"7":{},"15":{},"22":{},"31":{},"33":{},"35":{}},"component":{}}],["mandatori",{"_index":1323,"title":{},"name":{},"text":{"24":{},"31":{}},"component":{}}],["mani",{"_index":1701,"title":{},"name":{},"text":{"35":{},"53":{}},"component":{}}],["manner",{"_index":1820,"title":{},"name":{},"text":{"41":{},"52":{},"54":{},"56":{}},"component":{}}],["manual",{"_index":108,"title":{"15-3":{}},"name":{},"text":{"7":{},"15":{},"24":{}},"component":{}}],["map",{"_index":1711,"title":{},"name":{},"text":{"36":{},"45":{},"54":{},"56":{}},"component":{}}],["mar",{"_index":1248,"title":{"24-5":{}},"name":{},"text":{},"component":{}}],["mark",{"_index":1205,"title":{},"name":{},"text":{"22":{},"30":{}},"component":{}}],["match",{"_index":662,"title":{},"name":{},"text":{"15":{},"17":{},"22":{},"31":{}},"component":{}}],["mathbb{f}_p",{"_index":1712,"title":{},"name":{},"text":{"36":{},"38":{}},"component":{}}],["mathbb{f}_p^*\\rightarrow",{"_index":1719,"title":{},"name":{},"text":{"36":{}},"component":{}}],["mathbb{f}_p^2\\rightarrow\\mathbb{f}_p",{"_index":1718,"title":{},"name":{},"text":{"36":{}},"component":{}}],["mathemat",{"_index":378,"title":{},"name":{},"text":{"10":{},"15":{}},"component":{}}],["matthieu",{"_index":1061,"title":{},"name":{},"text":{"22":{}},"component":{}}],["max",{"_index":831,"title":{},"name":{},"text":{"20":{},"21":{},"22":{},"35":{},"53":{},"55":{}},"component":{}}],["max_fe",{"_index":468,"title":{},"name":{},"text":{"13":{},"14":{},"24":{},"32":{},"51":{},"53":{}},"component":{}}],["max_k",{"_index":2273,"title":{},"name":{},"text":{"53":{}},"component":{}}],["max_k[\\text{cairoresourceusage}_k",{"_index":2242,"title":{},"name":{},"text":{"53":{}},"component":{}}],["maxim",{"_index":1933,"title":{},"name":{},"text":{"45":{},"53":{}},"component":{}}],["maximum",{"_index":1056,"title":{},"name":{},"text":{"22":{},"46":{},"48":{},"51":{},"53":{}},"component":{}}],["mean",{"_index":1192,"title":{},"name":{},"text":{"22":{},"23":{},"24":{},"29":{},"33":{},"35":{},"42":{},"52":{},"55":{},"56":{}},"component":{}}],["meaning",{"_index":2076,"title":{},"name":{},"text":{"49":{}},"component":{}}],["meant",{"_index":1179,"title":{},"name":{},"text":{"22":{}},"component":{}}],["measur",{"_index":200,"title":{},"name":{},"text":{"7":{},"53":{}},"component":{}}],["mechan",{"_index":725,"title":{"53":{},"34-1":{}},"name":{"53":{},"54":{}},"text":{"18":{},"21":{},"24":{},"33":{},"35":{},"46":{},"47":{},"48":{},"53":{},"54":{},"55":{}},"component":{}}],["medium",{"_index":1300,"title":{},"name":{},"text":{"24":{}},"component":{}}],["member",{"_index":1334,"title":{},"name":{},"text":{"24":{},"30":{},"42":{},"57":{}},"component":{}}],["mempool",{"_index":909,"title":{"21-3":{},"23-4":{}},"name":{},"text":{"21":{},"23":{},"34":{},"35":{}},"component":{}}],["memstorag",{"_index":849,"title":{},"name":{},"text":{"20":{}},"component":{}}],["mention",{"_index":339,"title":{},"name":{},"text":{"9":{},"56":{}},"component":{}}],["merkl",{"_index":894,"title":{"56-4":{}},"name":{},"text":{"20":{},"22":{},"49":{},"56":{}},"component":{}}],["messag",{"_index":277,"title":{"54":{},"53-10":{},"54-1":{},"54-3":{},"54-4":{},"54-5":{}},"name":{"54":{}},"text":{"7":{},"9":{},"13":{},"18":{},"21":{},"22":{},"24":{},"46":{},"47":{},"48":{},"50":{},"53":{},"54":{},"55":{}},"component":{}}],["message:felt252",{"_index":504,"title":{},"name":{},"text":{"13":{}},"component":{}}],["message_payload",{"_index":2291,"title":{},"name":{},"text":{"54":{}},"component":{}}],["message_payload[1",{"_index":2292,"title":{},"name":{},"text":{"54":{}},"component":{}}],["message_payload[2",{"_index":2293,"title":{},"name":{},"text":{"54":{}},"component":{}}],["message_receiv",{"_index":2414,"title":{},"name":{},"text":{"57":{}},"component":{}}],["message_received.emit",{"_index":2416,"title":{},"name":{},"text":{"57":{}},"component":{}}],["messages.cairo",{"_index":2008,"title":{},"name":{},"text":{"46":{},"48":{}},"component":{}}],["meter",{"_index":1520,"title":{},"name":{},"text":{"29":{}},"component":{}}],["method",{"_index":792,"title":{},"name":{},"text":{"20":{},"22":{},"24":{},"29":{},"33":{},"46":{},"47":{},"48":{}},"component":{}}],["metric",{"_index":888,"title":{},"name":{},"text":{"20":{},"22":{},"27":{},"53":{}},"component":{}}],["mid",{"_index":1460,"title":{},"name":{},"text":{"29":{}},"component":{}}],["migrat",{"_index":808,"title":{"30":{},"30-1":{}},"name":{},"text":{"20":{},"22":{},"24":{},"30":{}},"component":{}}],["min",{"_index":928,"title":{},"name":{},"text":{"21":{}},"component":{}}],["mind",{"_index":2215,"title":{},"name":{},"text":{"53":{}},"component":{}}],["minor",{"_index":862,"title":{},"name":{},"text":{"20":{},"22":{}},"component":{}}],["mint",{"_index":2354,"title":{},"name":{},"text":{"55":{}},"component":{}}],["mismatch",{"_index":1031,"title":{},"name":{},"text":{"22":{}},"component":{}}],["miss",{"_index":786,"title":{},"name":{},"text":{"20":{},"22":{}},"component":{}}],["mitig",{"_index":2317,"title":{},"name":{},"text":{"54":{}},"component":{}}],["mix",{"_index":705,"title":{},"name":{},"text":{"17":{}},"component":{}}],["mkdir",{"_index":489,"title":{},"name":{},"text":{"13":{}},"component":{}}],["mod",{"_index":493,"title":{},"name":{},"text":{"13":{},"30":{},"42":{}},"component":{}}],["mode",{"_index":2050,"title":{},"name":{},"text":{"47":{},"52":{}},"component":{}}],["model",{"_index":1097,"title":{},"name":{},"text":{"22":{}},"component":{}}],["modifi",{"_index":91,"title":{},"name":{},"text":{"7":{},"13":{},"14":{},"30":{},"45":{}},"component":{}}],["modul",{"_index":208,"title":{},"name":{},"text":{"7":{},"24":{},"30":{}},"component":{}}],["moment",{"_index":564,"title":{},"name":{},"text":{"14":{},"24":{},"42":{},"50":{}},"component":{}}],["monitor",{"_index":476,"title":{},"name":{},"text":{"13":{},"20":{},"22":{}},"component":{}}],["more",{"_index":88,"title":{},"name":{},"text":{"7":{},"13":{},"14":{},"17":{},"18":{},"20":{},"22":{},"24":{},"25":{},"28":{},"29":{},"31":{},"33":{},"34":{},"41":{},"42":{},"43":{},"46":{},"47":{},"48":{},"51":{},"52":{},"53":{},"54":{},"56":{}},"component":{}}],["mostli",{"_index":1183,"title":{},"name":{},"text":{"22":{}},"component":{}}],["motiv",{"_index":2186,"title":{},"name":{},"text":{"53":{}},"component":{}}],["move",{"_index":451,"title":{},"name":{},"text":{"13":{},"14":{},"22":{},"24":{}},"component":{}}],["msg_to_l1",{"_index":995,"title":{},"name":{},"text":{"22":{}},"component":{}}],["much",{"_index":2055,"title":{"53-3":{}},"name":{},"text":{"48":{}},"component":{}}],["multical",{"_index":1709,"title":{},"name":{},"text":{"35":{}},"component":{}}],["multipl",{"_index":205,"title":{},"name":{},"text":{"7":{},"15":{},"20":{},"22":{},"24":{},"32":{},"33":{},"35":{},"45":{},"53":{},"54":{}},"component":{}}],["mut",{"_index":2290,"title":{},"name":{},"text":{"54":{}},"component":{}}],["my_unique_event_nam",{"_index":510,"title":{},"name":{},"text":{"13":{}},"component":{}}],["n",{"_index":1742,"title":{},"name":{},"text":{"36":{},"53":{},"56":{}},"component":{}}],["n+m",{"_index":2277,"title":{},"name":{},"text":{"53":{}},"component":{}}],["n=0",{"_index":1761,"title":{},"name":{},"text":{"36":{}},"component":{}}],["n=1",{"_index":1759,"title":{},"name":{},"text":{"36":{}},"component":{}}],["n\\ge",{"_index":1756,"title":{},"name":{},"text":{"36":{}},"component":{}}],["n_elm",{"_index":1486,"title":{},"name":{},"text":{"29":{}},"component":{}}],["n_memory_hol",{"_index":2092,"title":{},"name":{},"text":{"50":{}},"component":{}}],["n_step",{"_index":2090,"title":{},"name":{},"text":{"50":{}},"component":{}}],["name",{"_index":147,"title":{},"name":{},"text":{"7":{},"9":{},"13":{},"18":{},"19":{},"22":{},"24":{},"25":{},"26":{},"27":{},"28":{},"30":{},"32":{},"41":{},"42":{},"44":{},"45":{},"49":{},"51":{},"57":{}},"component":{}}],["name_",{"_index":1849,"title":{},"name":{},"text":{"42":{}},"component":{}}],["nativ",{"_index":555,"title":{},"name":{},"text":{"14":{},"29":{},"33":{},"35":{}},"component":{}}],["navig",{"_index":486,"title":{},"name":{},"text":{"13":{}},"component":{}}],["near",{"_index":1153,"title":{},"name":{},"text":{"22":{}},"component":{}}],["necessari",{"_index":328,"title":{},"name":{},"text":{"9":{},"20":{}},"component":{}}],["necessarili",{"_index":1708,"title":{},"name":{},"text":{"35":{},"44":{}},"component":{}}],["need",{"_index":92,"title":{"29-1":{},"29-2":{}},"name":{},"text":{"7":{},"13":{},"14":{},"15":{},"20":{},"22":{},"24":{},"29":{},"30":{},"32":{},"33":{},"35":{},"41":{},"51":{},"53":{},"54":{},"56":{}},"component":{}}],["neq",{"_index":2400,"title":{},"name":{},"text":{"56":{}},"component":{}}],["nest",{"_index":1844,"title":{},"name":{},"text":{"42":{},"45":{}},"component":{}}],["nested_len",{"_index":1843,"title":{},"name":{},"text":{"42":{}},"component":{}}],["nethermind",{"_index":771,"title":{},"name":{},"text":{"20":{},"22":{},"25":{},"26":{},"28":{}},"component":{}}],["nethermind.io",{"_index":1416,"title":{},"name":{},"text":{"26":{}},"component":{}}],["network",{"_index":22,"title":{"7-2":{},"14-2":{},"22-64":{}},"name":{},"text":{"4":{},"7":{},"13":{},"14":{},"16":{},"20":{},"21":{},"22":{},"23":{},"24":{},"32":{},"33":{},"51":{},"54":{},"55":{}},"component":{}}],["network’",{"_index":1232,"title":{},"name":{},"text":{"23":{}},"component":{}}],["never",{"_index":1518,"title":{},"name":{},"text":{"29":{},"55":{}},"component":{}}],["new",{"_index":168,"title":{"32":{},"22-49":{},"22-54":{},"30-1":{}},"name":{},"text":{"7":{},"13":{},"14":{},"15":{},"18":{},"20":{},"22":{},"23":{},"24":{},"29":{},"30":{},"32":{},"44":{},"46":{},"47":{},"48":{},"51":{},"52":{},"53":{},"56":{}},"component":{}}],["new_account",{"_index":446,"title":{},"name":{},"text":{"13":{},"14":{},"24":{}},"component":{}}],["new_syntax_test_contract::new_syntax_test_contract::counter_contract::counterdecreas",{"_index":1876,"title":{},"name":{},"text":{"42":{}},"component":{}}],["new_syntax_test_contract::new_syntax_test_contract::counter_contract::counterincreas",{"_index":1874,"title":{},"name":{},"text":{"42":{}},"component":{}}],["new_syntax_test_contract::new_syntax_test_contract::counter_contract::ev",{"_index":1877,"title":{},"name":{},"text":{"42":{}},"component":{}}],["new_syntax_test_contract::new_syntax_test_contract::icountercontract",{"_index":1869,"title":{},"name":{},"text":{"42":{}},"component":{}}],["newer",{"_index":1193,"title":{},"name":{},"text":{"22":{},"56":{}},"component":{}}],["newhead",{"_index":1050,"title":{},"name":{},"text":{"22":{}},"component":{}}],["newli",{"_index":2145,"title":{},"name":{},"text":{"52":{}},"component":{}}],["newton",{"_index":1155,"title":{},"name":{},"text":{"22":{}},"component":{}}],["next",{"_index":455,"title":{},"name":{},"text":{"13":{},"24":{},"29":{},"34":{},"46":{},"47":{},"48":{},"52":{}},"component":{}}],["nft",{"_index":1631,"title":{},"name":{},"text":{"33":{}},"component":{}}],["nice",{"_index":1161,"title":{},"name":{},"text":{"22":{}},"component":{}}],["no_debug_info",{"_index":318,"title":{"9-17":{}},"name":{},"text":{"9":{},"41":{}},"component":{}}],["no_opt_unused_funct",{"_index":321,"title":{"9-20":{}},"name":{},"text":{"9":{}},"component":{}}],["no_wallet",{"_index":266,"title":{},"name":{},"text":{"7":{},"24":{}},"component":{}}],["node",{"_index":697,"title":{"25":{},"28":{}},"name":{},"text":{"17":{},"20":{},"22":{},"25":{},"28":{},"52":{},"56":{}},"component":{}}],["non",{"_index":855,"title":{},"name":{},"text":{"20":{},"22":{},"29":{},"31":{},"56":{}},"component":{}}],["nonc",{"_index":134,"title":{},"name":{},"text":{"7":{},"20":{},"22":{},"24":{},"31":{},"32":{},"33":{},"35":{},"51":{},"52":{},"54":{},"56":{}},"component":{}}],["nonce}}_{\\text{64",{"_index":2141,"title":{},"name":{},"text":{"52":{}},"component":{}}],["none",{"_index":1569,"title":{},"name":{},"text":{"30":{},"46":{},"47":{},"48":{},"56":{}},"component":{}}],["nopan",{"_index":2028,"title":{},"name":{},"text":{"47":{},"48":{}},"component":{}}],["not_receiv",{"_index":281,"title":{"50-2":{}},"name":{},"text":{"7":{},"55":{}},"component":{}}],["notabl",{"_index":1227,"title":{"23-3":{}},"name":{},"text":{},"component":{}}],["notat",{"_index":1495,"title":{},"name":{},"text":{"29":{}},"component":{}}],["note",{"_index":267,"title":{"24":{}},"name":{},"text":{"7":{},"13":{},"14":{},"22":{},"24":{},"29":{},"31":{},"45":{},"46":{},"53":{},"54":{},"55":{},"56":{},"57":{}},"component":{}}],["noth",{"_index":1500,"title":{},"name":{},"text":{"29":{},"53":{}},"component":{}}],["notic",{"_index":986,"title":{},"name":{},"text":{"22":{},"44":{},"53":{}},"component":{}}],["notif",{"_index":1044,"title":{},"name":{},"text":{"22":{}},"component":{}}],["notion",{"_index":1458,"title":{},"name":{},"text":{"29":{}},"component":{}}],["nov",{"_index":1252,"title":{"24-7":{}},"name":{},"text":{},"component":{}}],["novelti",{"_index":1290,"title":{},"name":{},"text":{"24":{}},"component":{}}],["now",{"_index":480,"title":{},"name":{},"text":{"13":{},"14":{},"15":{},"20":{},"22":{},"24":{},"31":{},"33":{},"35":{},"50":{},"53":{},"54":{},"55":{},"56":{}},"component":{}}],["num",{"_index":2158,"title":{},"name":{},"text":{"52":{}},"component":{}}],["num_of_storage_upd",{"_index":2136,"title":{},"name":{},"text":{"52":{}},"component":{}}],["numashex",{"_index":828,"title":{},"name":{},"text":{"20":{}},"component":{}}],["number",{"_index":158,"title":{},"name":{},"text":{"7":{},"9":{},"15":{},"19":{},"21":{},"22":{},"24":{},"35":{},"36":{},"46":{},"47":{},"48":{},"49":{},"51":{},"52":{},"53":{},"56":{}},"component":{}}],["object",{"_index":685,"title":{},"name":{},"text":{"17":{},"41":{},"44":{},"49":{},"51":{}},"component":{}}],["observ",{"_index":2133,"title":{},"name":{},"text":{"52":{}},"component":{}}],["obtain",{"_index":191,"title":{},"name":{},"text":{"7":{},"51":{},"56":{}},"component":{}}],["obviou",{"_index":1463,"title":{},"name":{},"text":{"29":{}},"component":{}}],["obvious",{"_index":2210,"title":{},"name":{},"text":{"53":{}},"component":{}}],["occasion",{"_index":1133,"title":{},"name":{},"text":{"22":{}},"component":{}}],["occupi",{"_index":2211,"title":{},"name":{},"text":{"53":{}},"component":{}}],["occur",{"_index":813,"title":{},"name":{},"text":{"20":{}},"component":{}}],["oct",{"_index":1254,"title":{"24-8":{}},"name":{},"text":{},"component":{}}],["offer",{"_index":688,"title":{},"name":{},"text":{"17":{},"33":{},"35":{},"47":{}},"component":{}}],["offici",{"_index":774,"title":{},"name":{},"text":{"20":{},"22":{}},"component":{}}],["offset",{"_index":1111,"title":{},"name":{},"text":{"22":{},"41":{},"42":{}},"component":{}}],["old",{"_index":1158,"title":{},"name":{},"text":{"22":{},"24":{},"30":{},"46":{},"47":{},"48":{},"51":{}},"component":{}}],["older",{"_index":1070,"title":{},"name":{},"text":{"22":{}},"component":{}}],["omit",{"_index":154,"title":{},"name":{},"text":{"7":{},"20":{},"29":{}},"component":{}}],["on",{"_index":251,"title":{},"name":{},"text":{"7":{},"9":{},"13":{},"15":{},"22":{},"24":{},"29":{},"33":{},"35":{},"41":{},"46":{},"47":{},"48":{},"52":{},"55":{},"57":{}},"component":{}}],["onc",{"_index":524,"title":{},"name":{},"text":{"13":{},"15":{},"22":{},"24":{},"32":{},"34":{},"46":{},"47":{},"48":{},"55":{},"57":{}},"component":{}}],["ongo",{"_index":1261,"title":{},"name":{},"text":{"24":{}},"component":{}}],["onward",{"_index":2013,"title":{},"name":{},"text":{"46":{},"47":{},"48":{}},"component":{}}],["op",{"_index":1378,"title":{},"name":{},"text":{"24":{}},"component":{}}],["open",{"_index":420,"title":{},"name":{},"text":{"13":{},"15":{},"25":{},"26":{},"28":{},"42":{}},"component":{}}],["openzeppelin",{"_index":215,"title":{},"name":{},"text":{"7":{},"13":{},"14":{},"31":{}},"component":{}}],["openzeppelin’",{"_index":563,"title":{},"name":{},"text":{"14":{}},"component":{}}],["oper",{"_index":20,"title":{},"name":{},"text":{"4":{},"7":{},"15":{},"16":{},"17":{},"20":{},"21":{},"22":{},"24":{},"33":{},"35":{},"46":{},"47":{},"48":{},"52":{},"55":{},"56":{}},"component":{}}],["optim",{"_index":364,"title":{},"name":{},"text":{"9":{},"20":{},"21":{},"22":{},"23":{},"24":{}},"component":{}}],["optimis",{"_index":1191,"title":{},"name":{},"text":{"22":{}},"component":{}}],["optimization.if",{"_index":337,"title":{},"name":{},"text":{"9":{}},"component":{}}],["option",{"_index":89,"title":{"9":{},"9-6":{},"15-9":{},"22-63":{}},"name":{"9":{}},"text":{"7":{},"18":{},"20":{},"22":{},"32":{}},"component":{}}],["oracl",{"_index":1796,"title":{"39":{}},"name":{"39":{}},"text":{},"component":{}}],["order",{"_index":408,"title":{},"name":{},"text":{"13":{},"14":{},"21":{},"22":{},"24":{},"27":{},"30":{},"32":{},"36":{},"41":{},"46":{},"51":{},"52":{},"55":{}},"component":{}}],["organ",{"_index":851,"title":{},"name":{},"text":{"20":{},"30":{}},"component":{}}],["orient",{"_index":1898,"title":{},"name":{},"text":{"44":{}},"component":{}}],["origin",{"_index":1971,"title":{},"name":{},"text":{"46":{},"47":{},"48":{},"53":{}},"component":{}}],["os",{"_index":45,"title":{},"name":{},"text":{"4":{},"10":{},"24":{},"41":{},"46":{},"47":{},"48":{},"53":{},"56":{}},"component":{}}],["other",{"_index":1728,"title":{},"name":{},"text":{"36":{}},"component":{}}],["other_contract",{"_index":1545,"title":{},"name":{},"text":{"30":{},"42":{}},"component":{}}],["other_contract_addr",{"_index":1873,"title":{},"name":{},"text":{"42":{}},"component":{}}],["otherwis",{"_index":262,"title":{},"name":{},"text":{"7":{},"24":{},"29":{},"33":{},"41":{},"46":{},"47":{},"48":{},"49":{},"54":{}},"component":{}}],["out",{"_index":1025,"title":{},"name":{},"text":{"22":{},"32":{},"47":{}},"component":{}}],["outlin",{"_index":1647,"title":{},"name":{},"text":{"33":{}},"component":{}}],["output",{"_index":317,"title":{"9-16":{}},"name":{},"text":{"9":{},"13":{},"14":{},"15":{},"22":{},"29":{},"36":{},"41":{},"42":{},"46":{},"47":{},"48":{}},"component":{}}],["output_array",{"_index":1847,"title":{},"name":{},"text":{"42":{}},"component":{}}],["output_builtin",{"_index":2087,"title":{},"name":{},"text":{"50":{}},"component":{}}],["outsid",{"_index":1540,"title":{},"name":{},"text":{"30":{},"42":{}},"component":{}}],["over",{"_index":23,"title":{},"name":{},"text":{"4":{},"16":{},"20":{},"24":{},"29":{},"33":{},"38":{},"49":{},"51":{},"53":{},"54":{}},"component":{}}],["overal",{"_index":2184,"title":{"53-12":{}},"name":{},"text":{},"component":{}}],["overcom",{"_index":1445,"title":{},"name":{},"text":{"29":{}},"component":{}}],["overflow",{"_index":979,"title":{},"name":{},"text":{"22":{}},"component":{}}],["overli",{"_index":234,"title":{},"name":{},"text":{"7":{}},"component":{}}],["overrid",{"_index":1358,"title":{},"name":{},"text":{"24":{}},"component":{}}],["overview",{"_index":593,"title":{"15-1":{},"53-3":{}},"name":{},"text":{},"component":{}}],["own",{"_index":1633,"title":{},"name":{},"text":{"33":{}},"component":{}}],["owner",{"_index":1588,"title":{},"name":{},"text":{"31":{},"35":{},"42":{}},"component":{}}],["p",{"_index":1763,"title":{"37-1":{}},"name":{"37":{}},"text":{"37":{},"38":{},"42":{},"57":{}},"component":{}}],["p1",{"_index":1786,"title":{},"name":{},"text":{"38":{}},"component":{}}],["p2",{"_index":1787,"title":{},"name":{},"text":{"38":{}},"component":{}}],["p3\\right]_x",{"_index":1788,"title":{},"name":{},"text":{"38":{}},"component":{}}],["p=2^{251}+17\\cdot",{"_index":1713,"title":{},"name":{},"text":{"36":{}},"component":{}}],["p]_x",{"_index":1795,"title":{},"name":{},"text":{"38":{}},"component":{}}],["p_0",{"_index":1785,"title":{},"name":{},"text":{"38":{}},"component":{}}],["p_1",{"_index":1791,"title":{},"name":{},"text":{"38":{}},"component":{}}],["p_2",{"_index":1792,"title":{},"name":{},"text":{"38":{}},"component":{}}],["p_3",{"_index":1793,"title":{},"name":{},"text":{"38":{}},"component":{}}],["p_l",{"_index":2394,"title":{},"name":{},"text":{"56":{}},"component":{}}],["p_r",{"_index":2397,"title":{},"name":{},"text":{"56":{}},"component":{}}],["packag",{"_index":225,"title":{},"name":{},"text":{"7":{},"15":{}},"component":{}}],["page",{"_index":1537,"title":{},"name":{},"text":{"30":{}},"component":{}}],["paid",{"_index":2190,"title":{},"name":{},"text":{"53":{},"54":{}},"component":{}}],["pair",{"_index":1635,"title":{},"name":{},"text":{"33":{},"41":{},"57":{}},"component":{}}],["panic",{"_index":1083,"title":{},"name":{},"text":{"22":{}},"component":{}}],["paper",{"_index":1449,"title":{},"name":{},"text":{"29":{}},"component":{}}],["papyru",{"_index":1399,"title":{},"name":{},"text":{"25":{},"28":{}},"component":{}}],["paradigm",{"_index":1367,"title":{},"name":{},"text":{"24":{}},"component":{}}],["parallel",{"_index":783,"title":{},"name":{},"text":{"20":{},"24":{},"33":{}},"component":{}}],["paramet",{"_index":220,"title":{},"name":{},"text":{"7":{},"19":{},"30":{},"36":{},"46":{},"47":{},"48":{},"52":{},"53":{},"54":{},"55":{}},"component":{}}],["parent",{"_index":1005,"title":{},"name":{},"text":{"22":{},"49":{},"56":{}},"component":{}}],["parent_block_hash",{"_index":2062,"title":{},"name":{},"text":{"49":{}},"component":{}}],["part",{"_index":223,"title":{},"name":{},"text":{"7":{},"22":{},"24":{},"29":{},"38":{},"41":{},"45":{},"46":{},"47":{},"48":{},"51":{},"52":{},"53":{},"54":{},"55":{},"56":{},"57":{}},"component":{}}],["parti",{"_index":1601,"title":{},"name":{},"text":{"31":{},"41":{},"52":{}},"component":{}}],["partial",{"_index":1119,"title":{},"name":{},"text":{"22":{}},"component":{}}],["particular",{"_index":1294,"title":{},"name":{},"text":{"24":{},"31":{},"33":{},"47":{},"52":{}},"component":{}}],["pass",{"_index":218,"title":{},"name":{},"text":{"7":{},"13":{},"14":{},"22":{},"43":{},"46":{},"48":{},"50":{},"51":{}},"component":{}}],["passiv",{"_index":1637,"title":{},"name":{},"text":{"33":{}},"component":{}}],["past",{"_index":491,"title":{},"name":{},"text":{"13":{},"35":{}},"component":{}}],["patch",{"_index":856,"title":{},"name":{},"text":{"20":{}},"component":{}}],["path",{"_index":142,"title":{"15-13":{}},"name":{},"text":{"7":{},"9":{},"13":{},"15":{},"17":{},"20":{},"22":{},"29":{},"56":{}},"component":{}}],["path/to/input.cairo",{"_index":1834,"title":{},"name":{},"text":{"42":{}},"component":{}}],["path/to/output.json",{"_index":1835,"title":{},"name":{},"text":{"42":{}},"component":{}}],["path=\"$home/.cairo/target/release:$path",{"_index":672,"title":{},"name":{},"text":{"15":{}},"component":{}}],["path=\"$home/.pyenv/bin:$path",{"_index":620,"title":{},"name":{},"text":{"15":{}},"component":{}}],["pathfind",{"_index":975,"title":{"22":{}},"name":{},"text":{"22":{},"25":{},"28":{},"52":{}},"component":{}}],["pathfinder_getproof",{"_index":1114,"title":{},"name":{},"text":{"22":{}},"component":{}}],["pathfinder_gettransactionstatu",{"_index":1105,"title":{},"name":{},"text":{"22":{}},"component":{}}],["pathfinder_subscribe_newhead",{"_index":1052,"title":{},"name":{},"text":{"22":{}},"component":{}}],["pathfinder_vers",{"_index":976,"title":{},"name":{"22":{}},"text":{"22":{}},"component":{}}],["pathfinder’",{"_index":2180,"title":{},"name":{},"text":{"52":{}},"component":{}}],["patricia",{"_index":895,"title":{"56-4":{}},"name":{},"text":{"20":{},"49":{},"56":{}},"component":{}}],["pay",{"_index":570,"title":{},"name":{},"text":{"14":{},"24":{},"32":{},"33":{},"51":{},"53":{},"54":{}},"component":{}}],["payabl",{"_index":2329,"title":{},"name":{},"text":{"54":{}},"component":{}}],["payload",{"_index":2003,"title":{},"name":{},"text":{"46":{},"47":{},"48":{},"53":{},"54":{}},"component":{}}],["payload.append",{"_index":2045,"title":{},"name":{},"text":{"47":{},"48":{},"54":{}},"component":{}}],["payload.length",{"_index":2305,"title":{},"name":{},"text":{"54":{}},"component":{}}],["payload.span",{"_index":2294,"title":{},"name":{},"text":{"54":{}},"component":{}}],["payload[0",{"_index":2010,"title":{},"name":{},"text":{"46":{},"48":{}},"component":{}}],["payload[1",{"_index":2011,"title":{},"name":{},"text":{"46":{},"48":{}},"component":{}}],["payload_s",{"_index":2002,"title":{},"name":{},"text":{"46":{},"48":{}},"component":{}}],["paymast",{"_index":1661,"title":{},"name":{},"text":{"33":{}},"component":{}}],["payment",{"_index":1676,"title":{"34-1":{}},"name":{},"text":{"35":{}},"component":{}}],["peckshield",{"_index":1419,"title":{},"name":{},"text":{"26":{}},"component":{}}],["peckshield.com",{"_index":1420,"title":{},"name":{},"text":{"26":{}},"component":{}}],["pedersen",{"_index":867,"title":{"36-3":{},"36-6":{}},"name":{},"text":{"20":{},"36":{},"38":{},"41":{},"43":{},"45":{},"49":{},"51":{},"53":{},"54":{},"56":{},"57":{}},"component":{}}],["pedersen_builtin",{"_index":2084,"title":{},"name":{},"text":{"50":{}},"component":{}}],["pedersen_ptr",{"_index":1620,"title":{},"name":{},"text":{"32":{}},"component":{}}],["pend",{"_index":174,"title":{},"name":{},"text":{"7":{},"13":{},"14":{},"22":{},"24":{},"50":{}},"component":{}}],["per",{"_index":784,"title":{},"name":{},"text":{"20":{},"21":{},"22":{},"24":{},"53":{}},"component":{}}],["perform",{"_index":264,"title":{},"name":{},"text":{"7":{},"20":{},"21":{},"22":{},"24":{},"35":{},"53":{},"55":{}},"component":{}}],["permissionless",{"_index":13,"title":{},"name":{},"text":{"4":{},"16":{},"55":{}},"component":{}}],["permut",{"_index":1731,"title":{},"name":{},"text":{"36":{}},"component":{}}],["persist",{"_index":1906,"title":{},"name":{},"text":{"45":{}},"component":{}}],["pertin",{"_index":1220,"title":{},"name":{},"text":{"22":{}},"component":{}}],["pessimist",{"_index":2262,"title":{},"name":{},"text":{"53":{}},"component":{}}],["phase",{"_index":1281,"title":{},"name":{},"text":{"24":{}},"component":{}}],["phone",{"_index":1673,"title":{},"name":{},"text":{"33":{}},"component":{}}],["phone’",{"_index":1669,"title":{},"name":{},"text":{"33":{}},"component":{}}],["phrase",{"_index":1645,"title":{},"name":{},"text":{"33":{}},"component":{}}],["piec",{"_index":492,"title":{},"name":{},"text":{"13":{}},"component":{}}],["pip",{"_index":656,"title":{},"name":{},"text":{"15":{}},"component":{}}],["pipelin",{"_index":1236,"title":{},"name":{},"text":{"23":{},"24":{}},"component":{}}],["place",{"_index":102,"title":{},"name":{},"text":{"7":{},"19":{},"21":{},"35":{},"42":{},"56":{}},"component":{}}],["placehold",{"_index":1904,"title":{},"name":{},"text":{"44":{},"49":{},"51":{}},"component":{}}],["plan",{"_index":1527,"title":{},"name":{},"text":{"29":{},"55":{}},"component":{}}],["playground",{"_index":1894,"title":{},"name":{},"text":{"42":{}},"component":{}}],["pleas",{"_index":414,"title":{},"name":{},"text":{"13":{},"22":{},"24":{}},"component":{}}],["point",{"_index":866,"title":{},"name":{},"text":{"20":{},"24":{},"29":{},"32":{},"35":{},"38":{},"41":{},"42":{},"44":{},"45":{},"54":{},"56":{},"57":{}},"component":{}}],["pointer",{"_index":2006,"title":{},"name":{},"text":{"46":{},"48":{}},"component":{}}],["points_len",{"_index":1841,"title":{},"name":{},"text":{"42":{}},"component":{}}],["poll",{"_index":991,"title":{},"name":{},"text":{"22":{}},"component":{}}],["polynomi",{"_index":1442,"title":{},"name":{},"text":{"29":{}},"component":{}}],["pool",{"_index":1021,"title":{},"name":{},"text":{"22":{}},"component":{}}],["portion",{"_index":2196,"title":{},"name":{},"text":{"53":{}},"component":{}}],["poseidon",{"_index":870,"title":{"36-4":{},"36-7":{}},"name":{},"text":{"20":{},"36":{},"41":{},"51":{},"53":{},"56":{}},"component":{}}],["poseidon_1",{"_index":1732,"title":{},"name":{},"text":{"36":{}},"component":{}}],["poseidon_2",{"_index":1735,"title":{},"name":{},"text":{"36":{}},"component":{}}],["posit",{"_index":306,"title":{"9-4":{}},"name":{},"text":{},"component":{}}],["possess",{"_index":1636,"title":{},"name":{},"text":{"33":{}},"component":{}}],["possibl",{"_index":96,"title":{},"name":{},"text":{"7":{},"22":{},"29":{},"35":{},"42":{},"46":{},"47":{},"48":{},"50":{},"51":{},"53":{},"57":{}},"component":{}}],["post",{"_index":1301,"title":{"52-2":{}},"name":{},"text":{"24":{},"30":{},"47":{}},"component":{}}],["potenti",{"_index":1233,"title":{},"name":{},"text":{"23":{},"32":{},"42":{},"53":{},"54":{}},"component":{}}],["power",{"_index":294,"title":{},"name":{},"text":{"8":{}},"component":{}}],["pprof",{"_index":876,"title":{},"name":{},"text":{"20":{}},"component":{}}],["practic",{"_index":482,"title":{},"name":{},"text":{"13":{},"33":{},"35":{},"46":{},"48":{}},"component":{}}],["pre",{"_index":1216,"title":{"52-5":{},"52-6":{},"52-7":{}},"name":{},"text":{"22":{},"32":{},"51":{},"53":{}},"component":{}}],["precis",{"_index":631,"title":{},"name":{},"text":{"15":{},"54":{}},"component":{}}],["precomput",{"_index":865,"title":{},"name":{},"text":{"20":{}},"component":{}}],["predetermin",{"_index":2220,"title":{},"name":{},"text":{"53":{}},"component":{}}],["predica",{"_index":1470,"title":{},"name":{},"text":{"29":{}},"component":{}}],["predict",{"_index":934,"title":{},"name":{},"text":{"21":{}},"component":{}}],["prefix",{"_index":1128,"title":{},"name":{},"text":{"22":{},"24":{},"30":{},"43":{},"51":{},"54":{},"56":{}},"component":{}}],["preliminari",{"_index":941,"title":{},"name":{},"text":{"21":{}},"component":{}}],["preprocess",{"_index":316,"title":{"9-15":{}},"name":{},"text":{"9":{}},"component":{}}],["preprocessor",{"_index":353,"title":{},"name":{},"text":{"9":{}},"component":{}}],["prerequisit",{"_index":594,"title":{"15-2":{}},"name":{},"text":{"15":{}},"component":{}}],["present",{"_index":703,"title":{},"name":{},"text":{"17":{},"29":{},"53":{}},"component":{}}],["prevent",{"_index":1152,"title":{},"name":{},"text":{"22":{},"23":{},"32":{},"54":{}},"component":{}}],["previou",{"_index":602,"title":{"15-9":{}},"name":{},"text":{"15":{},"20":{},"22":{},"24":{},"30":{},"35":{},"45":{},"52":{},"54":{},"55":{},"56":{}},"component":{}}],["previous",{"_index":514,"title":{},"name":{},"text":{"13":{},"18":{},"22":{},"29":{},"31":{},"35":{},"44":{},"46":{},"47":{},"48":{}},"component":{}}],["price",{"_index":580,"title":{},"name":{},"text":{"14":{},"22":{},"24":{},"35":{},"53":{}},"component":{}}],["primari",{"_index":1072,"title":{},"name":{},"text":{"22":{}},"component":{}}],["primarili",{"_index":1116,"title":{},"name":{},"text":{"22":{}},"component":{}}],["prime",{"_index":314,"title":{"9-13":{}},"name":{},"text":{"9":{}},"component":{}}],["privat",{"_index":227,"title":{},"name":{},"text":{"7":{},"33":{}},"component":{}}],["problem",{"_index":1468,"title":{},"name":{},"text":{"29":{}},"component":{}}],["proce",{"_index":1234,"title":{},"name":{},"text":{"23":{},"34":{},"52":{},"56":{}},"component":{}}],["proceed",{"_index":577,"title":{},"name":{},"text":{"14":{}},"component":{}}],["process",{"_index":439,"title":{},"name":{},"text":{"13":{},"22":{},"23":{},"33":{},"35":{},"55":{}},"component":{}}],["produc",{"_index":512,"title":{},"name":{},"text":{"13":{},"35":{},"41":{},"49":{}},"component":{}}],["product",{"_index":932,"title":{},"name":{},"text":{"21":{}},"component":{}}],["profil",{"_index":877,"title":{},"name":{},"text":{"20":{}},"component":{}}],["program",{"_index":355,"title":{},"name":{},"text":{"9":{},"10":{},"15":{},"21":{},"29":{},"33":{},"41":{},"44":{},"46":{},"47":{},"48":{},"53":{}},"component":{}}],["program_hash",{"_index":1825,"title":{},"name":{},"text":{"41":{}},"component":{}}],["programm",{"_index":1654,"title":{},"name":{},"text":{"33":{}},"component":{}}],["program’",{"_index":342,"title":{},"name":{},"text":{"9":{}},"component":{}}],["project",{"_index":1404,"title":{},"name":{},"text":{"26":{}},"component":{}}],["prompt",{"_index":613,"title":{},"name":{},"text":{"15":{}},"component":{}}],["proof",{"_index":42,"title":{"40":{}},"name":{"40":{}},"text":{"4":{},"22":{},"29":{},"45":{},"51":{},"52":{},"53":{},"54":{},"55":{},"56":{}},"component":{}}],["proof’",{"_index":2004,"title":{},"name":{},"text":{"46":{},"47":{},"48":{}},"component":{}}],["properli",{"_index":478,"title":{},"name":{},"text":{"13":{},"22":{}},"component":{}}],["properti",{"_index":1455,"title":{},"name":{},"text":{"29":{},"35":{}},"component":{}}],["propos",{"_index":1231,"title":{},"name":{},"text":{"23":{},"31":{},"33":{}},"component":{}}],["protect",{"_index":1584,"title":{"31-1":{}},"name":{},"text":{"31":{},"33":{},"35":{},"54":{}},"component":{}}],["protocol",{"_index":375,"title":{},"name":{},"text":{"10":{},"14":{},"24":{},"25":{},"28":{},"31":{},"33":{},"35":{},"49":{},"51":{},"54":{}},"component":{}}],["protocol_vers",{"_index":2069,"title":{},"name":{},"text":{"49":{}},"component":{}}],["provabl",{"_index":1476,"title":{},"name":{},"text":{"29":{}},"component":{}}],["prove",{"_index":1450,"title":{"55-6":{},"55-9":{}},"name":{},"text":{"29":{},"36":{},"53":{},"54":{},"55":{},"56":{}},"component":{}}],["proven",{"_index":1438,"title":{},"name":{},"text":{"29":{}},"component":{}}],["prover",{"_index":1351,"title":{},"name":{},"text":{"24":{},"29":{},"34":{},"53":{},"55":{},"56":{}},"component":{}}],["provid",{"_index":217,"title":{"26":{},"13-1":{},"14-3":{}},"name":{},"text":{"7":{},"13":{},"15":{},"17":{},"22":{},"23":{},"25":{},"26":{},"27":{},"28":{},"31":{},"32":{},"46":{},"47":{},"48":{},"52":{},"56":{}},"component":{}}],["proxi",{"_index":973,"title":{"22-65":{}},"name":{},"text":{"22":{},"46":{},"48":{}},"component":{}}],["pscott",{"_index":1165,"title":{},"name":{},"text":{"22":{}},"component":{}}],["public",{"_index":449,"title":{},"name":{},"text":{"13":{},"14":{},"33":{},"47":{},"51":{}},"component":{}}],["publish",{"_index":1008,"title":{},"name":{},"text":{"22":{},"35":{}},"component":{}}],["pull",{"_index":778,"title":{},"name":{},"text":{"20":{}},"component":{}}],["purpos",{"_index":239,"title":{},"name":{},"text":{"7":{},"10":{},"22":{},"31":{},"35":{},"48":{}},"component":{}}],["put",{"_index":1329,"title":{},"name":{},"text":{"24":{}},"component":{}}],["pyenv",{"_index":622,"title":{},"name":{},"text":{"15":{}},"component":{}}],["python",{"_index":431,"title":{"15-4":{},"22-44":{}},"name":{},"text":{"13":{},"14":{},"15":{},"22":{},"36":{},"51":{},"52":{}},"component":{}}],["python3.7",{"_index":1355,"title":{},"name":{},"text":{"24":{}},"component":{}}],["python3.9",{"_index":608,"title":{},"name":{},"text":{"15":{},"24":{}},"component":{}}],["q_1",{"_index":2268,"title":{},"name":{},"text":{"53":{}},"component":{}}],["q_i",{"_index":2280,"title":{},"name":{},"text":{"53":{}},"component":{}}],["q_t",{"_index":2269,"title":{},"name":{},"text":{"53":{}},"component":{}}],["queri",{"_index":254,"title":{},"name":{},"text":{"7":{},"22":{}},"component":{}}],["quest",{"_index":710,"title":{},"name":{},"text":{"17":{}},"component":{}}],["question",{"_index":1690,"title":{},"name":{},"text":{"35":{}},"component":{}}],["quickli",{"_index":541,"title":{},"name":{},"text":{"13":{}},"component":{}}],["quickstart",{"_index":416,"title":{},"name":{},"text":{"13":{}},"component":{}}],["quit",{"_index":1212,"title":{},"name":{},"text":{"22":{}},"component":{}}],["r",{"_index":1343,"title":{},"name":{},"text":{"24":{},"56":{}},"component":{}}],["r=h",{"_index":2403,"title":{},"name":{},"text":{"56":{}},"component":{}}],["rais",{"_index":1965,"title":{},"name":{},"text":{"46":{},"47":{},"48":{},"53":{}},"component":{}}],["ran",{"_index":1680,"title":{},"name":{},"text":{"34":{}},"component":{}}],["random",{"_index":187,"title":{},"name":{},"text":{"7":{},"51":{}},"component":{}}],["rang",{"_index":1027,"title":{"36-1":{}},"name":{},"text":{"22":{},"37":{},"45":{},"47":{},"53":{}},"component":{}}],["range_check_builtin",{"_index":2085,"title":{},"name":{},"text":{"50":{}},"component":{}}],["range_check_ptr",{"_index":1622,"title":{},"name":{},"text":{"32":{}},"component":{}}],["rapidli",{"_index":1091,"title":{},"name":{},"text":{"22":{}},"component":{}}],["ratio",{"_index":1303,"title":{},"name":{},"text":{"24":{}},"component":{}}],["rc0",{"_index":1047,"title":{},"name":{},"text":{"22":{},"24":{}},"component":{}}],["rc1",{"_index":881,"title":{},"name":{},"text":{"20":{}},"component":{}}],["re",{"_index":1194,"title":{},"name":{},"text":{"22":{},"24":{},"42":{},"45":{},"54":{}},"component":{}}],["reach",{"_index":462,"title":{},"name":{},"text":{"13":{},"14":{},"53":{}},"component":{}}],["read",{"_index":112,"title":{"21-4":{}},"name":{},"text":{"7":{},"17":{},"21":{},"22":{},"45":{},"46":{},"47":{},"48":{}},"component":{}}],["readabl",{"_index":854,"title":{},"name":{},"text":{"20":{}},"component":{}}],["readm",{"_index":1157,"title":{},"name":{},"text":{"22":{}},"component":{}}],["realiz",{"_index":2218,"title":{},"name":{},"text":{"53":{}},"component":{}}],["reason",{"_index":1241,"title":{},"name":{},"text":{"23":{},"50":{},"54":{},"56":{}},"component":{}}],["recal",{"_index":2202,"title":{},"name":{},"text":{"53":{}},"component":{}}],["receipt",{"_index":258,"title":{"50-7":{}},"name":{},"text":{"7":{},"20":{},"22":{},"50":{},"57":{}},"component":{}}],["receiv",{"_index":248,"title":{"50-3":{}},"name":{},"text":{"7":{},"13":{},"22":{},"32":{},"34":{},"46":{},"47":{},"48":{},"50":{},"53":{},"54":{},"55":{}},"component":{}}],["recent",{"_index":716,"title":{},"name":{},"text":{"18":{},"53":{}},"component":{}}],["recepi",{"_index":2360,"title":{},"name":{},"text":{"55":{}},"component":{}}],["recipi",{"_index":247,"title":{},"name":{},"text":{"7":{},"42":{},"54":{},"55":{}},"component":{}}],["recipient’",{"_index":2005,"title":{},"name":{},"text":{"46":{},"47":{},"48":{}},"component":{}}],["recognit",{"_index":1668,"title":{},"name":{},"text":{"33":{}},"component":{}}],["recommend",{"_index":581,"title":{},"name":{},"text":{"14":{},"22":{},"25":{},"28":{},"30":{},"46":{},"48":{}},"component":{}}],["reconstruct",{"_index":2134,"title":{},"name":{},"text":{"52":{}},"component":{}}],["record",{"_index":2308,"title":{},"name":{},"text":{"54":{},"55":{}},"component":{}}],["recoveri",{"_index":1663,"title":{},"name":{},"text":{"33":{}},"component":{}}],["recurs",{"_index":1348,"title":{},"name":{},"text":{"24":{},"56":{}},"component":{}}],["reduc",{"_index":944,"title":{},"name":{},"text":{"21":{},"24":{},"55":{}},"component":{}}],["reduct",{"_index":822,"title":{},"name":{},"text":{"20":{}},"component":{}}],["redund",{"_index":1999,"title":{},"name":{},"text":{"46":{},"48":{}},"component":{}}],["ref",{"_index":1554,"title":{},"name":{},"text":{"30":{},"42":{}},"component":{}}],["ref_block_explor",{"_index":1427,"title":{},"name":{"27":{}},"text":{},"component":{}}],["refactor",{"_index":848,"title":{},"name":{},"text":{"20":{}},"component":{}}],["refer",{"_index":56,"title":{"5":{},"9":{}},"name":{"5":{}},"text":{"7":{},"13":{},"29":{},"31":{},"36":{},"54":{},"55":{}},"component":{}}],["refund",{"_index":2264,"title":{},"name":{},"text":{"53":{}},"component":{}}],["regard",{"_index":1956,"title":{},"name":{},"text":{"46":{},"48":{}},"component":{}}],["regardless",{"_index":1452,"title":{},"name":{},"text":{"29":{},"55":{}},"component":{}}],["regenesi",{"_index":1821,"title":{},"name":{},"text":{"41":{}},"component":{}}],["regular",{"_index":917,"title":{},"name":{},"text":{"21":{},"42":{},"54":{}},"component":{}}],["reject",{"_index":282,"title":{"50-6":{}},"name":{},"text":{"7":{},"22":{},"24":{},"33":{},"50":{}},"component":{}}],["rel",{"_index":255,"title":{},"name":{},"text":{"7":{},"24":{},"53":{}},"component":{}}],["relat",{"_index":374,"title":{},"name":{},"text":{"10":{},"13":{},"22":{},"30":{},"53":{}},"component":{}}],["relax",{"_index":829,"title":{},"name":{},"text":{"20":{}},"component":{}}],["releas",{"_index":663,"title":{"22-70":{}},"name":{},"text":{"15":{},"18":{},"20":{},"22":{},"30":{},"51":{}},"component":{}}],["relev",{"_index":170,"title":{},"name":{},"text":{"7":{},"54":{},"55":{}},"component":{}}],["reli",{"_index":1206,"title":{},"name":{},"text":{"22":{}},"component":{}}],["reliabl",{"_index":1396,"title":{},"name":{},"text":{"25":{},"28":{}},"component":{}}],["relianc",{"_index":38,"title":{},"name":{},"text":{"4":{}},"component":{}}],["remain",{"_index":933,"title":{},"name":{},"text":{"21":{},"35":{},"53":{}},"component":{}}],["remov",{"_index":291,"title":{"18":{},"18-2":{},"20-22":{},"22-42":{}},"name":{},"text":{"8":{},"18":{},"20":{},"22":{},"24":{},"51":{}},"component":{}}],["renam",{"_index":884,"title":{},"name":{},"text":{"20":{},"22":{},"24":{}},"component":{}}],["render",{"_index":2326,"title":{},"name":{},"text":{"54":{}},"component":{}}],["reorg",{"_index":800,"title":{},"name":{},"text":{"20":{},"22":{}},"component":{}}],["reorgan",{"_index":803,"title":{},"name":{},"text":{"20":{}},"component":{}}],["repeatedli",{"_index":2325,"title":{},"name":{},"text":{"54":{}},"component":{}}],["replac",{"_index":721,"title":{"30-6":{}},"name":{},"text":{"18":{},"24":{},"29":{},"30":{},"46":{},"47":{},"48":{},"49":{},"51":{},"52":{}},"component":{}}],["replace_class",{"_index":1295,"title":{"46-76":{},"47-44":{},"48-15":{}},"name":{},"text":{"24":{},"46":{},"47":{},"48":{}},"component":{}}],["replace_class_syscal",{"_index":2046,"title":{},"name":{},"text":{"47":{},"48":{}},"component":{}}],["replay",{"_index":1583,"title":{"31-1":{}},"name":{},"text":{"31":{},"33":{}},"component":{}}],["repo",{"_index":2181,"title":{},"name":{},"text":{"52":{}},"component":{}}],["report",{"_index":382,"title":{},"name":{},"text":{"10":{}},"component":{}}],["repositori",{"_index":604,"title":{"15-12":{}},"name":{},"text":{"20":{},"22":{},"42":{},"43":{}},"component":{}}],["repres",{"_index":84,"title":{},"name":{},"text":{"7":{},"14":{},"30":{},"41":{},"51":{},"53":{},"55":{},"56":{}},"component":{}}],["represent",{"_index":752,"title":{},"name":{},"text":{"19":{},"24":{},"29":{},"33":{},"42":{},"56":{}},"component":{}}],["reproduc",{"_index":2408,"title":{},"name":{},"text":{"56":{}},"component":{}}],["request",{"_index":249,"title":{},"name":{},"text":{"7":{},"20":{},"22":{},"29":{},"46":{},"47":{},"48":{},"55":{}},"component":{}}],["requir",{"_index":571,"title":{"22-44":{}},"name":{},"text":{"14":{},"17":{},"20":{},"22":{},"29":{},"30":{},"33":{},"35":{},"46":{},"47":{},"48":{},"53":{}},"component":{}}],["resembl",{"_index":567,"title":{},"name":{},"text":{"14":{}},"component":{}}],["resid",{"_index":2336,"title":{},"name":{},"text":{"55":{}},"component":{}}],["resolv",{"_index":346,"title":{},"name":{},"text":{"9":{},"20":{}},"component":{}}],["resourc",{"_index":687,"title":{},"name":{},"text":{"17":{},"23":{},"31":{},"35":{},"36":{},"50":{},"53":{}},"component":{}}],["resources/blob/main/audits/cairo%20&%20sharp%20verifiers.pdf",{"_index":397,"title":{},"name":{},"text":{"11":{}},"component":{}}],["resources/blob/main/audits/evm_stark_verifier_v4.0_audit_report.pdf",{"_index":396,"title":{},"name":{},"text":{"11":{}},"component":{}}],["resources/blob/main/audits/stark_cairo%20verifiers%20",{"_index":398,"title":{},"name":{},"text":{"11":{}},"component":{}}],["respect",{"_index":1922,"title":{},"name":{},"text":{"45":{},"51":{},"56":{}},"component":{}}],["respons",{"_index":209,"title":{},"name":{},"text":{"7":{},"24":{},"30":{},"47":{}},"component":{}}],["restart",{"_index":625,"title":{},"name":{},"text":{"15":{}},"component":{}}],["restor",{"_index":1098,"title":{},"name":{},"text":{"22":{}},"component":{}}],["restrict",{"_index":1705,"title":{},"name":{},"text":{"35":{}},"component":{}}],["result",{"_index":820,"title":{},"name":{},"text":{"20":{},"22":{},"24":{},"29":{},"32":{},"33":{},"35":{},"41":{},"54":{},"56":{}},"component":{}}],["resync",{"_index":845,"title":{},"name":{},"text":{"20":{}},"component":{}}],["retdata",{"_index":1978,"title":{},"name":{},"text":{"46":{},"48":{}},"component":{}}],["retdata_s",{"_index":1977,"title":{},"name":{},"text":{"46":{},"48":{}},"component":{}}],["retriev",{"_index":1664,"title":{},"name":{},"text":{"33":{}},"component":{}}],["return",{"_index":122,"title":{"46-6":{},"46-12":{},"46-18":{},"46-24":{},"46-30":{},"46-36":{},"46-42":{},"46-48":{},"46-54":{},"46-61":{},"46-67":{},"46-73":{},"46-80":{},"46-86":{},"46-93":{},"47-4":{},"47-11":{},"47-17":{},"47-28":{},"47-35":{},"47-41":{},"47-48":{},"47-54":{},"47-61":{}},"name":{},"text":{"7":{},"13":{},"15":{},"20":{},"22":{},"24":{},"29":{},"34":{},"45":{},"46":{},"47":{},"48":{}},"component":{}}],["revert",{"_index":1237,"title":{"29-3":{},"35-5":{}},"name":{},"text":{"23":{},"29":{},"31":{},"35":{}},"component":{}}],["review",{"_index":2185,"title":{},"name":{},"text":{"53":{}},"component":{}}],["revis",{"_index":916,"title":{},"name":{},"text":{"21":{}},"component":{}}],["richer",{"_index":1592,"title":{},"name":{},"text":{"31":{}},"component":{}}],["right",{"_index":2282,"title":{},"name":{},"text":{"53":{},"56":{}},"component":{}}],["right\\neq",{"_index":2402,"title":{},"name":{},"text":{"56":{}},"component":{}}],["right]_0",{"_index":1734,"title":{},"name":{},"text":{"36":{}},"component":{}}],["rightarrow",{"_index":1717,"title":{},"name":{},"text":{"36":{}},"component":{}}],["rise",{"_index":1688,"title":{},"name":{},"text":{"35":{}},"component":{}}],["risk",{"_index":2318,"title":{},"name":{},"text":{"54":{},"55":{}},"component":{}}],["roadmap",{"_index":1299,"title":{},"name":{},"text":{"24":{},"29":{}},"component":{}}],["role",{"_index":1599,"title":{},"name":{},"text":{"31":{}},"component":{}}],["rollup",{"_index":16,"title":{},"name":{},"text":{"4":{},"16":{},"29":{},"52":{}},"component":{}}],["room",{"_index":1530,"title":{},"name":{},"text":{"29":{}},"component":{}}],["root",{"_index":1173,"title":{},"name":{},"text":{"22":{},"24":{},"49":{},"56":{}},"component":{}}],["roughli",{"_index":2237,"title":{},"name":{},"text":{"53":{}},"component":{}}],["rout",{"_index":738,"title":{},"name":{},"text":{"19":{},"22":{}},"component":{}}],["rpc",{"_index":403,"title":{"13-1":{},"22-43":{},"22-71":{}},"name":{"28":{}},"text":{"13":{},"20":{},"22":{},"25":{},"28":{},"42":{}},"component":{}}],["rpc.cor",{"_index":1076,"title":{},"name":{},"text":{"22":{}},"component":{}}],["rpc.msgtol1",{"_index":787,"title":{},"name":{},"text":{"20":{}},"component":{}}],["rpc.websocket",{"_index":1053,"title":{},"name":{},"text":{"22":{}},"component":{}}],["rpc.websocket.capac",{"_index":1055,"title":{},"name":{},"text":{"22":{}},"component":{}}],["rpc/pathfind",{"_index":1189,"title":{},"name":{},"text":{"22":{}},"component":{}}],["rpc/pathfinder/v0.1",{"_index":1210,"title":{},"name":{},"text":{"22":{}},"component":{}}],["rpc/pathfinder/v0.1/pathfinder_getproof",{"_index":1169,"title":{},"name":{},"text":{"22":{}},"component":{}}],["rpc/v0.1",{"_index":1140,"title":{},"name":{},"text":{"22":{}},"component":{}}],["rpc/v0.2",{"_index":1143,"title":{},"name":{},"text":{"22":{}},"component":{}}],["rpc/v0.2/pathfinder_getproof",{"_index":1170,"title":{},"name":{},"text":{"22":{}},"component":{}}],["rpc/v0.3",{"_index":1125,"title":{},"name":{},"text":{"22":{}},"component":{}}],["rs",{"_index":295,"title":{},"name":{},"text":{"8":{}},"component":{}}],["rule",{"_index":2391,"title":{},"name":{},"text":{"56":{}},"component":{}}],["run",{"_index":418,"title":{},"name":{},"text":{"13":{},"14":{},"15":{},"22":{},"24":{},"29":{},"41":{},"42":{},"46":{},"47":{},"48":{},"49":{}},"component":{}}],["runtim",{"_index":1957,"title":{},"name":{},"text":{"46":{},"48":{}},"component":{}}],["rust",{"_index":815,"title":{},"name":{},"text":{"20":{},"22":{},"24":{},"25":{},"28":{}},"component":{}}],["s",{"_index":2365,"title":{},"name":{},"text":{"56":{}},"component":{}}],["s_1+1",{"_index":1760,"title":{},"name":{},"text":{"36":{}},"component":{}}],["s_1+a_1",{"_index":1753,"title":{},"name":{},"text":{"36":{}},"component":{}}],["s_2",{"_index":1747,"title":{},"name":{},"text":{"36":{}},"component":{}}],["s_2+1",{"_index":1758,"title":{},"name":{},"text":{"36":{}},"component":{}}],["s_2+a_2",{"_index":1754,"title":{},"name":{},"text":{"36":{}},"component":{}}],["s_3",{"_index":1748,"title":{},"name":{},"text":{"36":{}},"component":{}}],["safe",{"_index":978,"title":{"29-4":{}},"name":{},"text":{"22":{},"24":{},"29":{}},"component":{}}],["safest",{"_index":39,"title":{},"name":{},"text":{"4":{}},"component":{}}],["sake",{"_index":2200,"title":{},"name":{},"text":{"53":{}},"component":{}}],["salt",{"_index":183,"title":{},"name":{},"text":{"7":{},"32":{},"43":{},"46":{},"47":{},"48":{},"51":{}},"component":{}}],["same",{"_index":156,"title":{},"name":{},"text":{"7":{},"13":{},"22":{},"24":{},"29":{},"42":{},"46":{},"47":{},"48":{},"52":{},"53":{},"54":{},"56":{}},"component":{}}],["sampl",{"_index":466,"title":{},"name":{},"text":{"13":{},"22":{},"24":{}},"component":{}}],["satisfi",{"_index":1475,"title":{},"name":{},"text":{"29":{}},"component":{}}],["satur",{"_index":1023,"title":{},"name":{},"text":{"22":{}},"component":{}}],["save",{"_index":421,"title":{},"name":{},"text":{"13":{},"35":{}},"component":{}}],["say_hello",{"_index":503,"title":{},"name":{},"text":{"13":{}},"component":{}}],["scalabl",{"_index":40,"title":{},"name":{},"text":{"4":{}},"component":{}}],["scalar",{"_index":1379,"title":{},"name":{},"text":{"24":{}},"component":{}}],["scale",{"_index":29,"title":{},"name":{},"text":{"4":{},"16":{}},"component":{}}],["scenario",{"_index":1614,"title":{},"name":{},"text":{"32":{},"54":{}},"component":{}}],["schema",{"_index":1891,"title":{},"name":{},"text":{"42":{}},"component":{}}],["scheme",{"_index":1642,"title":{},"name":{},"text":{"33":{},"35":{},"51":{},"56":{}},"component":{}}],["scope",{"_index":1954,"title":{},"name":{},"text":{"46":{},"47":{},"48":{}},"component":{}}],["scratch",{"_index":693,"title":{},"name":{},"text":{"17":{}},"component":{}}],["script",{"_index":1326,"title":{},"name":{},"text":{"24":{},"52":{}},"component":{}}],["search",{"_index":1524,"title":{},"name":{},"text":{"29":{}},"component":{}}],["second",{"_index":1615,"title":{},"name":{},"text":{"32":{},"33":{},"47":{},"52":{}},"component":{}}],["secp",{"_index":1349,"title":{},"name":{},"text":{"24":{}},"component":{}}],["section",{"_index":285,"title":{},"name":{},"text":{"7":{},"13":{},"14":{},"22":{},"34":{},"52":{},"53":{}},"component":{}}],["secur",{"_index":35,"title":{},"name":{},"text":{"4":{},"7":{},"16":{},"17":{},"26":{},"33":{},"47":{}},"component":{}}],["security.extropy.io",{"_index":1415,"title":{},"name":{},"text":{"26":{}},"component":{}}],["securityqq",{"_index":1159,"title":{},"name":{},"text":{"22":{}},"component":{}}],["see",{"_index":301,"title":{},"name":{},"text":{"8":{},"9":{},"13":{},"15":{},"18":{},"20":{},"22":{},"24":{},"27":{},"30":{},"31":{},"32":{},"33":{},"34":{},"36":{},"41":{},"42":{},"43":{},"46":{},"47":{},"48":{},"51":{},"52":{},"53":{},"54":{},"55":{},"56":{},"57":{}},"component":{}}],["seed",{"_index":185,"title":{},"name":{},"text":{"7":{},"33":{}},"component":{}}],["seem",{"_index":1509,"title":{},"name":{},"text":{"29":{}},"component":{}}],["seen",{"_index":1090,"title":{},"name":{},"text":{"22":{},"31":{}},"component":{}}],["segment",{"_index":1932,"title":{},"name":{},"text":{"45":{}},"component":{}}],["select",{"_index":690,"title":{"22-64":{}},"name":{},"text":{"17":{},"22":{},"33":{},"34":{}},"component":{}}],["selector",{"_index":1320,"title":{},"name":{},"text":{"24":{},"41":{},"46":{},"47":{},"48":{},"54":{}},"component":{}}],["self",{"_index":1553,"title":{},"name":{},"text":{"30":{},"32":{},"42":{}},"component":{}}],["self.counter.read",{"_index":1571,"title":{},"name":{},"text":{"30":{},"42":{}},"component":{}}],["self.counter.writ",{"_index":1884,"title":{},"name":{},"text":{"42":{}},"component":{}}],["self.emit",{"_index":1582,"title":{},"name":{},"text":{"30":{},"42":{}},"component":{}}],["self.other_contract.read",{"_index":1885,"title":{},"name":{},"text":{"42":{}},"component":{}}],["sem",{"_index":857,"title":{},"name":{},"text":{"20":{}},"component":{}}],["semant",{"_index":1448,"title":{},"name":{},"text":{"29":{},"44":{}},"component":{}}],["send",{"_index":124,"title":{},"name":{},"text":{"7":{},"13":{},"14":{},"18":{},"24":{},"29":{},"32":{},"33":{},"35":{},"46":{},"47":{},"48":{},"51":{},"52":{},"54":{},"55":{},"56":{}},"component":{}}],["send_message_to_l1",{"_index":1950,"title":{"46-69":{},"47-37":{},"48-14":{}},"name":{},"text":{"46":{},"48":{},"53":{},"54":{}},"component":{}}],["send_message_to_l1_syscal",{"_index":2044,"title":{},"name":{},"text":{"47":{},"48":{},"54":{}},"component":{}}],["send_message_to_l1{syscall_ptr",{"_index":2001,"title":{},"name":{},"text":{"46":{},"48":{}},"component":{}}],["sender",{"_index":246,"title":{},"name":{},"text":{"7":{},"20":{},"42":{},"46":{},"47":{},"48":{},"51":{},"53":{},"54":{},"55":{}},"component":{}}],["sender_address",{"_index":2106,"title":{},"name":{},"text":{"51":{}},"component":{}}],["sendmessagetol2",{"_index":2307,"title":{},"name":{},"text":{"54":{}},"component":{}}],["sent",{"_index":473,"title":{},"name":{},"text":{"13":{},"14":{},"24":{},"31":{},"34":{},"50":{},"51":{},"52":{},"53":{},"54":{},"56":{}},"component":{}}],["separ",{"_index":345,"title":{},"name":{},"text":{"9":{},"22":{},"24":{},"29":{},"35":{},"41":{},"44":{},"47":{},"53":{},"57":{}},"component":{}}],["sept",{"_index":1256,"title":{"24-9":{}},"name":{},"text":{},"component":{}}],["sequenc",{"_index":126,"title":{},"name":{},"text":{"7":{},"19":{},"21":{},"22":{},"23":{},"24":{},"29":{},"32":{},"34":{},"35":{},"46":{},"48":{},"49":{},"50":{},"53":{},"54":{},"55":{}},"component":{}}],["sequencer_address",{"_index":1967,"title":{},"name":{},"text":{"46":{},"48":{},"49":{}},"component":{}}],["sequencer’",{"_index":1270,"title":{},"name":{},"text":{"24":{}},"component":{}}],["sequenti",{"_index":1319,"title":{},"name":{},"text":{"24":{},"31":{},"33":{}},"component":{}}],["serd",{"_index":1576,"title":{},"name":{},"text":{"30":{}},"component":{}}],["serial",{"_index":1186,"title":{},"name":{},"text":{"22":{},"41":{},"42":{}},"component":{}}],["serv",{"_index":677,"title":{},"name":{},"text":{"17":{},"22":{},"31":{}},"component":{}}],["server",{"_index":1082,"title":{},"name":{},"text":{"22":{}},"component":{}}],["servic",{"_index":805,"title":{"25":{},"26":{},"28":{}},"name":{"25":{}},"text":{"20":{},"25":{},"26":{},"28":{},"35":{},"46":{},"47":{},"48":{}},"component":{}}],["session",{"_index":423,"title":{},"name":{},"text":{"13":{}},"component":{}}],["set",{"_index":61,"title":{"14":{},"15":{},"7-2":{},"7-3":{},"13-1":{},"13-2":{},"13-3":{},"14-2":{},"15-12":{}},"name":{},"text":{"7":{},"13":{},"14":{},"15":{},"22":{},"24":{},"35":{},"46":{},"47":{},"48":{},"52":{},"56":{}},"component":{}}],["setup",{"_index":553,"title":{},"name":{},"text":{"14":{},"22":{}},"component":{}}],["sever",{"_index":816,"title":{},"name":{},"text":{"20":{},"22":{},"24":{},"52":{}},"component":{}}],["sharp",{"_index":390,"title":{},"name":{},"text":{"11":{}},"component":{}}],["shell",{"_index":673,"title":{},"name":{},"text":{"15":{}},"component":{}}],["shift\\_point",{"_index":1790,"title":{},"name":{},"text":{"38":{}},"component":{}}],["short",{"_index":1289,"title":{},"name":{},"text":{"24":{},"29":{},"35":{}},"component":{}}],["shortli",{"_index":1698,"title":{},"name":{},"text":{"35":{}},"component":{}}],["shouldn’t",{"_index":2152,"title":{},"name":{},"text":{"52":{}},"component":{}}],["show",{"_index":331,"title":{},"name":{},"text":{"9":{},"52":{},"56":{}},"component":{}}],["shrame",{"_index":1058,"title":{},"name":{},"text":{"22":{}},"component":{}}],["shutdown",{"_index":890,"title":{},"name":{},"text":{"20":{}},"component":{}}],["sibl",{"_index":2405,"title":{},"name":{},"text":{"56":{}},"component":{}}],["sierra",{"_index":824,"title":{"29":{},"29-2":{}},"name":{"29":{}},"text":{"20":{},"22":{},"24":{},"29":{},"41":{},"56":{}},"component":{}}],["sierra_program_hash",{"_index":1813,"title":{},"name":{},"text":{"41":{}},"component":{}}],["sierra’",{"_index":1519,"title":{},"name":{},"text":{"29":{}},"component":{}}],["sierra→casm",{"_index":1502,"title":{},"name":{},"text":{"29":{},"51":{},"56":{}},"component":{}}],["sign",{"_index":212,"title":{},"name":{},"text":{"7":{},"22":{},"24":{},"33":{},"41":{},"56":{}},"component":{}}],["signatur",{"_index":132,"title":{"51-17":{}},"name":{},"text":{"7":{},"13":{},"14":{},"15":{},"22":{},"24":{},"30":{},"31":{},"32":{},"33":{},"35":{},"46":{},"48":{},"49":{},"51":{},"53":{}},"component":{}}],["signature_inform",{"_index":160,"title":{},"name":{},"text":{"7":{}},"component":{}}],["signaturebuiltin",{"_index":1626,"title":{},"name":{},"text":{"32":{}},"component":{}}],["signed=fals",{"_index":2127,"title":{},"name":{},"text":{"51":{}},"component":{}}],["signific",{"_index":2382,"title":{},"name":{},"text":{"56":{}},"component":{}}],["significantli",{"_index":1243,"title":{},"name":{},"text":{"23":{}},"component":{}}],["silent",{"_index":1131,"title":{},"name":{},"text":{"22":{}},"component":{}}],["similar",{"_index":660,"title":{},"name":{},"text":{"15":{},"22":{},"24":{},"29":{},"31":{},"35":{}},"component":{}}],["simpl",{"_index":543,"title":{},"name":{},"text":{"13":{},"14":{},"22":{},"29":{},"33":{},"35":{},"53":{}},"component":{}}],["simpli",{"_index":1504,"title":{},"name":{},"text":{"29":{}},"component":{}}],["simplic",{"_index":2198,"title":{},"name":{},"text":{"53":{},"55":{}},"component":{}}],["simplifi",{"_index":1677,"title":{"34":{}},"name":{},"text":{},"component":{}}],["simplified_transaction_flow",{"_index":1678,"title":{},"name":{"34":{}},"text":{},"component":{}}],["simul",{"_index":550,"title":{"14-6":{}},"name":{},"text":{"14":{},"22":{}},"component":{}}],["singl",{"_index":85,"title":{},"name":{},"text":{"7":{},"21":{},"24":{},"35":{},"45":{},"47":{},"48":{},"52":{},"53":{},"55":{},"56":{},"57":{}},"component":{}}],["size",{"_index":343,"title":{"21-3":{}},"name":{},"text":{"9":{},"21":{},"24":{},"42":{},"45":{},"46":{},"48":{},"53":{},"56":{},"57":{}},"component":{}}],["sketch",{"_index":2364,"title":{},"name":{},"text":{"56":{}},"component":{}}],["skill",{"_index":483,"title":{},"name":{},"text":{"13":{}},"component":{}}],["skip",{"_index":2080,"title":{},"name":{},"text":{"50":{},"53":{},"56":{}},"component":{}}],["slightli",{"_index":562,"title":{},"name":{},"text":{"14":{}},"component":{}}],["slot",{"_index":1702,"title":{},"name":{},"text":{"35":{},"45":{},"53":{}},"component":{}}],["slow",{"_index":1039,"title":{},"name":{},"text":{"22":{}},"component":{}}],["small",{"_index":574,"title":{},"name":{},"text":{"14":{}},"component":{}}],["smart",{"_index":433,"title":{},"name":{},"text":{"13":{},"15":{},"17":{},"18":{},"24":{},"29":{},"31":{},"33":{},"35":{},"46":{},"47":{},"48":{},"51":{}},"component":{}}],["smooth",{"_index":1286,"title":{},"name":{},"text":{"24":{}},"component":{}}],["sn\\_keccak",{"_index":1716,"title":{},"name":{},"text":{"36":{},"51":{}},"component":{}}],["sn_goerli",{"_index":2129,"title":{},"name":{},"text":{"51":{}},"component":{}}],["sn_goerli2",{"_index":2130,"title":{},"name":{},"text":{"51":{}},"component":{}}],["sn_keccak",{"_index":1923,"title":{},"name":{},"text":{"45":{},"51":{}},"component":{}}],["sn_main",{"_index":2128,"title":{},"name":{},"text":{"51":{}},"component":{}}],["snip",{"_index":1595,"title":{},"name":{},"text":{"31":{}},"component":{}}],["snippet",{"_index":1498,"title":{},"name":{},"text":{"29":{},"51":{}},"component":{}}],["social",{"_index":1662,"title":{},"name":{},"text":{"33":{}},"component":{}}],["soft",{"_index":1187,"title":{},"name":{},"text":{"22":{}},"component":{}}],["softwar",{"_index":629,"title":{},"name":{},"text":{"15":{}},"component":{}}],["solid",{"_index":388,"title":{},"name":{},"text":{"11":{}},"component":{}}],["solut",{"_index":1469,"title":{},"name":{},"text":{"29":{},"33":{}},"component":{}}],["solv",{"_index":1307,"title":{},"name":{},"text":{"24":{},"29":{}},"component":{}}],["somehow",{"_index":1699,"title":{},"name":{},"text":{"35":{}},"component":{}}],["someon",{"_index":518,"title":{},"name":{},"text":{"13":{}},"component":{}}],["someth",{"_index":467,"title":{},"name":{},"text":{"13":{}},"component":{}}],["sometim",{"_index":1117,"title":{},"name":{},"text":{"22":{},"33":{}},"component":{}}],["soon",{"_index":79,"title":{},"name":{},"text":{"7":{},"18":{}},"component":{}}],["sourc",{"_index":360,"title":{},"name":{},"text":{"9":{},"15":{},"22":{},"25":{},"28":{},"41":{}},"component":{}}],["space",{"_index":149,"title":{},"name":{},"text":{"7":{},"45":{}},"component":{}}],["spam",{"_index":945,"title":{},"name":{},"text":{"21":{},"22":{}},"component":{}}],["span",{"_index":2034,"title":{},"name":{},"text":{"47":{},"48":{}},"component":{}}],["spars",{"_index":2406,"title":{},"name":{},"text":{"56":{}},"component":{}}],["spec",{"_index":1892,"title":{},"name":{},"text":{"42":{},"53":{}},"component":{}}],["specif",{"_index":216,"title":{"42-4":{},"56-5":{}},"name":{},"text":{"7":{},"15":{},"17":{},"22":{},"24":{},"35":{},"36":{},"42":{},"47":{},"51":{},"53":{},"55":{},"56":{}},"component":{}}],["specifi",{"_index":157,"title":{},"name":{},"text":{"7":{},"22":{},"24":{},"42":{},"51":{},"53":{},"54":{},"56":{}},"component":{}}],["specs/tree/v0.3.0",{"_index":883,"title":{},"name":{},"text":{"20":{}},"component":{}}],["spender",{"_index":1863,"title":{},"name":{},"text":{"42":{}},"component":{}}],["split",{"_index":1280,"title":{},"name":{},"text":{"24":{}},"component":{}}],["spong",{"_index":1729,"title":{},"name":{},"text":{"36":{}},"component":{}}],["squeez",{"_index":2224,"title":{},"name":{},"text":{"53":{}},"component":{}}],["srivastav",{"_index":1059,"title":{},"name":{},"text":{"22":{}},"component":{}}],["stabl",{"_index":913,"title":{},"name":{},"text":{"21":{}},"component":{}}],["stack",{"_index":386,"title":{},"name":{},"text":{"11":{},"22":{}},"component":{}}],["stage",{"_index":197,"title":{},"name":{},"text":{"7":{},"23":{},"34":{},"52":{},"54":{}},"component":{}}],["staknet",{"_index":869,"title":{},"name":{},"text":{"20":{}},"component":{}}],["stand",{"_index":1552,"title":{},"name":{},"text":{"30":{}},"component":{}}],["standalon",{"_index":1886,"title":{},"name":{},"text":{"42":{},"46":{},"47":{},"48":{}},"component":{}}],["standard",{"_index":350,"title":{},"name":{},"text":{"9":{},"14":{},"24":{},"31":{},"56":{}},"component":{}}],["stark",{"_index":44,"title":{"38-1":{}},"name":{"38":{}},"text":{"4":{},"11":{},"24":{},"29":{},"36":{},"38":{},"48":{},"51":{},"55":{}},"component":{}}],["stark/cairo",{"_index":391,"title":{},"name":{},"text":{"11":{}},"component":{}}],["starkgat",{"_index":458,"title":{"55":{},"55-1":{},"55-2":{}},"name":{},"text":{"13":{},"14":{},"55":{}},"component":{}}],["starkli",{"_index":81,"title":{"8":{}},"name":{"8":{}},"text":{"7":{},"8":{},"18":{}},"component":{}}],["starknet",{"_index":12,"title":{"5":{},"9":{},"12":{},"13":{},"14":{},"17":{},"23":{},"27":{},"31":{},"56":{},"57":{},"7-2":{},"7-4":{},"7-5":{},"7-6":{},"7-7":{},"7-8":{},"7-9":{},"7-10":{},"7-11":{},"7-12":{},"7-13":{},"7-14":{},"7-15":{},"7-16":{},"19-1":{},"19-2":{},"19-3":{},"22-72":{},"23-1":{},"24-1":{},"24-2":{},"24-3":{},"24-4":{},"24-5":{},"24-6":{},"24-7":{},"24-8":{},"24-9":{},"24-10":{},"24-11":{},"36-2":{},"55-5":{}},"name":{"9":{},"17":{},"56":{},"57":{}},"text":{"4":{},"7":{},"8":{},"9":{},"10":{},"11":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"35":{},"36":{},"37":{},"41":{},"42":{},"43":{},"44":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"52":{},"53":{},"54":{},"55":{},"56":{}},"component":{}}],["starknet::contract",{"_index":1542,"title":{},"name":{},"text":{"30":{},"42":{}},"component":{}}],["starknet::contractaddress",{"_index":496,"title":{},"name":{},"text":{"13":{},"42":{}},"component":{}}],["starknet::ev",{"_index":1579,"title":{},"name":{},"text":{"30":{},"42":{}},"component":{}}],["starknet::get_caller_address",{"_index":495,"title":{},"name":{},"text":{"13":{}},"component":{}}],["starknet::interfac",{"_index":1536,"title":{"30-6":{}},"name":{},"text":{"30":{},"42":{}},"component":{}}],["starknet::storage_access::storage_base_address_from_felt252",{"_index":2052,"title":{},"name":{},"text":{"47":{},"48":{}},"component":{}}],["starknet::syscalls::emit_event_syscal",{"_index":2420,"title":{},"name":{},"text":{"57":{}},"component":{}}],["starknet::syscalls::storage_read_syscal",{"_index":1910,"title":{},"name":{},"text":{"45":{}},"component":{}}],["starknet::syscalls::storage_write_syscal",{"_index":1911,"title":{},"name":{},"text":{"45":{}},"component":{}}],["starknet_account",{"_index":445,"title":{},"name":{},"text":{"13":{}},"component":{}}],["starknet_adddeclaretransact",{"_index":795,"title":{},"name":{},"text":{"20":{}},"component":{}}],["starknet_adddeployaccounttransact",{"_index":796,"title":{},"name":{},"text":{"20":{}},"component":{}}],["starknet_adddeploytransact",{"_index":1138,"title":{},"name":{},"text":{"22":{}},"component":{}}],["starknet_addinvoketransact",{"_index":797,"title":{},"name":{},"text":{"20":{}},"component":{}}],["starknet_blockhashandnumb",{"_index":901,"title":{},"name":{},"text":{"20":{}},"component":{}}],["starknet_blocknumb",{"_index":900,"title":{},"name":{},"text":{"20":{}},"component":{}}],["starknet_cal",{"_index":793,"title":{},"name":{},"text":{"20":{},"22":{}},"component":{}}],["starknet_chainid",{"_index":899,"title":{},"name":{},"text":{"20":{}},"component":{}}],["starknet_contract_address",{"_index":1895,"title":{},"name":{},"text":{"43":{}},"component":{}}],["starknet_estimatefe",{"_index":794,"title":{},"name":{},"text":{"20":{},"22":{}},"component":{}}],["starknet_estimatemessagefe",{"_index":998,"title":{},"name":{},"text":{"22":{}},"component":{}}],["starknet_ev",{"_index":1190,"title":{},"name":{},"text":{"22":{}},"component":{}}],["starknet_getblocktransactioncount",{"_index":906,"title":{},"name":{},"text":{"20":{}},"component":{}}],["starknet_getblockwithtx",{"_index":903,"title":{},"name":{},"text":{"20":{}},"component":{}}],["starknet_getblockwithtxhash",{"_index":902,"title":{},"name":{},"text":{"20":{}},"component":{}}],["starknet_getclass",{"_index":841,"title":{},"name":{},"text":{"20":{}},"component":{}}],["starknet_getclassat",{"_index":842,"title":{},"name":{},"text":{"20":{}},"component":{}}],["starknet_getclasshashat",{"_index":840,"title":{},"name":{},"text":{"20":{}},"component":{}}],["starknet_getev",{"_index":843,"title":{},"name":{},"text":{"20":{},"22":{},"46":{},"47":{},"48":{}},"component":{}}],["starknet_getnonc",{"_index":838,"title":{},"name":{},"text":{"20":{}},"component":{}}],["starknet_getstateupd",{"_index":908,"title":{},"name":{},"text":{"20":{},"22":{}},"component":{}}],["starknet_getstorageat",{"_index":839,"title":{},"name":{},"text":{"20":{}},"component":{}}],["starknet_gettransactionbyblockidandindex",{"_index":907,"title":{},"name":{},"text":{"20":{}},"component":{}}],["starknet_gettransactionbyhash",{"_index":904,"title":{},"name":{},"text":{"20":{}},"component":{}}],["starknet_gettransactionreceipt",{"_index":905,"title":{},"name":{},"text":{"20":{}},"component":{}}],["starknet_keccak",{"_index":897,"title":{},"name":{},"text":{"20":{},"41":{}},"component":{}}],["starknet_network",{"_index":104,"title":{},"name":{},"text":{"7":{}},"component":{}}],["starknet_network=alpha",{"_index":106,"title":{},"name":{},"text":{"7":{},"13":{},"14":{}},"component":{}}],["starknet_simul",{"_index":1126,"title":{},"name":{},"text":{"22":{}},"component":{}}],["starknet_simulatetransact",{"_index":1034,"title":{},"name":{},"text":{"22":{}},"component":{}}],["starknet_state_v0",{"_index":2369,"title":{},"name":{},"text":{"56":{}},"component":{}}],["starknet_sync",{"_index":827,"title":{},"name":{},"text":{"20":{}},"component":{}}],["starknet_vers",{"_index":1357,"title":{},"name":{},"text":{"24":{}},"component":{}}],["starknet_wallet",{"_index":565,"title":{},"name":{},"text":{"14":{}},"component":{}}],["starknet_wallet=starkware.starknet.wallets.open_zeppelin.openzeppelinaccount",{"_index":221,"title":{},"name":{},"text":{"7":{},"13":{},"14":{}},"component":{}}],["starknet’",{"_index":37,"title":{},"name":{},"text":{"4":{},"16":{},"24":{},"29":{},"31":{},"35":{},"36":{},"46":{},"47":{},"48":{},"51":{},"52":{},"53":{},"55":{},"56":{}},"component":{}}],["starkscan",{"_index":464,"title":{},"name":{},"text":{"13":{},"14":{},"27":{}},"component":{}}],["starkwar",{"_index":290,"title":{},"name":{},"text":{"8":{},"25":{},"28":{},"55":{}},"component":{}}],["starkware.starknet.common.syscal",{"_index":1912,"title":{},"name":{},"text":{"45":{},"57":{}},"component":{}}],["starkware.starknet.wallet",{"_index":226,"title":{},"name":{},"text":{"7":{}},"component":{}}],["starkware’",{"_index":387,"title":{},"name":{},"text":{"11":{},"53":{}},"component":{}}],["start",{"_index":372,"title":{"16":{}},"name":{},"text":{"10":{},"13":{},"17":{},"20":{},"22":{},"23":{},"24":{},"35":{},"45":{},"54":{}},"component":{}}],["startl1tol2messagecancel",{"_index":2321,"title":{},"name":{},"text":{"54":{}},"component":{}}],["state",{"_index":136,"title":{"56":{},"56-1":{}},"name":{"56":{}},"text":{"7":{},"13":{},"20":{},"21":{},"22":{},"24":{},"30":{},"35":{},"36":{},"44":{},"46":{},"47":{},"48":{},"49":{},"51":{},"52":{},"53":{},"54":{},"55":{},"56":{}},"component":{}}],["state_commit",{"_index":2368,"title":{},"name":{},"text":{"56":{}},"component":{}}],["state_mut",{"_index":1857,"title":{},"name":{},"text":{"42":{}},"component":{}}],["statement",{"_index":341,"title":{},"name":{},"text":{"9":{},"24":{},"29":{}},"component":{}}],["statesnapshot",{"_index":837,"title":{},"name":{},"text":{"20":{}},"component":{}}],["static",{"_index":1555,"title":{},"name":{},"text":{"30":{}},"component":{}}],["statu",{"_index":270,"title":{"50-1":{}},"name":{},"text":{"7":{},"13":{},"14":{},"18":{},"22":{},"23":{},"24":{},"46":{},"47":{},"48":{},"50":{},"55":{},"57":{}},"component":{}}],["status",{"_index":280,"title":{},"name":{},"text":{"7":{},"50":{}},"component":{}}],["status_upd",{"_index":1838,"title":{},"name":{},"text":{"42":{}},"component":{}}],["stay",{"_index":2349,"title":{},"name":{},"text":{"55":{}},"component":{}}],["stdout",{"_index":357,"title":{},"name":{},"text":{"9":{}},"component":{}}],["steal",{"_index":1686,"title":{},"name":{},"text":{"35":{}},"component":{}}],["step",{"_index":354,"title":{"21-1":{},"30-1":{},"55-4":{},"55-5":{},"55-6":{},"55-8":{},"55-9":{},"55-10":{}},"name":{},"text":{"9":{},"13":{},"14":{},"15":{},"16":{},"21":{},"24":{},"29":{},"30":{},"32":{},"35":{},"53":{},"54":{},"55":{},"56":{}},"component":{}}],["still",{"_index":718,"title":{},"name":{},"text":{"18":{},"22":{},"24":{},"35":{}},"component":{}}],["stolen",{"_index":1675,"title":{},"name":{},"text":{"33":{}},"component":{}}],["stop",{"_index":352,"title":{},"name":{},"text":{"9":{},"22":{},"29":{}},"component":{}}],["storag",{"_index":6,"title":{"3":{},"40":{},"45":{},"30-3":{},"30-7":{},"45-1":{},"45-2":{},"45-3":{},"53-9":{}},"name":{"40":{},"45":{}},"text":{"7":{},"20":{},"22":{},"24":{},"30":{},"35":{},"42":{},"44":{},"45":{},"46":{},"47":{},"48":{},"52":{},"53":{},"54":{},"56":{}},"component":{}}],["storage_address",{"_index":2053,"title":{},"name":{},"text":{"47":{},"48":{}},"component":{}}],["storage_and_data_structur",{"_index":9,"title":{},"name":{"3":{}},"text":{},"component":{}}],["storage_base_address_from_felt252",{"_index":2054,"title":{},"name":{},"text":{"47":{},"48":{}},"component":{}}],["storage_read",{"_index":1913,"title":{"46-82":{},"47-50":{},"48-16":{}},"name":{},"text":{"45":{},"46":{},"48":{}},"component":{}}],["storage_read_syscal",{"_index":2047,"title":{},"name":{},"text":{"47":{},"48":{}},"component":{}}],["storage_read{syscall_ptr",{"_index":2014,"title":{},"name":{},"text":{"46":{},"48":{}},"component":{}}],["storage_var",{"_index":1916,"title":{},"name":{},"text":{"45":{}},"component":{}}],["storage_writ",{"_index":1909,"title":{"46-89":{},"47-57":{},"48-17":{}},"name":{},"text":{"45":{}},"component":{}}],["storage_write_syscal",{"_index":1907,"title":{},"name":{},"text":{"45":{},"47":{},"48":{}},"component":{}}],["storage_write{syscall_ptr",{"_index":2017,"title":{},"name":{},"text":{"46":{},"48":{}},"component":{}}],["storageaddress",{"_index":2049,"title":{},"name":{},"text":{"47":{},"48":{}},"component":{}}],["store",{"_index":442,"title":{},"name":{},"text":{"13":{},"20":{},"22":{},"54":{},"55":{},"56":{}},"component":{}}],["straightforward",{"_index":1980,"title":{},"name":{},"text":{"46":{},"47":{},"48":{}},"component":{}}],["string",{"_index":188,"title":{},"name":{},"text":{"7":{},"20":{},"22":{},"41":{},"43":{},"46":{},"47":{},"48":{},"51":{},"56":{},"57":{}},"component":{}}],["struct",{"_index":1336,"title":{},"name":{},"text":{"24":{},"30":{},"42":{},"45":{},"47":{},"48":{},"57":{}},"component":{}}],["structur",{"_index":8,"title":{"3":{},"49":{},"33-1":{},"54-2":{},"54-6":{}},"name":{},"text":{"24":{},"31":{},"35":{},"54":{},"56":{}},"component":{}}],["stuck",{"_index":1135,"title":{},"name":{},"text":{"22":{}},"component":{}}],["style",{"_index":1045,"title":{},"name":{},"text":{"22":{}},"component":{}}],["subject",{"_index":915,"title":{},"name":{},"text":{"21":{}},"component":{}}],["submiss",{"_index":2192,"title":{},"name":{},"text":{"53":{}},"component":{}}],["submit",{"_index":1037,"title":{},"name":{},"text":{"22":{},"29":{},"35":{},"51":{},"53":{},"55":{}},"component":{}}],["submitt",{"_index":2285,"title":{},"name":{},"text":{"53":{}},"component":{}}],["subscrib",{"_index":1263,"title":{},"name":{},"text":{"24":{}},"component":{}}],["subscript",{"_index":1049,"title":{},"name":{},"text":{"22":{}},"component":{}}],["subset",{"_index":1477,"title":{},"name":{},"text":{"29":{}},"component":{}}],["substanti",{"_index":987,"title":{},"name":{},"text":{"22":{}},"component":{}}],["substitut",{"_index":1501,"title":{},"name":{},"text":{"29":{}},"component":{}}],["subtracted_valu",{"_index":1867,"title":{},"name":{},"text":{"42":{}},"component":{}}],["subtre",{"_index":2379,"title":{},"name":{},"text":{"56":{}},"component":{}}],["succe",{"_index":2081,"title":{},"name":{},"text":{"50":{}},"component":{}}],["success",{"_index":279,"title":{},"name":{},"text":{"7":{},"10":{},"14":{},"35":{}},"component":{}}],["successfulli",{"_index":536,"title":{},"name":{},"text":{"13":{},"14":{},"29":{},"34":{},"50":{}},"component":{}}],["such",{"_index":434,"title":{},"name":{},"text":{"13":{},"22":{},"29":{},"33":{},"36":{},"42":{},"46":{},"47":{},"48":{},"52":{},"53":{},"54":{},"55":{}},"component":{}}],["sudo",{"_index":649,"title":{},"name":{},"text":{"15":{}},"component":{}}],["suffic",{"_index":575,"title":{},"name":{},"text":{"14":{},"52":{},"56":{}},"component":{}}],["suggest",{"_index":1204,"title":{},"name":{},"text":{"22":{}},"component":{}}],["suitabl",{"_index":2320,"title":{},"name":{},"text":{"54":{}},"component":{}}],["sum\\limits_{i=1}^t",{"_index":2279,"title":{},"name":{},"text":{"53":{}},"component":{}}],["summar",{"_index":1934,"title":{},"name":{},"text":{"45":{}},"component":{}}],["summari",{"_index":1144,"title":{},"name":{},"text":{"22":{},"50":{}},"component":{}}],["super",{"_index":1880,"title":{},"name":{},"text":{"42":{}},"component":{}}],["super::icountercontract",{"_index":1561,"title":{},"name":{},"text":{"30":{},"42":{}},"component":{}}],["suppli",{"_index":271,"title":{},"name":{},"text":{"7":{},"24":{},"41":{},"54":{},"55":{}},"component":{}}],["support",{"_index":48,"title":{"22-72":{}},"name":{},"text":{"4":{},"8":{},"18":{},"20":{},"22":{},"23":{},"24":{},"35":{},"41":{},"42":{},"46":{},"47":{},"48":{},"51":{},"55":{}},"component":{}}],["suppos",{"_index":2223,"title":{},"name":{},"text":{"53":{},"56":{}},"component":{}}],["sure",{"_index":461,"title":{},"name":{},"text":{"13":{},"15":{},"29":{},"35":{}},"component":{}}],["surround",{"_index":1646,"title":{},"name":{},"text":{"33":{}},"component":{}}],["swap",{"_index":1184,"title":{},"name":{},"text":{"22":{}},"component":{}}],["symbol",{"_index":646,"title":{},"name":{},"text":{"15":{},"19":{},"45":{}},"component":{}}],["symbol_",{"_index":1851,"title":{},"name":{},"text":{"42":{}},"component":{}}],["sympi",{"_index":645,"title":{},"name":{},"text":{"15":{}},"component":{}}],["sync",{"_index":812,"title":{},"name":{},"text":{"20":{},"22":{}},"component":{}}],["sync.pol",{"_index":1015,"title":{},"name":{},"text":{"22":{}},"component":{}}],["synchronis",{"_index":898,"title":{},"name":{},"text":{"20":{}},"component":{}}],["sync’d",{"_index":1000,"title":{},"name":{},"text":{"22":{}},"component":{}}],["syntax",{"_index":60,"title":{"30":{},"7-1":{},"30-1":{},"46-3":{},"46-9":{},"46-15":{},"46-21":{},"46-27":{},"46-33":{},"46-39":{},"46-45":{},"46-51":{},"46-58":{},"46-64":{},"46-70":{},"46-77":{},"46-83":{},"46-90":{},"47-2":{},"47-8":{},"47-14":{},"47-20":{},"47-25":{},"47-32":{},"47-38":{},"47-45":{},"47-51":{},"47-58":{}},"name":{"30":{}},"text":{"7":{},"13":{},"24":{},"29":{},"30":{},"46":{},"47":{},"48":{},"57":{}},"component":{}}],["syscal",{"_index":1272,"title":{},"name":{},"text":{"24":{},"43":{},"46":{},"47":{},"48":{},"53":{},"54":{}},"component":{}}],["syscall_ptr",{"_index":1624,"title":{},"name":{},"text":{"32":{}},"component":{}}],["syscallresult",{"_index":2025,"title":{},"name":{},"text":{"47":{},"48":{}},"component":{}}],["syscalls.cairo",{"_index":1959,"title":{},"name":{},"text":{"46":{},"47":{},"48":{}},"component":{}}],["system",{"_index":43,"title":{"46":{},"47":{},"48":{}},"name":{"46":{},"47":{},"48":{}},"text":{"4":{},"7":{},"13":{},"15":{},"18":{},"20":{},"22":{},"24":{},"29":{},"32":{},"36":{},"44":{},"45":{},"46":{},"47":{},"48":{},"56":{},"57":{}},"component":{}}],["t",{"_index":1564,"title":{},"name":{},"text":{"30":{},"35":{},"53":{}},"component":{}}],["tabl",{"_index":887,"title":{},"name":{},"text":{"20":{},"21":{},"24":{},"25":{},"26":{},"27":{},"28":{},"51":{},"54":{}},"component":{}}],["tag",{"_index":159,"title":{},"name":{},"text":{"7":{}},"component":{}}],["tags/v2.0.0",{"_index":669,"title":{},"name":{},"text":{"15":{}},"component":{}}],["tailor",{"_index":706,"title":{},"name":{},"text":{"17":{}},"component":{}}],["take",{"_index":436,"title":{},"name":{},"text":{"13":{},"29":{},"33":{},"35":{},"36":{},"42":{},"44":{},"52":{},"53":{},"54":{}},"component":{}}],["taken",{"_index":1010,"title":{},"name":{},"text":{"22":{},"35":{},"45":{}},"component":{}}],["target",{"_index":2309,"title":{},"name":{},"text":{"54":{},"56":{}},"component":{}}],["tcontractst",{"_index":1551,"title":{},"name":{},"text":{"30":{},"42":{}},"component":{}}],["team",{"_index":1407,"title":{},"name":{},"text":{"26":{},"31":{}},"component":{}}],["technic",{"_index":1354,"title":{},"name":{},"text":{"24":{},"30":{}},"component":{}}],["temporari",{"_index":199,"title":{},"name":{},"text":{"7":{}},"component":{}}],["temporarili",{"_index":1086,"title":{},"name":{},"text":{"22":{}},"component":{}}],["tempvar",{"_index":1492,"title":{},"name":{},"text":{"29":{}},"component":{}}],["term",{"_index":1287,"title":{},"name":{},"text":{"24":{},"47":{},"55":{}},"component":{}}],["termin",{"_index":324,"title":{},"name":{},"text":{"9":{},"13":{},"15":{}},"component":{}}],["test",{"_index":238,"title":{},"name":{},"text":{"7":{},"15":{},"20":{},"24":{},"42":{}},"component":{}}],["testnet",{"_index":93,"title":{"19-2":{},"19-3":{}},"name":{},"text":{"7":{},"13":{},"19":{},"22":{},"24":{},"51":{}},"component":{}}],["testnet2",{"_index":749,"title":{},"name":{},"text":{"19":{},"22":{}},"component":{}}],["text",{"_index":1033,"title":{},"name":{},"text":{"22":{},"56":{}},"component":{}}],["text{cairoresourcefeeweights}_k",{"_index":2243,"title":{},"name":{},"text":{"53":{}},"component":{}}],["text{chain_id",{"_index":2110,"title":{},"name":{},"text":{"51":{},"54":{}},"component":{}}],["text{class_hash",{"_index":2116,"title":{},"name":{},"text":{"51":{},"56":{}},"component":{}}],["text{data_hash",{"_index":2427,"title":{},"name":{},"text":{"57":{}},"component":{}}],["text{declar",{"_index":2115,"title":{},"name":{},"text":{"51":{}},"component":{}}],["text{event_nam",{"_index":2419,"title":{},"name":{},"text":{"57":{}},"component":{}}],["text{from_address",{"_index":2425,"title":{},"name":{},"text":{"57":{}},"component":{}}],["text{gas_price}\\cdot",{"_index":2257,"title":{},"name":{},"text":{"53":{}},"component":{}}],["text{gas_price}\\cdot\\left",{"_index":2272,"title":{},"name":{},"text":{"53":{}},"component":{}}],["text{had",{"_index":1757,"title":{},"name":{},"text":{"36":{}},"component":{}}],["text{hades}:\\mathbb{f}_p^3\\rightarrow\\mathbb{f}_p^3",{"_index":1744,"title":{},"name":{},"text":{"36":{}},"component":{}}],["text{if",{"_index":1755,"title":{},"name":{},"text":{"36":{},"56":{}},"component":{}}],["text{index}_1",{"_index":1816,"title":{},"name":{},"text":{"41":{}},"component":{}}],["text{index}_n",{"_index":1818,"title":{},"name":{},"text":{"41":{}},"component":{}}],["text{invok",{"_index":2109,"title":{},"name":{},"text":{"51":{}},"component":{}}],["text{keys_hash",{"_index":2426,"title":{},"name":{},"text":{"57":{}},"component":{}}],["text{l1_handl",{"_index":2332,"title":{},"name":{},"text":{"54":{}},"component":{}}],["text{nonc",{"_index":2373,"title":{},"name":{},"text":{"56":{}},"component":{}}],["text{offset",{"_index":1828,"title":{},"name":{},"text":{"41":{}},"component":{}}],["text{offset}_1",{"_index":1829,"title":{},"name":{},"text":{"41":{}},"component":{}}],["text{offset}_n",{"_index":1830,"title":{},"name":{},"text":{"41":{}},"component":{}}],["text{otherwis",{"_index":2392,"title":{},"name":{},"text":{"56":{}},"component":{}}],["text{selector",{"_index":1827,"title":{},"name":{},"text":{"41":{}},"component":{}}],["text{selector}_1",{"_index":1815,"title":{},"name":{},"text":{"41":{}},"component":{}}],["text{selector}_n",{"_index":1817,"title":{},"name":{},"text":{"41":{}},"component":{}}],["text{sn_keccak",{"_index":2417,"title":{},"name":{},"text":{"57":{}},"component":{}}],["text{storage_root",{"_index":2372,"title":{},"name":{},"text":{"56":{}},"component":{}}],["text{tracecells}[tx]/l",{"_index":2214,"title":{},"name":{},"text":{"53":{}},"component":{}}],["thank",{"_index":36,"title":{},"name":{},"text":{"4":{},"22":{},"29":{}},"component":{}}],["the`validate_deploy",{"_index":1309,"title":{},"name":{},"text":{"24":{}},"component":{}}],["themselv",{"_index":1211,"title":{},"name":{},"text":{"22":{}},"component":{}}],["theoret",{"_index":1644,"title":{},"name":{},"text":{"33":{}},"component":{}}],["therebi",{"_index":1650,"title":{},"name":{},"text":{"33":{}},"component":{}}],["therefor",{"_index":938,"title":{},"name":{},"text":{"21":{},"22":{},"35":{},"53":{}},"component":{}}],["there’",{"_index":1639,"title":{},"name":{},"text":{"33":{}},"component":{}}],["thing",{"_index":1451,"title":{},"name":{},"text":{"29":{}},"component":{}}],["think",{"_index":1697,"title":{},"name":{},"text":{"35":{},"57":{}},"component":{}}],["third",{"_index":2150,"title":{},"name":{},"text":{"52":{}},"component":{}}],["those",{"_index":1346,"title":{},"name":{},"text":{"24":{},"31":{},"33":{},"51":{},"52":{},"57":{}},"component":{}}],["though",{"_index":1511,"title":{},"name":{},"text":{"29":{},"55":{}},"component":{}}],["three",{"_index":440,"title":{},"name":{},"text":{"13":{},"36":{},"46":{},"47":{},"48":{},"51":{},"53":{},"56":{},"57":{}},"component":{}}],["through",{"_index":172,"title":{},"name":{},"text":{"7":{},"13":{},"16":{},"22":{},"29":{},"30":{},"31":{},"32":{},"33":{},"41":{},"45":{}},"component":{}}],["throughout",{"_index":1715,"title":{},"name":{},"text":{"36":{},"57":{}},"component":{}}],["thu",{"_index":1609,"title":{},"name":{},"text":{"32":{},"35":{},"50":{},"52":{}},"component":{}}],["time",{"_index":419,"title":{},"name":{},"text":{"13":{},"20":{},"21":{},"22":{},"23":{},"24":{},"35":{},"46":{},"47":{},"48":{},"49":{},"53":{},"54":{}},"component":{}}],["timelin",{"_index":1223,"title":{},"name":{},"text":{"22":{}},"component":{}}],["timestamp",{"_index":1004,"title":{},"name":{},"text":{"22":{},"24":{},"46":{},"48":{},"49":{}},"component":{}}],["to_address",{"_index":242,"title":{},"name":{},"text":{"7":{},"46":{},"47":{},"48":{},"54":{}},"component":{}}],["toaddress",{"_index":2302,"title":{},"name":{},"text":{"54":{}},"component":{}}],["today",{"_index":214,"title":{},"name":{},"text":{"7":{},"33":{},"35":{},"56":{}},"component":{}}],["token",{"_index":184,"title":{"19-4":{}},"name":{"55":{}},"text":{"7":{},"19":{},"33":{},"55":{}},"component":{}}],["tool",{"_index":330,"title":{},"name":{},"text":{"9":{},"24":{}},"component":{}}],["top",{"_index":1532,"title":{},"name":{},"text":{"29":{},"33":{}},"component":{}}],["topic",{"_index":1990,"title":{},"name":{},"text":{"46":{},"47":{},"48":{},"51":{}},"component":{}}],["total",{"_index":2338,"title":{},"name":{},"text":{"55":{}},"component":{}}],["total_suppli",{"_index":1936,"title":{},"name":{},"text":{"45":{}},"component":{}}],["touch",{"_index":490,"title":{},"name":{},"text":{"13":{},"30":{}},"component":{}}],["trace",{"_index":1104,"title":{},"name":{},"text":{"22":{},"24":{},"53":{}},"component":{}}],["track",{"_index":523,"title":{},"name":{},"text":{"13":{},"22":{},"52":{},"53":{}},"component":{}}],["tradeoff",{"_index":2051,"title":{},"name":{},"text":{"47":{}},"component":{}}],["trail",{"_index":1421,"title":{},"name":{},"text":{"26":{}},"component":{}}],["trait",{"_index":1549,"title":{},"name":{},"text":{"30":{},"31":{},"42":{}},"component":{}}],["transact",{"_index":125,"title":{"34":{},"50":{},"51":{},"23-5":{},"29-3":{},"32-1":{},"32-2":{},"35-2":{},"35-5":{},"50-1":{},"50-7":{},"51-1":{},"51-2":{},"51-3":{},"51-8":{},"51-15":{},"55-9":{}},"name":{"50":{},"51":{}},"text":{"7":{},"13":{},"14":{},"18":{},"20":{},"21":{},"22":{},"23":{},"24":{},"27":{},"29":{},"31":{},"32":{},"33":{},"34":{},"35":{},"41":{},"44":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"52":{},"53":{},"54":{},"55":{},"56":{},"57":{}},"component":{}}],["transaction_commit",{"_index":2066,"title":{},"name":{},"text":{"49":{}},"component":{}}],["transaction_count",{"_index":2065,"title":{},"name":{},"text":{"49":{}},"component":{}}],["transaction_hash",{"_index":257,"title":{},"name":{},"text":{"7":{},"50":{}},"component":{}}],["transaction_index",{"_index":2094,"title":{},"name":{},"text":{"50":{}},"component":{}}],["transactionstorag",{"_index":846,"title":{},"name":{},"text":{"20":{}},"component":{}}],["transaction’",{"_index":1972,"title":{},"name":{},"text":{"46":{},"48":{},"51":{},"53":{},"54":{}},"component":{}}],["transfer",{"_index":549,"title":{"14-5":{},"55-3":{},"55-6":{},"55-7":{},"55-10":{}},"name":{},"text":{"14":{},"42":{},"53":{},"54":{},"55":{},"57":{}},"component":{}}],["transfer_from",{"_index":1864,"title":{},"name":{},"text":{"42":{}},"component":{}}],["transit",{"_index":1088,"title":{},"name":{},"text":{"22":{},"24":{},"42":{},"56":{}},"component":{}}],["translat",{"_index":1447,"title":{},"name":{},"text":{"29":{}},"component":{}}],["transpar",{"_index":1239,"title":{},"name":{},"text":{"23":{}},"component":{}}],["transport",{"_index":1054,"title":{},"name":{},"text":{"22":{}},"component":{}}],["treat",{"_index":1804,"title":{},"name":{},"text":{"41":{},"52":{}},"component":{}}],["tree",{"_index":2072,"title":{"56-2":{},"56-3":{},"56-4":{}},"name":{},"text":{"49":{},"56":{}},"component":{}}],["trie",{"_index":896,"title":{"56-6":{}},"name":{},"text":{"20":{}},"component":{}}],["trigger",{"_index":544,"title":{"21":{},"55-5":{}},"name":{},"text":{"13":{},"21":{},"55":{}},"component":{}}],["triplet",{"_index":2376,"title":{},"name":{},"text":{"56":{}},"component":{}}],["true",{"_index":338,"title":{},"name":{},"text":{"9":{},"29":{},"41":{},"43":{}},"component":{}}],["truncat",{"_index":990,"title":{},"name":{},"text":{"22":{}},"component":{}}],["trust",{"_index":708,"title":{},"name":{},"text":{"17":{},"22":{}},"component":{}}],["tune",{"_index":2350,"title":{},"name":{},"text":{"55":{}},"component":{}}],["tupl",{"_index":1340,"title":{},"name":{},"text":{"24":{},"36":{},"45":{},"47":{}},"component":{}}],["ture",{"_index":2056,"title":{},"name":{},"text":{"48":{}},"component":{}}],["turn",{"_index":1178,"title":{},"name":{},"text":{"22":{}},"component":{}}],["tutori",{"_index":558,"title":{},"name":{},"text":{"14":{},"16":{}},"component":{}}],["two",{"_index":326,"title":{},"name":{},"text":{"9":{},"13":{},"15":{},"24":{},"31":{},"32":{},"33":{},"35":{},"42":{},"46":{},"47":{},"48":{},"52":{},"53":{},"56":{},"57":{}},"component":{}}],["twofold",{"_index":1691,"title":{},"name":{},"text":{"35":{}},"component":{}}],["tx",{"_index":2212,"title":{},"name":{},"text":{"53":{},"56":{}},"component":{}}],["tx_info",{"_index":1969,"title":{},"name":{},"text":{"46":{},"48":{}},"component":{}}],["tx_statu",{"_index":76,"title":{"7-16":{}},"name":{},"text":{"7":{}},"component":{}}],["txinfo",{"_index":1970,"title":{},"name":{},"text":{"46":{},"48":{}},"component":{}}],["txn_hash_not_found",{"_index":1092,"title":{},"name":{},"text":{"22":{}},"component":{}}],["type",{"_index":507,"title":{"51":{}},"name":{},"text":{"13":{},"20":{},"22":{},"24":{},"30":{},"31":{},"37":{},"42":{},"47":{},"49":{},"51":{},"53":{},"55":{},"57":{}},"component":{}}],["typic",{"_index":1666,"title":{},"name":{},"text":{"33":{}},"component":{}}],["u128",{"_index":1544,"title":{},"name":{},"text":{"30":{},"42":{}},"component":{}}],["u256",{"_index":1937,"title":{},"name":{},"text":{"45":{},"57":{}},"component":{}}],["u32",{"_index":2048,"title":{},"name":{},"text":{"47":{},"48":{}},"component":{}}],["u64",{"_index":2020,"title":{},"name":{},"text":{"47":{}},"component":{}}],["u8",{"_index":1935,"title":{},"name":{},"text":{"45":{}},"component":{}}],["ubuntu",{"_index":647,"title":{},"name":{},"text":{"15":{}},"component":{}}],["ui",{"_index":1893,"title":{},"name":{},"text":{"42":{}},"component":{}}],["uint256",{"_index":2154,"title":{},"name":{},"text":{"52":{},"54":{}},"component":{}}],["uint256.cairo",{"_index":1315,"title":{},"name":{},"text":{"24":{}},"component":{}}],["uint256_mul_div_mod",{"_index":1314,"title":{},"name":{},"text":{"24":{}},"component":{}}],["uint8",{"_index":886,"title":{},"name":{},"text":{"20":{}},"component":{}}],["unaffect",{"_index":1277,"title":{},"name":{},"text":{"24":{}},"component":{}}],["unambigu",{"_index":1900,"title":{},"name":{},"text":{"44":{}},"component":{}}],["uncoupl",{"_index":1655,"title":{},"name":{},"text":{"33":{}},"component":{}}],["under",{"_index":1548,"title":{},"name":{},"text":{"30":{},"42":{}},"component":{}}],["underbrace{0\\cdots0}_{\\text{127",{"_index":2137,"title":{},"name":{},"text":{"52":{}},"component":{}}],["underbrace{0\\cdots0}_{\\text{128",{"_index":2159,"title":{},"name":{},"text":{"52":{}},"component":{}}],["underbrace{\\text",{"_index":2142,"title":{},"name":{},"text":{"52":{}},"component":{}}],["underbrace{\\text{class",{"_index":2138,"title":{},"name":{},"text":{"52":{}},"component":{}}],["underbrace{\\text{new",{"_index":2140,"title":{},"name":{},"text":{"52":{}},"component":{}}],["underdocu",{"_index":1079,"title":{},"name":{},"text":{"22":{}},"component":{}}],["undergon",{"_index":940,"title":{},"name":{},"text":{"21":{}},"component":{}}],["underli",{"_index":370,"title":{},"name":{},"text":{"10":{},"17":{},"37":{},"41":{}},"component":{}}],["understand",{"_index":712,"title":{},"name":{},"text":{"17":{},"29":{}},"component":{}}],["underw",{"_index":1878,"title":{},"name":{},"text":{"42":{}},"component":{}}],["unexpectedli",{"_index":1208,"title":{},"name":{},"text":{"22":{}},"component":{}}],["unfortun",{"_index":1201,"title":{},"name":{},"text":{"22":{}},"component":{}}],["unhappi",{"_index":1515,"title":{},"name":{},"text":{"29":{}},"component":{}}],["unifi",{"_index":1572,"title":{},"name":{},"text":{"30":{}},"component":{}}],["uninstal",{"_index":601,"title":{"15-9":{}},"name":{},"text":{"15":{}},"component":{}}],["uniqu",{"_index":509,"title":{},"name":{},"text":{"13":{},"17":{},"31":{},"35":{},"43":{},"53":{},"56":{}},"component":{}}],["unit",{"_index":2182,"title":{"53-2":{}},"name":{},"text":{},"component":{}}],["unjustifi",{"_index":1684,"title":{},"name":{},"text":{"35":{}},"component":{}}],["unless",{"_index":1360,"title":{},"name":{},"text":{"24":{},"43":{},"56":{}},"component":{}}],["unlik",{"_index":561,"title":{},"name":{},"text":{"14":{},"18":{},"50":{},"54":{}},"component":{}}],["unlimit",{"_index":28,"title":{},"name":{},"text":{"4":{},"16":{},"22":{}},"component":{}}],["unnecessari",{"_index":1376,"title":{},"name":{},"text":{"24":{}},"component":{}}],["unprefix",{"_index":1084,"title":{},"name":{},"text":{"22":{}},"component":{}}],["unprov",{"_index":1471,"title":{},"name":{},"text":{"29":{}},"component":{}}],["unregist",{"_index":1085,"title":{},"name":{},"text":{"22":{}},"component":{}}],["unsatisfi",{"_index":1434,"title":{"29-3":{}},"name":{},"text":{},"component":{}}],["unsuccessfulli",{"_index":2079,"title":{},"name":{},"text":{"50":{}},"component":{}}],["unsupport",{"_index":2102,"title":{},"name":{},"text":{"51":{}},"component":{}}],["until",{"_index":477,"title":{},"name":{},"text":{"13":{},"22":{},"29":{}},"component":{}}],["unus",{"_index":363,"title":{},"name":{},"text":{"9":{}},"component":{}}],["unwrap_syscal",{"_index":2042,"title":{},"name":{},"text":{"47":{},"48":{},"57":{}},"component":{}}],["up",{"_index":167,"title":{"14":{},"15":{},"13-1":{},"13-2":{},"13-3":{},"14-2":{},"15-12":{}},"name":{},"text":{"7":{},"13":{},"14":{},"15":{},"29":{},"35":{},"36":{},"53":{},"56":{}},"component":{}}],["upcom",{"_index":1145,"title":{"23":{}},"name":{},"text":{"22":{}},"component":{}}],["upcoming_vers",{"_index":1229,"title":{},"name":{"23":{}},"text":{},"component":{}}],["updat",{"_index":780,"title":{"53-9":{}},"name":{},"text":{"20":{},"21":{},"22":{},"24":{},"35":{},"46":{},"47":{},"48":{},"52":{},"53":{},"54":{},"55":{},"56":{}},"component":{}}],["updates}}_{\\text{64",{"_index":2143,"title":{},"name":{},"text":{"52":{}},"component":{}}],["upgrad",{"_index":1017,"title":{},"name":{},"text":{"22":{},"24":{}},"component":{}}],["upon",{"_index":1603,"title":{},"name":{},"text":{"32":{},"35":{},"52":{},"54":{}},"component":{}}],["url",{"_index":116,"title":{},"name":{},"text":{"7":{},"19":{},"22":{},"26":{},"27":{}},"component":{}}],["us",{"_index":50,"title":{"15-4":{},"32-4":{},"44-1":{}},"name":{},"text":{"4":{},"7":{},"8":{},"9":{},"13":{},"14":{},"15":{},"18":{},"19":{},"20":{},"22":{},"23":{},"24":{},"29":{},"30":{},"31":{},"32":{},"33":{},"36":{},"38":{},"41":{},"42":{},"44":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"53":{},"54":{},"55":{},"56":{},"57":{}},"component":{}}],["usabl",{"_index":1317,"title":{},"name":{},"text":{"24":{},"33":{}},"component":{}}],["usag",{"_index":304,"title":{"9-1":{}},"name":{},"text":{"14":{},"35":{},"53":{}},"component":{}}],["usdc",{"_index":2342,"title":{},"name":{},"text":{"55":{}},"component":{}}],["usdt",{"_index":2343,"title":{},"name":{},"text":{"55":{}},"component":{}}],["user",{"_index":751,"title":{},"name":{},"text":{"19":{},"20":{},"22":{},"23":{},"29":{},"32":{},"33":{},"41":{},"42":{},"45":{},"50":{},"53":{},"54":{},"55":{},"56":{}},"component":{}}],["user’",{"_index":1459,"title":{},"name":{},"text":{"29":{},"33":{},"35":{},"55":{}},"component":{}}],["usual",{"_index":1720,"title":{},"name":{},"text":{"36":{}},"component":{}}],["utf",{"_index":1801,"title":{},"name":{},"text":{"41":{}},"component":{}}],["util",{"_index":1200,"title":{},"name":{},"text":{"22":{}},"component":{}}],["ux",{"_index":1600,"title":{},"name":{},"text":{"31":{}},"component":{}}],["v",{"_index":312,"title":{"9-12":{}},"name":{},"text":{"9":{},"24":{},"53":{}},"component":{}}],["v.0.3.0",{"_index":880,"title":{},"name":{},"text":{"20":{}},"component":{}}],["v0",{"_index":731,"title":{"51-7":{},"51-14":{}},"name":{},"text":{"18":{},"22":{},"30":{},"42":{},"51":{}},"component":{}}],["v0.1",{"_index":1141,"title":{},"name":{},"text":{"22":{}},"component":{}}],["v0.1.0",{"_index":767,"title":{"20-24":{}},"name":{},"text":{},"component":{}}],["v0.1.0…​v0.2.0",{"_index":891,"title":{},"name":{},"text":{"20":{}},"component":{}}],["v0.10.0",{"_index":1255,"title":{"24-9":{}},"name":{},"text":{},"component":{}}],["v0.10.1",{"_index":1253,"title":{"24-8":{}},"name":{},"text":{"51":{}},"component":{}}],["v0.10.2",{"_index":974,"title":{"22-72":{},"24-7":{}},"name":{},"text":{"22":{}},"component":{}}],["v0.10.3",{"_index":732,"title":{"24-6":{}},"name":{},"text":{"18":{},"20":{},"22":{}},"component":{}}],["v0.11",{"_index":1124,"title":{},"name":{},"text":{"22":{}},"component":{}}],["v0.11.0",{"_index":723,"title":{"24-5":{},"52-2":{},"52-3":{},"52-4":{},"52-5":{},"52-6":{},"52-7":{}},"name":{},"text":{"18":{},"20":{},"22":{},"24":{},"29":{}},"component":{}}],["v0.11.1",{"_index":1073,"title":{"24-4":{}},"name":{},"text":{"22":{},"24":{}},"component":{}}],["v0.11.2",{"_index":835,"title":{"24-3":{}},"name":{},"text":{"20":{},"22":{},"24":{}},"component":{}}],["v0.12",{"_index":992,"title":{},"name":{},"text":{"22":{}},"component":{}}],["v0.12.0",{"_index":814,"title":{"24-2":{}},"name":{},"text":{"20":{},"22":{},"24":{},"47":{}},"component":{}}],["v0.12.1",{"_index":1226,"title":{"23-1":{}},"name":{},"text":{"23":{}},"component":{}}],["v0.13.0",{"_index":292,"title":{},"name":{},"text":{"8":{},"18":{}},"component":{}}],["v0.2",{"_index":1041,"title":{},"name":{},"text":{"22":{}},"component":{}}],["v0.2.0",{"_index":766,"title":{"20-19":{}},"name":{},"text":{},"component":{}}],["v0.2.0…​v0.2.1",{"_index":868,"title":{},"name":{},"text":{"20":{}},"component":{}}],["v0.2.1",{"_index":765,"title":{"20-18":{}},"name":{},"text":{},"component":{}}],["v0.2.1…​v0.2.2",{"_index":861,"title":{},"name":{},"text":{"20":{}},"component":{}}],["v0.2.2",{"_index":764,"title":{"20-16":{}},"name":{},"text":{},"component":{}}],["v0.3",{"_index":1042,"title":{},"name":{},"text":{"22":{}},"component":{}}],["v0.3.0",{"_index":763,"title":{"20-12":{}},"name":{},"text":{},"component":{}}],["v0.3.0…​v0.3.1",{"_index":834,"title":{},"name":{},"text":{"20":{}},"component":{}}],["v0.3.1",{"_index":762,"title":{"20-8":{}},"name":{},"text":{"22":{}},"component":{}}],["v0.4",{"_index":1029,"title":{},"name":{},"text":{"22":{}},"component":{}}],["v0.4.0",{"_index":761,"title":{"20-5":{},"22-70":{}},"name":{},"text":{},"component":{}}],["v0.4.1",{"_index":759,"title":{"20-1":{},"22-61":{}},"name":{},"text":{"22":{}},"component":{}}],["v0.4.2",{"_index":972,"title":{"22-58":{}},"name":{},"text":{},"component":{}}],["v0.4.3",{"_index":971,"title":{"22-55":{}},"name":{},"text":{},"component":{}}],["v0.4.4",{"_index":970,"title":{"22-50":{}},"name":{},"text":{"22":{}},"component":{}}],["v0.4.5",{"_index":969,"title":{"22-46":{}},"name":{},"text":{},"component":{}}],["v0.5.0",{"_index":967,"title":{"22-37":{}},"name":{},"text":{},"component":{}}],["v0.5.1",{"_index":966,"title":{"22-35":{}},"name":{},"text":{},"component":{}}],["v0.5.2",{"_index":965,"title":{"22-32":{}},"name":{},"text":{"22":{}},"component":{}}],["v0.5.3",{"_index":964,"title":{"22-29":{}},"name":{},"text":{},"component":{}}],["v0.5.4",{"_index":963,"title":{"22-26":{}},"name":{},"text":{},"component":{}}],["v0.9.0",{"_index":1258,"title":{"24-11":{}},"name":{},"text":{},"component":{}}],["v0.9.1",{"_index":1257,"title":{"24-10":{}},"name":{},"text":{},"component":{}}],["v1",{"_index":1836,"title":{"51-4":{},"51-5":{},"51-12":{},"51-13":{}},"name":{},"text":{"42":{},"51":{}},"component":{}}],["v1.0.0",{"_index":1275,"title":{},"name":{},"text":{"24":{}},"component":{}}],["v1.1.0",{"_index":1046,"title":{},"name":{},"text":{"22":{},"30":{}},"component":{}}],["v2",{"_index":1831,"title":{"42-1":{},"51-9":{},"51-10":{}},"name":{},"text":{"42":{},"51":{},"52":{},"56":{}},"component":{}}],["v2.0.0",{"_index":1016,"title":{},"name":{},"text":{"22":{},"30":{},"42":{}},"component":{}}],["v>=1.0.0",{"_index":1832,"title":{},"name":{},"text":{"42":{}},"component":{}}],["v_k",{"_index":2274,"title":{},"name":{},"text":{"53":{}},"component":{}}],["valid",{"_index":15,"title":{"35":{},"23-4":{},"32-3":{},"32-4":{},"35-1":{},"35-3":{}},"name":{},"text":{"4":{},"9":{},"22":{},"23":{},"24":{},"29":{},"32":{},"33":{},"34":{},"35":{},"50":{},"51":{},"52":{},"55":{}},"component":{}}],["validate/execut",{"_index":1316,"title":{},"name":{},"text":{"24":{}},"component":{}}],["validate_and_execut",{"_index":1681,"title":{},"name":{"35":{}},"text":{},"component":{}}],["validate_declar",{"_index":1322,"title":{},"name":{},"text":{"24":{}},"component":{}}],["valu",{"_index":97,"title":{"37-1":{},"46-6":{},"46-12":{},"46-18":{},"46-24":{},"46-30":{},"46-36":{},"46-42":{},"46-48":{},"46-54":{},"46-61":{},"46-67":{},"46-73":{},"46-80":{},"46-86":{},"46-93":{},"47-4":{},"47-11":{},"47-17":{},"47-28":{},"47-35":{},"47-41":{},"47-48":{},"47-54":{},"47-61":{}},"name":{"37":{}},"text":{"7":{},"14":{},"20":{},"22":{},"24":{},"29":{},"35":{},"37":{},"38":{},"42":{},"45":{},"46":{},"47":{},"48":{},"51":{},"52":{},"53":{},"54":{},"55":{},"56":{},"57":{}},"component":{}}],["valuabl",{"_index":680,"title":{},"name":{},"text":{"17":{},"22":{},"23":{}},"component":{}}],["value:felt252",{"_index":501,"title":{},"name":{},"text":{"13":{}},"component":{}}],["values.append",{"_index":2041,"title":{},"name":{},"text":{"47":{},"48":{},"57":{}},"component":{}}],["var.addr",{"_index":1921,"title":{},"name":{},"text":{"45":{}},"component":{}}],["var.read",{"_index":1918,"title":{},"name":{},"text":{"45":{},"46":{},"47":{}},"component":{}}],["var.writ",{"_index":1920,"title":{},"name":{},"text":{"45":{},"46":{},"47":{}},"component":{}}],["vari",{"_index":2411,"title":{},"name":{},"text":{"57":{}},"component":{}}],["variabl",{"_index":95,"title":{"13-2":{},"45-3":{}},"name":{},"text":{"7":{},"9":{},"14":{},"15":{},"22":{},"24":{},"45":{},"46":{},"47":{},"48":{}},"component":{}}],["variable_nam",{"_index":1924,"title":{},"name":{},"text":{"45":{}},"component":{}}],["variable’",{"_index":1915,"title":{},"name":{},"text":{"45":{}},"component":{}}],["variant",{"_index":1574,"title":{},"name":{},"text":{"30":{},"42":{}},"component":{}}],["variou",{"_index":684,"title":{},"name":{},"text":{"17":{},"46":{},"47":{},"55":{}},"component":{}}],["vastli",{"_index":1665,"title":{},"name":{},"text":{"33":{}},"component":{}}],["vector",{"_index":2231,"title":{},"name":{},"text":{"53":{}},"component":{}}],["venv",{"_index":610,"title":{},"name":{},"text":{"15":{}},"component":{}}],["ver",{"_index":858,"title":{},"name":{},"text":{"20":{}},"component":{}}],["verbos",{"_index":588,"title":{},"name":{},"text":{"14":{},"20":{}},"component":{}}],["veri",{"_index":1038,"title":{},"name":{},"text":{"22":{},"29":{},"36":{}},"component":{}}],["verif",{"_index":799,"title":{},"name":{},"text":{"20":{},"21":{},"24":{},"31":{},"53":{}},"component":{}}],["verifi",{"_index":389,"title":{},"name":{},"text":{"11":{},"19":{},"20":{},"22":{},"24":{},"29":{},"32":{},"53":{},"54":{},"55":{}},"component":{}}],["version",{"_index":313,"title":{"20":{},"22":{},"23":{},"24":{},"9-12":{},"15-9":{},"15-10":{},"19-2":{},"19-3":{},"22-71":{},"51-1":{}},"name":{},"text":{"9":{},"13":{},"14":{},"15":{},"20":{},"22":{},"23":{},"24":{},"30":{},"36":{},"41":{},"42":{},"46":{},"48":{},"49":{},"51":{},"53":{},"54":{},"55":{},"56":{}},"component":{}}],["version_not",{"_index":1260,"title":{},"name":{"24":{}},"text":{},"component":{}}],["via",{"_index":173,"title":{},"name":{},"text":{"7":{},"22":{},"29":{},"30":{},"33":{},"42":{},"44":{},"46":{},"47":{},"48":{},"51":{},"53":{},"54":{},"55":{},"56":{}},"component":{}}],["view",{"_index":323,"title":{},"name":{},"text":{"9":{},"22":{},"24":{},"30":{},"42":{}},"component":{}}],["viewblock",{"_index":1431,"title":{},"name":{},"text":{"27":{}},"component":{}}],["virtual",{"_index":596,"title":{"15-3":{},"15-4":{}},"name":{},"text":{"15":{}},"component":{}}],["virtualenv",{"_index":624,"title":{},"name":{},"text":{"15":{}},"component":{}}],["visit",{"_index":714,"title":{},"name":{},"text":{"17":{}},"component":{}}],["vm",{"_index":664,"title":{},"name":{},"text":{"15":{},"20":{},"22":{},"24":{},"37":{}},"component":{}}],["voyag",{"_index":465,"title":{},"name":{},"text":{"13":{},"14":{},"27":{}},"component":{}}],["w",{"_index":1364,"title":{},"name":{},"text":{"24":{},"53":{}},"component":{}}],["w_k",{"_index":2275,"title":{},"name":{},"text":{"53":{}},"component":{}}],["wait",{"_index":1136,"title":{},"name":{},"text":{"22":{},"33":{},"54":{},"55":{}},"component":{}}],["walk",{"_index":676,"title":{},"name":{},"text":{"16":{}},"component":{}}],["walkthrough",{"_index":679,"title":{},"name":{},"text":{"17":{}},"component":{}}],["wallet",{"_index":133,"title":{"14-3":{}},"name":{},"text":{"7":{},"13":{},"24":{},"31":{},"33":{}},"component":{}}],["wallet_nam",{"_index":165,"title":{},"name":{},"text":{"7":{}},"component":{}}],["wallet_provid",{"_index":207,"title":{},"name":{},"text":{"7":{}},"component":{}}],["want",{"_index":1405,"title":{},"name":{},"text":{"26":{},"32":{},"33":{},"35":{},"46":{},"47":{},"48":{},"53":{},"56":{}},"component":{}}],["warn",{"_index":1066,"title":{},"name":{},"text":{"22":{}},"component":{}}],["wasn’t",{"_index":2355,"title":{},"name":{},"text":{"55":{}},"component":{}}],["way",{"_index":268,"title":{},"name":{},"text":{"7":{},"14":{},"15":{},"24":{},"29":{},"33":{},"42":{},"45":{}},"component":{}}],["wbtc",{"_index":2344,"title":{},"name":{},"text":{"55":{}},"component":{}}],["websocket",{"_index":1051,"title":{},"name":{},"text":{"22":{}},"component":{}}],["wei",{"_index":472,"title":{},"name":{},"text":{"13":{},"14":{}},"component":{}}],["weight",{"_index":2239,"title":{},"name":{},"text":{"53":{}},"component":{}}],["welcom",{"_index":381,"title":{},"name":{},"text":{"10":{}},"component":{}}],["well",{"_index":1162,"title":{},"name":{},"text":{"22":{},"55":{}},"component":{}}],["we’r",{"_index":2386,"title":{},"name":{},"text":{"56":{}},"component":{}}],["whatev",{"_index":52,"title":{},"name":{},"text":{"4":{}},"component":{}}],["what’",{"_index":1214,"title":{},"name":{},"text":{"22":{},"29":{}},"component":{}}],["whenev",{"_index":2256,"title":{},"name":{},"text":{"53":{},"54":{}},"component":{}}],["wherea",{"_index":1100,"title":{},"name":{},"text":{"22":{}},"component":{}}],["wherebi",{"_index":1648,"title":{},"name":{},"text":{"33":{}},"component":{}}],["whether",{"_index":691,"title":{},"name":{},"text":{"17":{},"22":{},"31":{}},"component":{}}],["whitelist",{"_index":1528,"title":{},"name":{},"text":{"29":{}},"component":{}}],["whose",{"_index":1347,"title":{},"name":{},"text":{"24":{},"42":{},"46":{},"47":{},"48":{},"52":{},"56":{}},"component":{}}],["will",{"_index":2107,"title":{},"name":{},"text":{"51":{},"53":{}},"component":{}}],["wish",{"_index":1618,"title":{},"name":{},"text":{"32":{},"57":{}},"component":{}}],["with_attr",{"_index":340,"title":{},"name":{},"text":{"9":{}},"component":{}}],["withdraw",{"_index":2333,"title":{"55-7":{},"55-8":{}},"name":{},"text":{"55":{}},"component":{}}],["withdrawal’",{"_index":2359,"title":{},"name":{},"text":{"55":{}},"component":{}}],["within",{"_index":422,"title":{},"name":{},"text":{"13":{},"21":{},"23":{},"24":{},"31":{},"33":{},"46":{},"47":{},"48":{},"50":{},"53":{},"55":{}},"component":{}}],["without",{"_index":31,"title":{"53-5":{}},"name":{},"text":{"4":{},"7":{},"14":{},"16":{},"18":{},"22":{},"24":{},"29":{},"32":{},"35":{},"41":{},"44":{},"52":{},"53":{}},"component":{}}],["wohooo",{"_index":537,"title":{},"name":{},"text":{"13":{}},"component":{}}],["word",{"_index":1764,"title":{},"name":{},"text":{"37":{},"52":{},"53":{}},"component":{}}],["work",{"_index":107,"title":{},"name":{},"text":{"7":{},"9":{},"13":{},"18":{},"20":{},"22":{},"29":{},"32":{},"34":{},"35":{}},"component":{}}],["world",{"_index":682,"title":{},"name":{},"text":{"17":{},"44":{},"53":{}},"component":{}}],["wrap",{"_index":2037,"title":{},"name":{},"text":{"47":{}},"component":{}}],["write",{"_index":114,"title":{"21-5":{}},"name":{},"text":{"7":{},"16":{},"21":{},"24":{},"29":{},"42":{},"45":{},"46":{},"47":{},"48":{}},"component":{}}],["written",{"_index":46,"title":{},"name":{},"text":{"4":{},"13":{},"15":{},"25":{},"28":{},"29":{},"30":{},"41":{},"42":{},"48":{},"51":{},"54":{}},"component":{}}],["wrong",{"_index":1181,"title":{},"name":{},"text":{"22":{}},"component":{}}],["www.abdk.consult",{"_index":1409,"title":{},"name":{},"text":{"26":{}},"component":{}}],["www.alchemy.com/starknet",{"_index":1386,"title":{},"name":{},"text":{"25":{},"28":{}},"component":{}}],["www.infura.io/networks/ethereum/starknet",{"_index":1394,"title":{},"name":{},"text":{"25":{},"28":{}},"component":{}}],["www.lavanet.xyz",{"_index":1397,"title":{},"name":{},"text":{"25":{},"28":{}},"component":{}}],["www.openzeppelin.com",{"_index":1418,"title":{},"name":{},"text":{"26":{}},"component":{}}],["www.trailofbits.com",{"_index":1422,"title":{},"name":{},"text":{"26":{}},"component":{}}],["www.zellic.io",{"_index":1424,"title":{},"name":{},"text":{"26":{}},"component":{}}],["x",{"_index":1344,"title":{},"name":{},"text":{"24":{},"36":{},"37":{},"38":{},"42":{},"56":{},"57":{}},"component":{}}],["xjonathanlei",{"_index":299,"title":{},"name":{},"text":{"8":{}},"component":{}}],["xref:smart_contracts/contract",{"_index":2155,"title":{},"name":{},"text":{"52":{}},"component":{}}],["y",{"_index":651,"title":{},"name":{},"text":{"15":{},"24":{},"36":{},"42":{},"57":{}},"component":{}}],["y^2=x^3+\\alpha",{"_index":1770,"title":{},"name":{},"text":{"38":{}},"component":{}}],["yield",{"_index":1506,"title":{},"name":{},"text":{"29":{},"53":{}},"component":{}}],["you’ll",{"_index":413,"title":{},"name":{},"text":{"13":{},"42":{}},"component":{}}],["you’r",{"_index":233,"title":{},"name":{},"text":{"7":{},"10":{}},"component":{}}],["z",{"_index":1363,"title":{},"name":{},"text":{"24":{}},"component":{}}],["zellic",{"_index":1423,"title":{},"name":{},"text":{"26":{}},"component":{}}],["zeppelin",{"_index":1417,"title":{},"name":{},"text":{"26":{}},"component":{}}],["zero",{"_index":87,"title":{},"name":{},"text":{"7":{},"20":{},"24":{},"31":{},"47":{},"49":{},"51":{},"56":{}},"component":{}}],["zk",{"_index":18,"title":{},"name":{},"text":{"4":{},"16":{},"36":{},"52":{}},"component":{}}],["zshrc",{"_index":619,"title":{},"name":{},"text":{"15":{}},"component":{}}]],"pipeline":["stemmer"]},"store":{"documents":{"1":{"id":1,"text":"","title":"Macros and attributes","component":"documentation","version":"","name":"Macros_and_attributes","url":"/documentation/Cairo/Macros_and_attributes/","titles":[]},"2":{"id":2,"text":"","title":"Contract basics","component":"documentation","version":"","name":"basics","url":"/documentation/Cairo/basics/","titles":[]},"3":{"id":3,"text":"","title":"Storage and data structures","component":"documentation","version":"","name":"storage_and_data_structures","url":"/documentation/Cairo/storage_and_data_structures/","titles":[]},"4":{"id":4,"text":"Starknet is a permissionless decentralized Validity-Rollup (also known as a ZK-Rollup). It operates as an L2 network over Ethereum, enabling any dApp to achieve unlimited scale for its computation – without compromising Ethereum’s composability and security – thanks to Starknet’s reliance on the safest and most scalable cryptographic proof system: STARK. Starknet contracts and the Starknet OS are written in Cairo – supporting the deployment and scaling of any use case, whatever the business logic.","title":"Introduction","component":"documentation","version":"","name":"index","url":"/documentation/","titles":[]},"5":{"id":5,"text":"","title":"Starknet API reference","component":"documentation","version":"","name":"api-reference","url":"/documentation/api/api-reference/","titles":[]},"6":{"id":6,"text":"","title":"Architecture","component":"documentation","version":"","name":"index","url":"/documentation/architecture_and_concepts/","titles":[]},"7":{"id":7,"text":"The Starknet CLI will be deprecated soon in favour of Starkli CLI. To enter a starknet command, use the following syntax: $ starknet Where: represents a single command that executes an operation on Starknet. represents zero or more command line options, each of which modifies the operation of the command. You need to set your Starknet network environment to use either testnet or Mainnet. You can set the environment using either a command-line option or an environment variable. Possible values are: alpha-goerli Sets the Starknet network to testnet alpha-mainnet Sets the Starknet network to Mainnet Setting the network environment using a command-line option When you enter any command, include the --network option. For example to use Mainnet, enter a command as follows: $ starknet --network alpha-mainnet You can place the --network option before or after any other option. Setting the network environment using an environment variable Set the STARKNET_NETWORK environment variable as follows: $ export STARKNET_NETWORK= For example, to use testnet, enter the following command: $ export STARKNET_NETWORK=alpha-goerli When working with the CLI, you can manually set the endpoints for the gateways that enable you to interact with Starknet, by including the following options: --feeder_gateway_url Sets the custom endpoint for read commands. --gateway_url Sets the custom endpoint for write commands. The following are the endpoints for Starknet testnet and Mainnet: Testnet feeder gateway URL: https://alpha4.starknet.io/feeder_gateway/ Mainnet feeder gateway URL: https://alpha-mainnet.starknet.io/feeder_gateway/ Testnet gateway URL: https://alpha4.starknet.io/gateway/ Mainnet gateway URL: https://alpha-mainnet.starknet.io/gateway/ Example: Setting a custom read endpoint The following command returns the ABI using the Mainnet feeder gateway. $ starknet get_code --feeder_gateway_url https://alpha-mainnet.starknet.io/feeder_gateway/ Example: Setting a custom write endpoint The following command sends a transaction to the Starknet sequencer using the Mainnet gateway. $ starknet invoke --gateway_url https://alpha-mainnet.starknet.io/gateway/ starknet call --address --abi --function --inputs --block_hash --block_number --signature --wallet --nonce Calls a Starknet contract without affecting the state, accepts the following arguments: contract_address* - address of the contract being called contract_abi* - a path to a JSON file that contains the abi of the contract being called function_name* - name of the function which is called arguments* - inputs to the function being called, represented by a list of space-delimited values block_hash - the hash of the block used as the context for the call operation. If this argument is omitted, the latest block is used block_number - same as block_hash, but specifies the context block by number or tag signature_information - list of field elements as described here wallet_name - the name of the desired wallet, use deploy_account to set-up new accounts in the CLI nonce - account nonce, only relevant if the call is going through an account Block Tag A block context can be specified via the latest or pending tags, where the former refers to the latest accepted on L2 block and the latter refers to the pending block. starknet declare --contract Declares a new contract class on Starknet, accepts the following arguement: contract_class - path to a JSON file containing the contract’s compiled code starknet deploy --salt --contract --inputs --token Deploys a new contract, accepts the following arguments: salt - a seed that is used in the computation of the contract’s address (if not specified, the sequencer will choose a random string) contract_definition* - path to a JSON file containing the contract’s bytecode and abi (can be obtained by executing starknet-compile) constructor_inputs* - the arguments given to the contract’s constructor, represented by a list of space-delimited values token - a token allowing contract deployment (can be obtained by applying here). Only used in the Alpha stages and will be deprecated in the future The deploy token is a temporary measure which will be deprecated when fees are incorporated in the system. Only relevant for Mainnet. starknet deploy_account --wallet --account Deploys an account contract, accepts the following arguments: account_name - the name given to the account, used for managing multiple accounts from the CLI (if not specified, the name __default__ is used. wallet_provider* - the path to module which manages the account (responsible for key generation, signing, etc.) Today, the Starknet CLI only works with the OpenZeppelin account contract. The CLI uses this specific wallet provider. To use this provider, either set up the following environment variable or pass the same value directly to the wallet_provider parameter: $ export STARKNET_WALLET=starkware.starknet.wallets.open_zeppelin.OpenZeppelinAccount Using the builtin wallet providers that are part of the cairo-lang package (starkware.starknet.wallets…​) is not secure (for example, the private key may be kept not encrypted and without backup in your home directory). You should only use them if you’re not overly concerned with losing access to your accounts (for example, for testing purposes). starknet estimate_fee --address --abi --function --inputs Returns the fee estimation for a given contract call. Accepts the following arguments: address* - the address of the contract being called contract_abi* - a path to a JSON file that contains the abi of the contract being called function_name*- the name of the function being called arguments* - inputs to the function being called, represented by a list of space-delimited values` starknet estimate_message_fee --from_address --to_address --function --inputs Returns the fee estimation for a given L1 handler application. Accepts the following arguments: from_address* - the L1 address of the sender to_address* - the L2 address of the recipient contract_abi* - a path to a JSON file containing the abi of the receiving contract on L2 function_name*- the name of the desired L1 handler arguments* - inputs to the called handler, represented by a list of space-delimited values starknet get_block --hash --number Returns the requested block, exactly one of the following arguments must be given: block_hash - hash of the requested block block_number - number or tag of the requested block starknet get_code --contract_address --block_hash --block_number Returns the ABI and the byte code of the requested contract, accepts the following arguments: contact_address* - address of the requested contract block_hash - the hash of the block used as the context for the operation. If this argument is omitted, the latest block is used block_number - same as block_hash, but specifies the context block by number or tag starknet get_storage_at --contract_address --key --block_hash --block_number Queries a contract’s storage at a specific key, accepts the following arguments: contract_address *- address of the requested contract key* - the requested key from the given contract’s storage block_hash - the hash of the block relative to which the storage will be provided. In case this argument is not given, the latest block is used block_number - same as block_hash, but specifies the context block by number or tag starknet get_transaction --hash Returns the requested transaction, expects the following argument: transaction_hash* - hash of the requested transaction starknet get_transaction_receipt --hash Returns the receipt associated with the transaction, expects the following argument: transaction_hash* - hash of the requested transaction starknet invoke starknet tx_status starknet invoke --address --abi --function --inputs --signature --wallet --nonce Sends a transaction to the Starknet sequencer, accepts the following arguments: address* - the address of the contract being called contract_abi* - a path to a JSON file that contains the abi of the contract being called function_name*- the name of the function being called arguments* - inputs to the function being called, represented by a list of space-delimited values signature_information - list of field elements as described here wallet_name - the name of the desired wallet, use deploy_account to set-up new accounts in the CLI. nonce - account nonce, only relevant if the call is going through an account Today, interaction with Starknet may be done either via account or by a direct call. The signature argument can only be provided in the case of a direct call, since otherwise providing the signature is the responsibility of the account module. To use an account you must specify wallet_name, otherwise a direct call will be used (you may also explicitly perform a direct call by adding --no_wallet to the command). Note that in the future direct calls will be deprecated and the only way to interact with the system would be through accounts. starknet tx_status --hash --contract --error_message Returns the transaction status, accepts the following arguments: transaction_hash* - hash of the requested transaction contract_definition - path to a JSON file containing the compiled contract to which the transaction was addressed. If supplied, the debug information from the compiled contract will be used to add error locations. error_message - if specified, only the error message will be returned (or empty response in case the transaction was successful) The possible statuses of a transaction are: NOT_RECEIVED RECEIVED PENDING REJECTED ACCEPTED_ON_L2 ACCEPTED_ON_L1 Refer to this section for more information about the transaction lifecycle.","title":"Commands","component":"documentation","version":"","name":"commands","url":"/documentation/cli/commands/","titles":[{"text":"Basic command line syntax","hash":"basic_command_line_syntax","id":1},{"text":"Setting the Starknet network environment","hash":"setting_the_starknet_network_environment","id":2},{"text":"Setting custom endpoints","hash":"setting_custom_endpoints","id":3},{"text":"starknet call","hash":"starknet_call","id":4},{"text":"starknet declare","hash":"starknet_declare","id":5},{"text":"starknet deploy","hash":"starknet_deploy","id":6},{"text":"starknet deploy_account","hash":"starknet_deploy_account","id":7},{"text":"starknet estimate_fee","hash":"starknet-estimate_fee","id":8},{"text":"starknet estimate_message_fee","hash":"starknet_estimate_message_fee","id":9},{"text":"starknet get_block","hash":"starknet_get_block","id":10},{"text":"starknet get_code","hash":"starknet_get_code","id":11},{"text":"starknet get_storage_at","hash":"starknet_get_storage_at","id":12},{"text":"starknet get_transaction","hash":"starknet_get_transaction","id":13},{"text":"starknet get_transaction_receipt","hash":"starknet_get_transaction_receipt","id":14},{"text":"starknet invoke","hash":"starknet_invoke","id":15},{"text":"starknet tx_status","hash":"starknet_tx_status","id":16}]},"8":{"id":8,"text":"Starknet CLI, the current command line interface (CLI) for Starknet, built by StarkWare, is deprecated, and support will be removed in Starknet v0.13.0. Instead, you should use Starkli. Starkli is a CLI powered by starknet-rs and developed by Starknet community contributor @xJonathanLEI. For full documentation, see the Starkli Book. As of Starknet v0.13.0, Starknet CLI will no longer be supported.","title":"StarkLi CLI","component":"documentation","version":"","name":"starkli","url":"/documentation/cli/starkli/","titles":[]},"9":{"id":9,"text":"When the Starknet compiler is installed, you can view this command-line help in a terminal by entering the following command: starknet-compile --help starknet-compile [-h] [--abi ABI] [--disable_hint_validation] [--account_contract] [--dont_filter_identifiers] [-v] [--prime PRIME] [--cairo_path CAIRO_PATH] [--preprocess] [--output OUTPUT] [--no_debug_info] [--debug_info_with_source] [--cairo_dependencies CAIRO_DEPENDENCIES] [--no_opt_unused_functions] file [file ...] The following example compiles the file contract.cairo. It generates two files: contract_compiled.json The contract class. This file contains the bytecode and all other information necessary to execute a contract. For information on contract classes, see Contract Classes. contract_abi.json The contract’s ABI. starknet-compile contract.cairo \\ --output contract_compiled.json \\ --abi contract_abi.json A tool to compile Starknet contracts. File names. Show this help message and exit. Output the contract’s ABI. Disable the hint validation. Compile as account contract. Disable the filter-identifiers-optimization.If True, all the identifiers will be kept, instead of just the ones mentioned in hints or 'with_attr' statements. show program’s version number and exit The size of the finite field. A list of directories, separated by \":\" to resolve import paths. The full list will consist of directories defined by this argument, followed by the environment variable CAIRO_PATH, the working directory and the standard library path. Stop after the preprocessor step and output the preprocessed program. The output file name (default: stdout). Don’t include debug information in the compiled file. Include debug information with a copy of the source code. Output a list of the Cairo source files used during the compilation as a CMake file. Disables unused function optimization.","title":"Starknet compiler options reference","component":"documentation","version":"","name":"starknet-compiler-options","url":"/documentation/cli/starknet-compiler-options/","titles":[{"text":"Usage","hash":"usage","id":1},{"text":"Example","hash":"example","id":2},{"text":"Description","hash":"description","id":3},{"text":"Positional arguments","hash":"positional_arguments","id":4},{"text":"file","hash":"file","id":5},{"text":"Optional arguments","hash":"optional_arguments","id":6},{"text":"-h, --help","hash":"h_help","id":7},{"text":"--abi ABI","hash":"abi_abi","id":8},{"text":"--disable_hint_validation","hash":"disable_hint_validation","id":9},{"text":"--account_contract","hash":"account_contract","id":10},{"text":"--dont_filter_identifiers","hash":"dont_filter_identifiers","id":11},{"text":"-v, --version","hash":"v_version","id":12},{"text":"--prime PRIME","hash":"prime_prime","id":13},{"text":"--cairo_path CAIRO_PATH","hash":"cairo_path_cairo_path","id":14},{"text":"--preprocess","hash":"preprocess","id":15},{"text":"--output OUTPUT","hash":"output_output","id":16},{"text":"--no_debug_info","hash":"no_debug_info","id":17},{"text":"--debug_info_with_source","hash":"debug_info_with_source","id":18},{"text":"--cairo_dependencies CAIRO_DEPENDENCIES","hash":"cairo_dependencies_cairo_dependencies","id":19},{"text":"--no_opt_unused_functions","hash":"no_opt_unused_functions","id":20}]},"10":{"id":10,"text":"A successful audit doesn’t gurantee that the underlying code is free of bugs. For that purpose, we started a bug bounty program for StarkNet. Currently, the bounty program focuses on the StarkNet OS and related L1 contracts that define the protocol. In the future it may be extended to cover some of the mathematical foundations described above. You’re welcome to report issues in our discord.","title":"Bug bounty","component":"documentation","version":"","name":"bug-bounty","url":"/documentation/contribute/bug-bounty/","titles":[]},"11":{"id":11,"text":"The following audits have been completed for the Starknet stack: An audit for StarkWare’s solidity STARK verifier An audit for StarkWare’s solidity Cairo and the SHARP verifiers An audit for StarkWare’s Cairo STARK/Cairo verifiers Audit focus Link: StarkWare’s solidity STARK verifier https://github.com/starknet-io/starknet-stack-resources/blob/main/Audits/EVM_STARK_Verifier_v4.0_Audit_Report.pdf StarkWare’s solidity Cairo and the SHARP verifiers https://github.com/starknet-io/starknet-stack-resources/blob/main/Audits/Cairo%20&%20SHARP%20Verifiers.pdf StarkWare’s Cairo STARK/Cairo verifiers https://github.com/starknet-io/starknet-stack-resources/blob/main/Audits/STARK_Cairo%20Verifiers%20(in%20Cairo)%20Audit%20Report.pdf","title":"Completed audits","component":"documentation","version":"","name":"completed-audits","url":"/documentation/contribute/completed-audits/","titles":[]},"12":{"id":12,"text":"","title":"Starknet contribution: code of conduct","component":"documentation","version":"","name":"conduct","url":"/documentation/contribute/conduct/","titles":[]},"13":{"id":13,"text":"In this section, you will learn to compile, deploy and interact with a Starknet contract written in Cairo. Follow the below steps in order to accomplish your goal! In order to interact with the Starknet main chain or any testnets, you’ll need an RPC provider. Please refer to Alchemy’s quickstart guide to start developing with Starknet APIs! The following commands must run every time you open a new terminal to interact with Starknet. Setting them saves you time when using the CLI within the same terminal session. # Use Starknet testnet export STARKNET_NETWORK=alpha-goerli # Set the default wallet implementation to be used by the CLI export STARKNET_WALLET=starkware.starknet.wallets.open_zeppelin.OpenZeppelinAccount # Set the path to the cairo 1 compiler binary. Adapt this path to fit your installation if needed export CAIRO_COMPILER_DIR=~/.cairo/target/release/ # Compiler arguments export CAIRO_COMPILER_ARGS=--add-pythonic-hints You need to set up your CLI with an account contract and fund it. Starknet accounts are smart contracts. As such, creating one involves sending a transaction, and takes a bit longer than creating an EOA on other networks. You can learn more in the accounts section of the documentation. This process will involve three steps: Generating your account address locally Funding it Deploying it The Starknet account declared through the CLI are stored on your machine in folder ~/.starknet_accounts/. starknet new_account --account account_name Your terminal will return your account’s address. Account address: 0x00d9d851f600d539a9f7811de4d9613a6b3c2634f8c0386a305c03216bd67559 Public key: 0x0293d6625d860b9a37a0319d1e3c1eecc27685075cbeaae4ef29ed717d93c58b Move the appropriate amount of funds to the account, and then deploy the account by invoking the 'starknet deploy_account' command. NOTE: This is a modified version of the OpenZeppelin account contract. The signature is computed differently. Next step is to fund it. Use the faucet to get some funds and send them to the account Bridge funds using Starkgate However you chose to do it, please make sure that the funding transaction reaches the \"PENDING\" status before moving on. You can look for it on Starkscan or Voyager starknet deploy_account --account account_name Your sample output should look something like this: Sending the transaction with max_fee: 0.000568 ETH (568383605914463 WEI). Sent deploy account contract transaction. Contract address: 0x03f42fc2355be54197a8b270ff2cb8e2eb7902e777b3498f8ad58c6c147cce60 Transaction hash: 0x3d15e05389ecd1ff65555220be57f0ab43729877b20ca086048276917ed2838 Monitor the transaction until it passes the \"PENDING\" state. Before we get started, make sure that the below commands are working properly on your system. If they don’t, please check the Setting up your environment section. starknet --version starknet-compile --version You can now create a folder of your choice (in any location) where you would like to practice your Cairo skills . Inside the new folder, create a file name hello_starknet.cairo. Navigate to your home directory: cd ~/ Make a new directory named cairo_practice and navigate into the directory: mkdir cairo_practice && cd cairo_practice Create a new file called hello_starknet.cairo touch hello_starknet.cairo Copy and paste the following piece of code into your hello_starknet.cairo file: #[contract] mod HelloStarknet { use starknet::get_caller_address; use starknet::ContractAddress; #[event] fn Hello(from:ContractAddress, value:felt252) {} #[external] fn say_hello(message:felt252) { let caller=get_caller_address(); Hello(caller, message); } } Customize the above code by adding a new type of event. Find a name that is unique (this is important). Add the following code: #[event] fn My_Unique_Event_Name(from:ContractAddress, value:felt252) {} Compile the above Starknet contract using the following command: starknet-compile hello_starknet.cairo hello_starknet.json The above command should compile to produce a hello_starknet.json file in the same folder. On Starknet, the deployment process is in two steps: Declaring the class of your contract, or sending your contract’s code to the network Deploying a contract, or creating an instance of the code you previously declared Let’s start with declaring the above code. starknet declare --contract hello_starknet.json --account account_name The above command may fail if you are using code that has already been declared by someone else! Please make sure to add custom code to your contract to create a new contract class. You will see something like: Sending the transaction with max_fee: 0.000132 ETH (131904173791637 WEI). Declare transaction was sent. Contract class hash: 0x8ceb9796d2809438d1e992b8ac17cfe83d0cf5944dbad948a370e0b5d5924f Transaction hash: 0x334f16d9da30913c4a30194057793379079f35efa6bf5753bc6e724a591e9f0 The transaction hash allows you to track when the network will have received your contract’s code. Once this transaction has moved to \"PENDING\", you can deploy an instance of your contract. Using the above generated class hash, deploy the contract: starknet deploy --class_hash 0x8ceb9796d2809438d1e992b8ac17cfe83d0cf5944dbad948a370e0b5d5924f --account account_name If you run into any fee related issues, please add the flag --max_fee 100000000000000000 to your CLI commands to set an arbitrary high gas limit for your deploy transaction. You will see something like: Sending the transaction with max_fee: 0.000197 ETH (197273405375932 WEI). Invoke transaction for contract deployment was sent. Contract address: 0x03a5cac216edec20350e1fd8369536fadebb20b83bfceb0c33aab0175574d35d Transaction hash: 0x7895267b3e967e1c9c2f7da145e323bed60dfdd1b8ecc8efd243c9d587d579a Monitor the deploy transaction. Once it has passed \"PENDING\", your contract has been successfully deployed! Wohooo! You have just deployed your first Cairo 1.0 contract on StarkNet! Congratulations. If you quickly browse through the above contract (hello_starknet.cairo), you can see the contract has a simple function: say_hello which we are going to learn to trigger. #[external] fn say_hello(message:felt252) { let caller=get_caller_address(); Hello(caller, message); } The syntax to invoke a function in your contract is: starknet invoke --function --address --account # Invoking our say_hello function starknet invoke --function say_hello --address 0x03a5cac216edec20350e1fd8369536fadebb20b83bfceb0c33aab0175574d35d --input 152 --account account_name You will see something like: Sending the transaction with max_fee: 0.000080 ETH (79590795788372 WEI). Invoke transaction was sent. Contract address: 0x03a5cac216edec20350e1fd8369536fadebb20b83bfceb0c33aab0175574d35d Transaction hash: 0xbfb3ec183b4ee58db67113cf8832c31e78fe8000f091cc598d5aa9ca6a62af","title":"Deploying Starknet contracts","component":"documentation","version":"","name":"deploying_contracts","url":"/documentation/getting_started/deploying_contracts/","titles":[{"text":"Set up an RPC Provider","hash":"set_up_an_rpc_provider","id":1},{"text":"Setting up environment variables","hash":"setting_up_environment_variables","id":2},{"text":"Setting up an account","hash":"setting_up_an_account","id":3},{"text":"Create and compile a contract","hash":"create_and_compile_a_contract","id":4},{"text":"Declare a contract class","hash":"declare_a_contract_class","id":5},{"text":"Deploy a contract","hash":"deploy_a_contract","id":6},{"text":"Interact with your contract","hash":"interact_with_your_contract","id":7}]},"14":{"id":14,"text":"Before you create a Starknet account, ensure you have completed the steps in the environment setup section of these docs. In order to interact with Starknet, you need to set up a Starknet account. To deploy a new account on Starknet you will need to complete the following steps: Generate a Starknet account and compute its address locally Fund your account so that you can deploy the account to the Starknet network Deploy the account to the Starknet network Starknet natively uses Account Abstraction at the protocol layer for account implementation. You can learn more about Starknet Account Abstraction here. In this tutorial we will use the Starknet CLI (command line interface) to interact with Starknet. Setting the following environment variables will allow you to use the Starknet CLI to interact with a consistent set of configurations without having to pass them as arguments to each command: export STARKNET_NETWORK=alpha-goerli export CAIRO_COMPILER_DIR=~/.cairo/target/release/ export CAIRO_COMPILER_ARGS=--add-pythonic-hints Unlike Ethereum, a Starknet account is represented by a deployed contract that defines the account’s logic. In this tutorial, we will use a slightly modified version of OpenZeppelin’s standard for EOA contract (at the moment, the signature is computed differently). Set the STARKNET_WALLET environment variable as follows: export STARKNET_WALLET=starkware.starknet.wallets.open_zeppelin.OpenZeppelinAccount Now that your environment variables are set, you can create a Starknet account. Run the following command to initialize an account: starknet new_account --account The output should resemble: Account address: 0x04e93e1fb507d23b398f0a09f5873d3a7769b0e7ed40dbbe8fe7a2e8ea831006 Public key: 0x07a328511fa8552cd61aaaa89076fe40c3566f4594f29324aa754d41d7c7c55e Move the appropriate amount of funds to the account, and then deploy the account by invoking the 'starknet deploy_account' command. NOTE: This is a modified version of the OpenZeppelin account contract. The signature is computed differently. In order to pay the fees required to deploy the account and execute transactions on Starknet, you need enough ETH in your Starknet account. You can acquire Starknet Goerli ETH in the following ways: Use the Starknet Faucet to get small amounts of ETH directly to the account you have just created. This should suffice for simple transactions. Use StarkGate – the Starknet L2 bridge, to transfer your existing Goerli L1 ETH to and from your Starknet account. In either case, ensure that the funding transaction reaches the \"PENDING\" status on Starknet before proceeding. You can check the status of a transaction using the Starkscan or Voyager block explorers for Starknet. You can estimate the fee required to deploy your account by running the following command. To account for fluctuations in fee prices, it is recommended to transfer more than the fee estimation value to ensure that your transaction is successful. starknet deploy_account --simulate --account= The output should resemble: The estimated fee is: 822400000000000 WEI (0.000822 ETH). Gas usage: 8224 Gas price: 100000000000 WEI Alternatively you can run the following command for a less verbose output: starknet deploy_account --estimate_fee --account= To deploy the account you initialized, now run the following command: starknet deploy_account --account= The output should resemble: Sending the transaction with max_fee: 0.000563 ETH (562652117844076 WEI). Sent deploy account contract transaction. Contract address: 0x04e93e1fb507d23b398f0a09f5873d3a7769b0e7ed40dbbe8fe7a2e8ea811006 Transaction hash: 0x69192a77c527fb10a71722400dbad15bdb3a8db237db4f72e06f3b4b63f2195 You have now successfully deployed a new account to Starknet.","title":"Setting up a Starknet account","component":"documentation","version":"","name":"account_setup","url":"/documentation/quick_start/account_setup/","titles":[{"text":"Introduction","hash":"introduction","id":1},{"text":"Setting up the network","hash":"setting-up-the-network","id":2},{"text":"Choosing a wallet provider","hash":"choosing-a-wallet-provider","id":3},{"text":"Creating an account","hash":"creating-an-account","id":4},{"text":"Transferring Goerli ETH to the account","hash":"transferring-goerli-eth-to-the-account","id":5},{"text":"Simulate deploy account","hash":"simulate-account-deployment","id":6},{"text":"Deploying an account","hash":"deploying-an-account","id":7}]},"15":{"id":15,"text":"Setting up your local development environment to develop for Starknet involves the following steps: Installing the prerequisites. Installing the additional dependencies. Installing the Cairo CLI. Installing the Cairo compiler. Using a Python virtual environment is a good way to isolate your testing environment. To create and enter the Python virtual environment, do one of the following: Activate your Cairo virtual environment manually. Use the Python environment manager. Run the following two commands to manually create and activate a Cairo virtual environment: $ python3.9 -m venv ~/cairo_venv $ source ~/cairo_venv/bin/activate After creating and activating the virtual environment, you should see (cairo_venv) in the command line prompt, indicating that the virtual environment is active, for example: (cairo_venv) Alternatively, you can use the Python environment manager to create a virtual environment: $ curl https://pyenv.run | bash Now add the following to your .bashrc or .zshrc file: $ export PATH=\"$HOME/.pyenv/bin:$PATH\" $ eval \"$(pyenv init -)\" $ eval \"$(pyenv virtualenv-init -)\" Restart your terminal and run the following commands: $ pyenv install 3.9.0 $ pyenv virtualenv 3.9.0 cairo_venv $ pyenv activate cairo_venv you should see (cairo_venv) in the command line prompt, indicating that the virtual environment is active, for example: (cairo_venv) Depending on your operating system, you may need to install the following, additional dependencies: Dependency Description libgmp3-dev/gmp A software development library package for the GNU Multiple Precision Arithmetic Library. ECDSA (Elliptic Curve Digital Signature Algorithm) is a digital signature algorithm that is based on the mathematics of elliptic curves. FastECDSA An open-source software library that provides an implementation of the Elliptic Curve Digital Signature Algorithm (ECDSA) for use in cryptographic applications. It is designed to be fast, efficient, and easy to use, and is written in the Python programming language. SymPy A Python library for symbolic mathematics. On Ubuntu, you will need to run the following command to install the libgmp3-dev library: $ sudo apt install -y libgmp3-dev On macOS, you can use Homebrew to install the gmp library: $ brew install gmp After that, you need to install the ecdsa, fastecdsa and sympy dependencies (Linux and Mac): $ pip install ecdsa fastecdsa sympy You can interact with Starknet using the Cairo command line interface. If you had a previous version of Cairo is installed, uninstall it and install the latest version: $ pip uninstall cairo-lang You can use pip to install the latest version of Cairo: $ pip install cairo-lang Alternatively, you can download a specific version of Cairo using this command: $ pip install $HOME/Downloads/cairo-lang-0.12.0.zip Once you have installed the Cairo package, make sure to test your installation by running the following command: $ starknet --version You should see an output in your terminal similar to the below: $ starknet 0.12.0 Make sure the version output matches the latest release. The Cairo compiler allows you to compile Cairo code into Cairo VM executable byte code. To install the Cairo compiler, run the following commands: Go to your $HOME directory $ cd ~/ Clone the cairo Cairo 1 compiler to a folder called .cairo in your home directory $ git clone https://github.com/starkware-libs/cairo/ .cairo $ cd .cairo/ $ git checkout tags/v2.0.0 $ cargo build --all --release After building the Cairo binaries, add them to the PATH environment variable by adding the following line to your .bashrc or .zshrc file: $ export PATH=\"$HOME/.cairo/target/release:$PATH\" Then, open a new shell and check that the following command returns a version number: $ cairo-compile --version Your output should look similar to the below: $ cairo-lang-compiler 2.0.0 You are now able to compile, deploy and interact with smart contracts on Starknet","title":"Setting up the environment","component":"documentation","version":"","name":"environment_setup","url":"/documentation/quick_start/environment_setup/","titles":[{"text":"Overview","hash":"overview","id":1},{"text":"Installing the prerequisites","hash":"installing_the_prerequisites","id":2},{"text":"Manually activating the Cairo virtual environment","hash":"manually_activating_the_cairo_virtual_environment","id":3},{"text":"Using the Python environment manager to activate the Cairo virtual environment","hash":"using_the_python_environment_manager_to_activate_the_cairo_virtual_environment","id":4},{"text":"Installing the additional dependencies","hash":"installing_the_additional_dependencies","id":5},{"text":"Linux","hash":"linux","id":6},{"text":"macOS","hash":"macos","id":7},{"text":"Installing the Cairo CLI","hash":"installing_the_cairo_cli","id":8},{"text":"Uninstalling the previous version (optional)","hash":"uninstalling_the_previous_version_optional","id":9},{"text":"Installing the latest version of Cairo","hash":"installing_the_latest_version_of_cairo","id":10},{"text":"Installing the Cairo compiler","hash":"installing_the_cairo_compiler","id":11},{"text":"Cloning the repository and setting up the Cairo compiler","hash":"cloning_the_repository_and_setting_up_the_cairo_compiler","id":12},{"text":"Adding the Cairo executables to your path","hash":"adding_the_cairo_executables_to_your_path","id":13}]},"16":{"id":16,"text":"Starknet is a permissionless decentralized ZK-Rollup operating as an L2 network over Ethereum, where any dApp can achieve unlimited scale for its computation, without compromising Ethereum’s composability and security. Currently, Starknet’s first step, Starknet Alpha, is deployed. This tutorial walks you through writing and deploying a Starknet contract.","title":"Getting started","component":"documentation","version":"","name":"index","url":"/documentation/quick_start/","titles":[]},"17":{"id":17,"text":"The Starknet Book serves as a comprehensive walkthrough, providing valuable insights into the world of Starknet and Cairo. Designed to cater to various objectives and interests, this resource offers a curated selection of paths to guide your exploration. Whether you are a complete beginner starting from scratch or an experienced developer looking for specific insights, the Starknet Book has you covered. From smart contract development to frontend integration, node operation to security analysis, and even delving into the underlying architecture and cryptography, each chapter presents a focused and informative journey. Mix and match these paths to tailor your learning experience based on your unique interests and requirements. The Starknet Book is your trusted companion on the quest for deepening your understanding of the Starknet ecosystem. Visit the Starknet Book A comprehensive walkthrough of the world of Starknet and Cairo. Read more >","title":"The Starknet book","component":"documentation","version":"","name":"starknet-book","url":"/documentation/quick_start/starknet-book/","titles":[]},"18":{"id":18,"text":"The following features have been deprecated or removed from Starknet in recent releases. Status Description Deprecated Feature or capability is no longer actively supported. It may still work, but future fixes or enhancements are unlikely. Removed Feature or capability has been removed from Starknet. Name Description Starknet CLI The Starknet CLI will be deprecated soon and replaced by Starkli. Support for Starknet CLI will be removed in Starknet v0.13.0. Cairo 0 Starknet v0.11.0 introduces Cairo 1.0 smart contracts. Name Description Free L1→ L2 messaging Previously, sending a message from L1 to L2 had an optional fee associated. From Starknet v0.11.0, the fee mechanism is enforced and the ability to send L1→L2 messages without the corresponding L2 fee has been removed. See here for more details. invoke transaction v0 invoke transaction v0 has been removed since Starknet v0.11.0. declare transaction v0 declare transaction v0 has been removed since Starknet v0.11.0. deploy transaction The deploy transaction has been removed since Starknet v0.10.3. To deploy new contract instances, you can use the deploy system call.","title":"Deprecated and removed features","component":"documentation","version":"","name":"deprecated","url":"/documentation/starknet_versions/deprecated/","titles":[{"text":"Deprecated features","hash":"deprecated_features","id":1},{"text":"Removed features","hash":"removed_features","id":2}]},"19":{"id":19,"text":"The Starknet core contract 0xc662c410C0ECf747543f5bA90660f6ABeBD9C8c4 Verifier address 0x47312450B3Ac8b5b8e247a6bB6d523e7605bDb60 Sequencer base URL for API routing https://alpha-mainnet.starknet.io The Starknet core contract 0xde29d060D45901Fb19ED6C6e959EB22d8626708e Verifier address 0x8f97970aC5a9aa8D130d35146F5b59c4aef57963 Sequencer base URL for API routing https://alpha4.starknet.io The Starknet core contract 0xa4eD3aD27c294565cB0DCc993BDdCC75432D498c Verifier address 0x8f97970aC5a9aa8D130d35146F5b59c4aef57963 Sequencer base URL for API routing https://alpha4-2.starknet.io The tokens that are currently bridged to Starknet are listed in the following .json files: mainnet.json The addresses of the tokens currently bridged to Starknet Mainnet. goerli.json The addresses of the tokens currently bridged to Starknet testnet. goerli2.json The addresses of the tokens currently bridged to Starknet testnet2. Each token has the following parameters: Name Token name. Symbol Token symbol. Decimals Number of decimal places used to get the user representation. l1_token_address Address of the L1 ERC-20 contract. l2_token_address Address of the L2 ERC-20 contract. l1_bridge_address Address of the L1 bridge contract. l2_bridge_address Address of the L2 bridge contract.","title":"Important addresses","component":"documentation","version":"","name":"important_addresses","url":"/documentation/starknet_versions/important_addresses/","titles":[{"text":"Starknet Alpha on Mainnet","hash":"starknet_alpha_on_mainnet","id":1},{"text":"Starknet Alpha version on Goerli testnet 1","hash":"starknet_alpha_version_on_goerli_testnet_1","id":2},{"text":"Starknet Alpha version on Goerli testnet 2","hash":"starknet_alpha_version_on_goerli_testnet_2","id":3},{"text":"Bridged tokens","hash":"bridged_tokens","id":4}]},"20":{"id":20,"text":"Juno is a golang Starknet node implementation by Nethermind with the aim of decentralising Starknet. See the official Juno GitHub repository for more details. Log the incoming RPC requests in Pull Request #907 Update types for 0.12.1 in Pull Request #895 Parallelize per-contract storage updates in Pull Request #900 Add missing From field to rpc.MsgToL1 in Pull Request #908 This release has breaking changes and database is not compatible with the previous version. New RPC Methods: starknet_call starknet_estimateFee starknet_addDeclareTransaction starknet_addDeployAccountTransaction starknet_addInvokeTransaction juno_getTransactionStatus juno_version L1 Verifier: Verification of state from Layer 1 has been implemented. Block Reorg Detection and Handling: A feature to detect and handle block reorganizations has been implemented. gRPC Service: To accommodate users requiring direct access to the database, a gRPC service has been exposed. Database Migration: The system has been improved to handle database changes more gracefully. It’s no longer necessary to sync from the start when some database changes occur. Starknet v0.12.0 support: includes integration with the Rust VM. Performance Enhancements: Several adjustments and improvements have been made to increase the performance. These changes have resulted in ~30% reduction in sync time. Fetch and store compiled classes for each Sierra class. Updated the behavior of synced nodes, which will now return false to starknet_syncing. Resolved issue with NumAsHex(0) being omitted in RPC. Fixed a Goerli sync issue by relaxing decoder max array elements limit. Full Changelog: [v0.3.0…​v0.3.1] Starknet v0.11.2 support History for contracts, nonce, and class hash. Implemented StateSnapshot. New RPC endpoints: starknet_syncing starknet_getNonce starknet_getStorageAt starknet_getClassHashAt starknet_getClass starknet_getClassAt starknet_getEvents For new RPC endpoints to fully work with data before the new version, the node needs to be resynced. Optimized TransactionStorage encoding and refactored memStorage. Refactored RPC implementation for better organization and maintainability. Parallelized and refactored sync tests for faster execution, improved readability, and maintainability. Updated handling of non-existent keys to return a zero value. Full Changelog: v0.3.0…​v0.3.1 This patch release fixes handling of block versioning and ensures compatibility with non-sem-ver compliant Starknet. Ignore or add digits to block version string as necessary. Full Changelog: v0.2.1…​v0.2.2 This minor release introduces an important optimization that enhances sync performance. Update gnark-crypto version: Implement precomputed point multiplication results for Pedersen hash operations. Full Changelog: v0.2.0…​v0.2.1 This release adds support for Staknet v0.11.0. This release has breaking changes and database is not compatible with the previous version. Starknet v0.11.0 support: Add Poseidon hash for new state commitment. Add DeclareTransaction version 2. Add and Store Cairo 1/Sierra class definition and hash calculations. pprof option is added for profiling and monitoring. Verify Class Hashes. Starknet v0.11.0 support: Update InvokeTransaction version 1’s contract address to sender address. Update current JSON RPC endpoints to [v.0.3.0-rc1](https://github.com/starkware-libs/starknet-specs/tree/v0.3.0-rc1). Rename the verbosity option to log-level and log-level accepts string instead of uint8. See help for details. network option accepts string instead of uint8. See help for details. Database table is updated to account for Starknet v0.11.0 changes. Remove metrics and eth-node options since they are not used. Graceful shutdown: ensure all services have returned before exiting. Full Changelog: v0.1.0…​v0.2.0 This is Juno’s first release (compatible with Starknet v0.10.3) with the following features: Starknet state construction and storage using a path-based Merkle Patricia trie. Pedersen and starknet_keccak hash implementation over starknet field. Feeder gateway synchronisation of Blocks, Transactions, Receipts, State Updates and Classes. Block and Transaction hash verification. JSON-RPC Endpoints: starknet_chainId starknet_blockNumber starknet_blockHashAndNumber starknet_getBlockWithTxHashes starknet_getBlockWithTxs starknet_getTransactionByHash starknet_getTransactionReceipt starknet_getBlockTransactionCount starknet_getTransactionByBlockIdAndIndex starknet_getStateUpdate","title":"Juno versions","component":"documentation","version":"","name":"juno_versions","url":"/documentation/starknet_versions/juno_versions/","titles":[{"text":"v0.4.1 (latest)","hash":"v0_4_1_latest","id":1},{"text":"Added","hash":"added","id":2},{"text":"Changed","hash":"changed","id":3},{"text":"Fixed","hash":"fixed","id":4},{"text":"v0.4.0","hash":"v0_4_0","id":5},{"text":"Added","hash":"added_2","id":6},{"text":"Changed","hash":"changed_2","id":7},{"text":"v0.3.1","hash":"v0_3_1","id":8},{"text":"Added","hash":"added_3","id":9},{"text":"Changed","hash":"changed_3","id":10},{"text":"Fixed","hash":"fixed_2","id":11},{"text":"v0.3.0","hash":"v0_3_0","id":12},{"text":"Added","hash":"added_4","id":13},{"text":"Changed","hash":"changed_4","id":14},{"text":"Fixed","hash":"fixed_3","id":15},{"text":"v0.2.2","hash":"v0_2_2","id":16},{"text":"Fixed","hash":"fixed_4","id":17},{"text":"v0.2.1","hash":"v0_2_1","id":18},{"text":"v0.2.0","hash":"v0_2_0","id":19},{"text":"Added","hash":"added_5","id":20},{"text":"Changed","hash":"changed_5","id":21},{"text":"Removed","hash":"removed","id":22},{"text":"Fixed","hash":"fixed_5","id":23},{"text":"v0.1.0","hash":"v0_1_0","id":24}]},"21":{"id":21,"text":"Starknet alpha currently has a number of limits and triggers in place in order to keep the network stable and optimized for best performance. These are subject to revisions and change on a regular basis Table 1. StarkNet current limits and triggers Entity Goerli Mainnet Block limit (Cairo steps) 8M 8M Block limit (gas) 3M 3M Max transaction size (Cairo steps) 1M 1M Max contract bytecode size (No of felts in the program) 61440 61440 Max contract class size 20MB 20MB Mempool size limit No limitation 1000 transactions IP address limits (read) 100 per min 200 per min IP address limits (write) 10 per min / per ip address 10 per min / per ip address The execution of each transaction involves a certain number of computational steps. Starknet enforces a limit on the number of steps that can be completed within each block to ensure block production times remain consistent and predictable. Certain Starknet operations consume Ethereum gas, e.g L1/L2 messages. The current L1 state update mechanism involves an Ethereum transaction for each Starknet block. The gas limit for Starknet blocks is therefore inherited from the gas limit for Ethereum blocks. The gas limit for Starknet blocks is inherited from the gas limit for Ethereum blocks. The mempool contains transactions that have undergone a preliminary verification by the sequencer and are candidates for inclusion into a block. In order to reduce network spam, Starknet limits the amount of contract reads that a single IP address can make. In order to reduce network spam, Starknet limits the amount of contract writes that a single IP address can make.","title":"Current limits and triggers","component":"documentation","version":"","name":"limits_and_triggers","url":"/documentation/starknet_versions/limits_and_triggers/","titles":[{"text":"Block limit (Cairo steps)","hash":"block_limit_cairo_steps","id":1},{"text":"Block limit (gas)","hash":"block_limit_gas","id":2},{"text":"Mempool size limit","hash":"mempool_size_limit","id":3},{"text":"IP address limits (read)","hash":"ip_address_limits_read","id":4},{"text":"IP address limits (write)","hash":"ip_address_limits_write","id":5}]},"22":{"id":22,"text":"Pathfinder is a Starknet full node giving you a safe view into Starknet. It provides the following features: Access the full Starknet state history Verifies state using Ethereum Implements the Starknet JSON-RPC API Run Starknet functions without requiring a Starknet transaction Ability to do fee estimation for transactions See the official Pathfinder Github repository for more details. stack overflow while compiling Sierra to CASM pending data from the gateway is inconsistent this could exhibit as RPC data changing status between pending | L2 accepted | not found, especially noticeable for transactions. substantially increase the character limit of execution errors previously, the RPC would return a highly truncated error message from the execution vm Pending data is not polled for starknet v0.12 due to an HTTP error code change from the gateway. Transaction receipts missing from_address in MSG_TO_L1. Sierra class hash not in declared classes sync bug use all libfunc list instead of experimental for sierra compilation starknet_estimateMessageFee for JSON-RPC v0.3.1 to estimate message fee from L1 handler. sync-related metrics current_block: the currently sync’d block height of the node highest_block: the height of the block chain block_time: timestamp difference between the current block and its parent block_latency: delay between current block being published and sync’d locally block_download: time taken to download current block’s data excluding classes block_processing: time taken to process and store the current block configuration for new block polling interval: --sync.poll-interval Starknet v0.12.0 support sierra v2.0.0 support cairo-lang upgraded to 0.12.0a0 reorgs fail if a class declaration is included in the reorg sync can fail if db connection pool is held saturated by rpc queries uses finalized (reorg-safe) L1 state instead of latest starknet_getEvents times out for queries involving a large block range dropped upgrade support for pathfinder v0.4 and earlier separate db connection pools rpc, sync and storage increased the number of rpc db connections class hash mismatch for cairo 0 classes with non-ascii text starknet_simulateTransaction requires transactions instead of transaction as input field. gateway’s error message is hidden when submitting a failed transaction starknet_getEvents is very slow for certain filter combinations default RPC API version changed from v0.2 to v0.3 disallow JSON-RPC notification-style requests Starknet v0.11.2 support Sierra compiler v1.1.0-rc0 cairo-lang upgraded to 0.11.2a0 Subscription to newHead events via websocket using the method pathfinder_subscribe_newHeads, which can be managed by the following command line options rpc.websocket, which enables websocket transport rpc.websocket.capacity, which sets the maximum number of websocket subscriptions per subscription type Authors: [Shramee Srivastav](https://github.com/shramee) and [Matthieu Auger](https://github.com/matthieuauger) cairo-lang upgraded to 0.11.1.1 RPC emits connection logs and warnings Fee estimate mismatch between gateway and pathfinder Gateway uses a new gas price sampling algorithm which was incompatible with pathfinders. Fee estimate returns error when submitting Cairo 1.0.0-rc0 classes. Historic L1 handler transactions are served as Invoke V0 Older databases contain L1 handler transactions from before L1 handler was a specific transaction type. These were stored as Invoke V0. These are now correctly identified as being L1 Handler transactions. RPC emits connection logs and warnings Fee estimate mismatch between gateway and pathfinder Gateway uses a new gas price sampling algorithm which was incompatible with pathfinders. Historic L1 handler transactions are served as Invoke V0 Older databases contain L1 handler transactions from before L1 handler was a specific transaction type. These were stored as Invoke V0. These are now correctly identified as being L1 Handler transactions. The primary focus of this release is to provide support for Starknet v0.11.1, and will continue to work for v0.11.0. Since this release is required for v0.11.1, you should update your node before the network is updated. Starknet v0.11.1 support CORS support via the rpc.cors-domains configuration option Transaction hashes are now verified as part of the sync process. Previously, these were not verified as the exact algorithm was underdocumented and the transaction format was still evolving. RPC server panic for unprefixed unregistered method names Data can temporarily appear to go missing when transitioning from PENDING to ACCEPTED ON L2 This was commonly seen when rapidly monitoring a new transaction, which would go from PENDING to TXN_HASH_NOT_FOUND to ACCEPTED_ON_L2 as pathfinder moved the ephemeral pending data to latest data on disk. Fixes for minor issues and inconsistencies. max-rpc-connections command-line argument. This sets the maximum number incoming RPC connections the pathfinder node will accept. This defaults to 1024 if not specified. cairo-lang upgraded to 0.11.0.2 starknet_simulateTransaction data model inconsistency poll-pending default value restored to false incoming RPC connections limited to 100. This limit was accidentily introduced in v0.5.2 as part of a dependency upgrade, whereas before it was unlimited. The default is now 1024 and can be configured using --max-rpc-connections. handling of invalid JSON-RPC requests This release fixes a few RPC bugs and adds support for bulk fee estimation and transaction simulation (traces) as part of v0.3 RPC specification. In addition it also adds a pathfinder_getTransactionStatus endpoint which lets you track a transactions status — including REJECTED and RECEIVED — in the same fashion as the gateway. support starknet_estimateFee in the JSON-RPC v0.3 API supports estimating multiple transactions this includes declaring and immediately using a class (not currently possible via the gateway) support starknet_simulateTransaction for JSON-RPC v0.3 supports simulating multiple transactions this includes declaring and immediately using a class (not currently possible via the gateway) support pathfinder_getTransactionStatus which is exposed on all RPC routes this enables querying a transactions current status, including whether the gateway has received or rejected it RPC returns int for entrypoint offsets instead of hex RPC rejects Fee values with more than 32 digits RPC does not expose pathfinder_getProof on v0.3 route This is a minor bugfix release, primarily to fix an issue with syncing on testnet2. pathfinder sometimes spams nethermind L1 nodes pathfinder stops syncing testnet2 at block 95220 due to a Sierra class compilation issue starknet v0.11.0 support RPC API v0.3 partial support removed several deprecated config options requires python 3.9 or 3.10 (no longer 3.8) support for state commitment and class commitment in pathfinder_getProof support for starknet v0.11 partial support for RPC specification v0.3 exposed on /rpc/v0.3/ route missing support for starknet_estimateFee and starknet_simulate starknet_call and starknet_estimateFee JSON-RPC methods return more detailed error messages python version requirement has changed to 3.9 or 3.10 (was 3.8 or 3.9 previously) RPC accepts hex inputs for Felt without '0x' prefix. This led to confusion especially when passing in a decimal string which would get silently interpretted as hex. using a Nethermind Ethereum endpoint occasionally causes errors such as could not be found to be logged. sync can miss new block events by getting stuck waiting for pending data. --config configuration option (deprecated in [v0.4.1](https://github.com/eqlabs/pathfinder/releases/tag/v0.4.1)) --integration configuration option (deprecated in [v0.4.1](https://github.com/eqlabs/pathfinder/releases/tag/v0.4.1)) --sequencer-url configuration option (deprecated in [v0.4.1](https://github.com/eqlabs/pathfinder/releases/tag/v0.4.1)) --testnet2 configuration option (deprecated in [v0.4.1](https://github.com/eqlabs/pathfinder/releases/tag/v0.4.1)) starknet_addDeployTransaction as this is no longer an allowed transaction since starknet v0.10.3 RPC api version 0.1, which used to be served on path /rpc/v0.1 We added support for v0.3 and removed v0.1. We still support v0.2 at both /rpc/v0.2 and /rpc (default) routes. In summary: / # serves v0.2 /rpc/v0.2/ # serves v0.2 /rpc/v0.3/ # serves v0.3 We are missing starknet_estimateFee and starknet_simulate support for v0.3, which will be added in an upcoming release. Note: this only applies if you are building from source. This does not impact docker users. Pathfinder requires python to support the starknet VM used to simulate starknet transactions and function calls. Previous versions of the VM only worked with python 3.8 or 3.9 which was a hassle because most operating systems no longer directly support it. The new version of the VM bundled with starknet v0.11 now requires python version 3.9 or 3.10. Several configuration options are now removed, after they were deprecated in pathfinder v0.4.1. Here is a migration guide: --testnet2: use --network testnet2 instead --integration: use --network integration instead --sequencer-url: use --network custom in combination with --feeder-gateway-url and gateway-url --config: use environment variables or env files as an alternative Hotfix for a bug introduced in the previous version v0.4.4, which prevented a new node from syncing on blocks near genesis. Added Newton FAQ links to readme Node fails to sync old blocks @SecurityQQ made their first contribution in #799 This minor release contains some nice performance improvements for starknet_call and starknet_estimateFee as well as some minor bug fixes. Also included is a major new feature: storage proofs - big thanks @pscott for his hard work on this feature! This is available via the pathfinder_getProof method which is served from both the pathfinder and Starknet endpoints for convenience: /rpc/pathfinder/v0.1/pathfinder_getProof /rpc/v0.2/pathfinder_getProof The method is specified here. Its results can be used to formally verify what a contract’s storage values are without trusting the pathfinder node. This is achieved by validating the merkle-proof that pathfinder returns and confirming that it correctly matches the known Starknet state root. storage proofs via pathfinder_getProof by @pscott starknet_getEvents returns all events when from_block=\"latest\" v0.1 starknet_getStateUpdate does not contain nonces Improved performance for starknet_call and starknet_estimateFee by caching classes Improved performance for starknet_call and starknet_estimateFee by using Rust for hashing @pscott made their first contribution in #726 The primary purpose of this release is to properly support testnet2 after the Starknet v0.10.3 update. The v0.10.3 update changed the testnet2 chain ID which impacts transaction signatures which in turn meant that starknet_estimateFee would fail for any signed transaction. This release updates pathfinder to use the correct chain ID. Testnet2 and integration flags are ignored starknet_estimateFee uses wrong chain ID for testnet2 Updated to cairo-lang 0.10.3 Contains several bug fixes, mostly hotfixes for bugs introduced in v0.4.1. Document that --chain-id expects text as input Testnet2 and integration L1 addresses are swapped (bug introduced in v0.4.1) Proxy network setups can’t sync historical blocks (bug introduced in v0.4.1) ABI serialization for starknet_estimateFee for declare transactions Soft deprecation of some configuration options Support custom Starknet gateways Pathfinder RPC extensions at /rpc/pathfinder/ with pathfinder_version method starknet_events optimisations fix block timestamp in pending calls Custom Starknet gateway support This release introduces support for custom Starknets. You can select this network by setting --network custom and specifying the --gateway-url and --feeder-gateway-url options. Several configuration options have been soft deprecated. This means using them will continue to work as before (no breaking change), but they will emit a warning when used. They will be removed in a future version, so please migrate to the newer options. To re-emphasize: your current configuration setup will continue to work as is. --testnet2 and --integration have been deprecated in favor of --network testnet2 and --network integration. --sequencer-url has been deprecated in favor of --network custom along with --gateway-url, --feeder-gateway-url and --chain-id. In addition, you will need to rename your existing database file to custom.sqlite as this will be the expected filename for custom networks. --config has been deprecated and will not be supported in the future. The utility this provided was valuable. Unfortunately it is starting to severely hinder how fast we can implement configuration changes and we decided to remove it. We suggest using environment variables along with environment files to configure pathfinder in a similar fashion. The following configuration options are now marked as deprecated: --testnet2, --integration, --config, --sequencer-url Optimized starknet_events for queries with both a block range and a from address Block timestamps for pending in starknet_call and starknet_estimateFee were using the latest timestamp instead of the pending one. This meant contracts relying on accurate timestamps could sometimes fail unexpectedly. Custom Starknet support Pathfinder specific RPC extensions hosted at /rpc/pathfinder/v0.1. Currently, this only contains pathfinder_version which returns the pathfinder version of the node. This release contains a breaking change, and also adds support for Starknet v0.10.2. The changes themselves are quite simple, but please read through each section as there are some caveats which might impact you when you apply this update. This release changes the version of the RPC that is served at the root route, from v0.1 to v0.2 of the RPC specification. Version v0.1 is still available at the /rpc/v0.1/ endpoint. This is the only breaking change in this release. Here is a summary of what routes are currently available, and what’s changed: / serves v0.2 (changed from v0.1) /rpc/v0.1 serves v0.1 (no change) /rpc/v0.2 serves v0.2 (no change) If possible, we recommend that you use the version specific routes as this will prevent such breaking changes from impacting you. This release includes an update to the cairo-vm embedded in pathfinder in order to support the upcoming v0.10.2 Starknet release. This bundled vm is a pre-release and may therefore contain differences to the final version used once Starknet updates testnet and mainnet. We will of course issue a new release if / when there is a new vm. Since these changes are not yet live on testnet nor mainnet, this means upgrading to this release will cause deviations between what pathfinder outputs and what can be expected on the network. More specifically, starknet_estimateFee will compute different fees until the network has upgraded to Starknet v0.10.2. If you don’t need the RPC route changes, it may be pertinent to delay updating until closer to the v0.10.2 release dates on testnet and mainnet. The expected timeline for these upgrades is ~17/11 for testnets and ~24/11 for mainnet.","title":"Pathfinder versions","component":"documentation","version":"","name":"pathfinder_versions","url":"/documentation/starknet_versions/pathfinder_versions/","titles":[{"text":"[0.6.6] - 2023-07-10  (latest)","hash":"0_6_6_2023_07_10_latest","id":1},{"text":"Fixed","hash":"fixed","id":2},{"text":"[0.6.5] - 2023-07-07","hash":"0_6_5_2023_07_07","id":3},{"text":"Fixed","hash":"fixed_2","id":4},{"text":"Changed","hash":"changed","id":5},{"text":"[0.6.4] - 2023-07-05","hash":"0_6_4_2023_07_05","id":6},{"text":"Fixed","hash":"fixed_3","id":7},{"text":"[0.6.3] - 2023-06-29","hash":"0_6_3_2023_06_29","id":8},{"text":"Fixed","hash":"fixed_4","id":9},{"text":"Changed","hash":"changed_2","id":10},{"text":"[0.6.2] - 2023-06-29","hash":"0_6_2_2023_06_29","id":11},{"text":"Added","hash":"added","id":12},{"text":"Fixed","hash":"fixed_5","id":13},{"text":"Changed","hash":"changed_3","id":14},{"text":"[0.6.1] - 2023-06-18","hash":"0_6_1_2023_06_18","id":15},{"text":"Fixed","hash":"fixed_6","id":16},{"text":"[0.6.0] - 2023-06-14","hash":"0_6_0_2023_06_14","id":17},{"text":"Fixed","hash":"fixed_7","id":18},{"text":"Changed","hash":"changed_4","id":19},{"text":"[0.5.6] - 2023-05-25","hash":"0_5_6_2023_05_25","id":20},{"text":"Added","hash":"added_2","id":21},{"text":"[0.5.5] - 2023-05-18","hash":"0_5_5_2023_05_18","id":22},{"text":"Added","hash":"added_3","id":23},{"text":"Fixed","hash":"fixed_8","id":24},{"text":"Fixed","hash":"fixed_9","id":25},{"text":"v0.5.4","hash":"v0_5_4","id":26},{"text":"Added","hash":"added_4","id":27},{"text":"Fixed","hash":"fixed_10","id":28},{"text":"v0.5.3","hash":"v0_5_3","id":29},{"text":"Added","hash":"added_5","id":30},{"text":"Fixed","hash":"fixed_11","id":31},{"text":"v0.5.2","hash":"v0_5_2","id":32},{"text":"Added","hash":"added_6","id":33},{"text":"Fixed","hash":"fixed_12","id":34},{"text":"v0.5.1","hash":"v0_5_1","id":35},{"text":"Fixed","hash":"fixed_13","id":36},{"text":"v0.5.0","hash":"v0_5_0","id":37},{"text":"Highlights","hash":"highlights","id":38},{"text":"Added","hash":"added_7","id":39},{"text":"Changed","hash":"changed_5","id":40},{"text":"Fixed","hash":"fixed_14","id":41},{"text":"Removed","hash":"removed","id":42},{"text":"RPC API","hash":"rpc_api","id":43},{"text":"Python requirement","hash":"python_requirement","id":44},{"text":"Configuration changes","hash":"configuration_changes","id":45},{"text":"v0.4.5","hash":"v0_4_5","id":46},{"text":"Added","hash":"added_8","id":47},{"text":"Fixed","hash":"fixed_15","id":48},{"text":"New contributors","hash":"new_contributors","id":49},{"text":"v0.4.4","hash":"v0_4_4","id":50},{"text":"Added","hash":"added_9","id":51},{"text":"Fixed","hash":"fixed_16","id":52},{"text":"Changed","hash":"changed_6","id":53},{"text":"New contributors","hash":"new_contributors_2","id":54},{"text":"v0.4.3","hash":"v0_4_3","id":55},{"text":"Fixed","hash":"fixed_17","id":56},{"text":"Changed","hash":"changed_7","id":57},{"text":"v0.4.2","hash":"v0_4_2","id":58},{"text":"Added","hash":"added_10","id":59},{"text":"Fixed","hash":"fixed_18","id":60},{"text":"v0.4.1","hash":"v0_4_1","id":61},{"text":"Highlights","hash":"highlights_2","id":62},{"text":"Configuration option deprecation","hash":"configuration_option_deprecation","id":63},{"text":"Network selection","hash":"network_selection","id":64},{"text":"Gateway proxy","hash":"gateway_proxy","id":65},{"text":"Configuration file","hash":"configuration_file","id":66},{"text":"Changed","hash":"changed_8","id":67},{"text":"Fixed","hash":"fixed_19","id":68},{"text":"Added","hash":"added_11","id":69},{"text":"v0.4.0- (breaking release)","hash":"v0_4_0_breaking_release","id":70},{"text":"Default RPC version change","hash":"default_rpc_version_change","id":71},{"text":"Starknet v0.10.2 support","hash":"starknet_v0_10_2_support","id":72}]},"23":{"id":23,"text":"The focus of Starknet v0.12.1 is on improving the efficiency of the sequencer capacity. The proposed changes aim to address the issue of processing failed transactions and optimize the network’s potential for valid transactions. A validation stage will be added to the mempool to prevent invalid transactions from consuming valuable sequencer time. Only valid transactions will proceed further in the processing pipeline. Failed transactions during the execution stage will be included in the block with the status \"REVERTED\" and the user will be charged for the consumed resources. This inclusion ensures transparency and allows developers to analyze the reasons for transaction failures. These enhancements will significantly improve the efficiency of the sequencer capacity and optimize the processing potential of Starknet for valid transactions. A new builtin, the Keccak builtin, will be supported on Starknet starting from version v0.12.1. This means that the Keccak function will be available for use within the Starknet network, providing additional functionality and capabilities to developers and users.","title":"Upcoming Starknet versions","component":"documentation","version":"","name":"upcoming_versions","url":"/documentation/starknet_versions/upcoming_versions/","titles":[{"text":"Starknet Alpha v0.12.1","hash":"starknet_alpha_v0_12_1","id":1},{"text":"What to expect","hash":"what_to_expect","id":2},{"text":"Notable changes","hash":"notable_changes","id":3},{"text":"Mempool Validation:","hash":"mempool_validation","id":4},{"text":"Inclusion of Failed Transactions:","hash":"inclusion_of_failed_transactions","id":5},{"text":"Keccak builtins:","hash":"keccak_builtins","id":6}]},"24":{"id":24,"text":"The following version notes cover the ongoing version changes to Starknet. To get the latest version updates delivered to you, please subscribe to our mailing list here. Within Starknet’s deployment pipeline there are separate and distinct networks that operate independently of each other for testing before deployment. The current version on each environment are listed within the table below: Environment Starknet version Cairo version Mainnet 0.12.0 2.0.0 Goerli Testnet 1 0.12.0 2.0.0 Goerli Testnet 2 0.12.0 2.0.0 Starknet v0.12.0 is live on Mainnet. This version contains the following changes: Use the rust blockifier and LambdaClass’s Cairo VM to accelerate the sequencer’s time to handle transactions. Support version 2.0.0 of the Cairo compiler. Replace the PENDING status of transactions to ACCEPTED_ON_L2 - once a transaction is in that status it means that it will be included in a block, this applies to transactions - blocks still have the PENDING status. Add an experimental get_block_hash syscall. Change HTTP error code from 500 to 400 on API errors. Starknet v0.11.2 is live on Mainnet. This version contains the following changes: Upgrade Cairo 1.0 version to v1.0.0-rc0 (Cairo 1.0 activated on Starknet!) Starknet v0.11.1 is live on Mainnet. This version contains the following changes: Upgrade Cairo 1.0 version to v1.0.0-rc0. Charged transaction fee is now based on an average Ethereum gas price instead of a single sample (estimation API is unaffected). API changes: Remove the state root in get_state_update for pending blocks to allow faster responses in future versions. Testing framework: Allow declaring (and interacting with) Cairo 1.0 contracts. Currently, the Cairo 1.0 ABI is not supported yet, so a Cairo 0 ABI should be supplied to declare() manually. Split deploy() to two phases declare and deploy: deprecated_declare() (for Cairo 0 contract) or declare() (for Cairo 1.0 contracts) and deploy() (for both). Add current block hash to the Starknet Core contract (currently not verified by the Starknet OS): Breaking change: The LogStateUpdate event’s data is changed to include blockHash. Starknet v0.11.0 is live on Mainnet. invoke and declare transactions of version 0 are no longer supported on this version. In Starknet v0.11.0, you can declare, deploy and run Cairo 1.0 smart contracts. We also introduce a new system call that allows a smooth transitioning of existing contracts to a Cairo 1.0 implementation. Historically, contract classes have been defined in terms of Cairo assembly, or Casm for short (the class definition also included more information needed for execution, e.g., hint data). The novelty of Cairo 1.0 is the introduction of Sierra (Safe Intermediate Representation), an intermediate layer between Cairo 1.0 and Casm. The introduction of Cairo 1.0 and Sierra has several effects on the system. Below we list the effects on each component; of particular note are: A new version of the declare transaction, which allows sending the new class structure The state commitment will now include contract classes Changes to the on-chain data format New system call - replace_class The deploy transaction is no longer supported on this version. This version contains the following changes: Starknet Performance - Separate the state commitment computation from the execution of the transactions Add starknet-class-hash command to compute the class hash of a compiled Starknet contract Cairo: Autoformatter: Automatically break lines inside expressions This version introduces sequencer parallelization! This is the first step in our roadmap of performance upgrades. Details about the specific mechanism of parallelization and the roadmap in general are described in this medium post. A new endpoint, estimate_fee_bulk, is added to the feeder gateway. This will allow estimating the fee of several transactions at once, where each transaction is executed relative to the resulting state from applying the previous one. Sequencing performance improvements Builtin ratio changes, which affects builtin costs Add estimate_fee_bulk API that computes the fee of multiple transactions that will be executed consecutively As part of this version, we will also increase the finality of transactions in the pending block, by fixing the timestamp at the time of the block creation. This will solve the issue of transactions moving from pending to rejected on account of too old timestamp This version contains the following changes: Starknet: Add DeployAccount transaction (which will replace the Deploy transaction for deploying account contracts). To use it, you should first add enough funds to your account address to pay the transaction fee, and then you can invoke DeployAccount Split the starknet deploy_account CLI command into starknet new_account and starknet deploy_account Account contracts that are expected to be deployed this way should implement the`validate_deploy()` entry point, which should check the signature of the DeployAccount transaction Improve L1 fee computation: the fee is computed according to the diff of the storage state API: Remove entry_point_type field from transaction information Cairo: Add uint256_mul_div_mod to uint256.cairo This version introduces the next step in Starknet’s account abstraction design, specifically the validate/execute separation. See here for more information. This version contains the following changes: Starknet: Contract (breaking changes): @external and @view functions should be imported directly by the main compiled file. Otherwise, they will not be usable as external functions Forbid using the same storage variable name in two modules New transaction version (version 1) for invoke and declare transactions: Transactions of version 0 are deprecated and will not be supported in Starknet from the next version (v0.11.0). Please update your systems to use the new version In order to use transactions of version 1 you will need to upgrade your account contracts Add nonce field to the transactions. Nonce validation is now part of the Starknet protocol and is enforced to be executed sequentially Invoke: Split execute to two functions:` validate` (only validates the transaction) and execute (only executes the transaction) Remove the selector (which is now always execute) field, following the above change. Declare: declare transaction should now be sent from an account (and is validated using validate_declare in the account contract) Support fee for sending L1 messages. At this point, it’s not mandatory and messages with no fee will still be handled. Starting from the next version it will become mandatory. Cairo: Syntax changes in Cairo (to make it more similar to rust and C++): You can use the cairo-migrate script to convert old code to the new syntax. Use the -i flag to apply the changes to the files End statements with ; New lines are still part of the language at this point, and you cannot put more than one instruction per line. This will change in Cairo1.0. Use { … } for code blocks (instead of : and end) Add () around the condition of if statements Remove the member keyword in structs Change comment to use // instead of # Use …​, ap` instead of `...; ap in low level Cairo code Support return types that are not tuples. For example, func foo() → felt (instead of func foo() → (r: felt)) As a result, it’s now mandatory to specify return types. func foo() → (res) should be replaced by func foo() → (res: felt). The cairo-migrate tool does that automatically. Return statement accepts expressions, rather than only tuples. For example, you can write let x = (5,); return x; A few standard library functions were changed to return felt. The cairo-migrate script also fixes calls to those functions Support using functions as expressions This only applies to functions with → felt signature`, whose ap change is known at compile-time (e.g., recursive functions cannot be used this way) Fix a bug in the secp signature verification code that allowed a malicious prover to ignore the value of v (this does not let the prover fake a signature, but allows it to claim that a valid signature is invalid). Add Cairo code for the recursive STARK verifier Technical changes: * Move from python3.7 to python3.9 This version contains the following changes: Starknet: API changes: Add get_block_traces API - returns all the transaction traces of a given block Add a list of declared contracts in get_state_update Add a 0x prefix for class hash in the API Add starknet_version field for blocks (only applies to new blocks) Starknet CLI: Change the default block number to pending Using a wallet is the default, --no_wallet must be specified explicitly to override this Deploying contracts: Add deploy_contract function to the account contract created by starknet deploy_account Use this function to deploy contract (unless using --no_wallet). In particular, deploy should be used after declaring the contract (it expects the contract class hash) Support --dry_run to get the transaction information without signing or sending it Support deploy_from_zero in the deploy syscall to deploy a contract to an address that does not depend on the deployer Cairo: * Support and in if statements (if x == y and z == w). At the moment other boolean combinations are not supported This version introduces the contract class/instance paradigm into Starknet. See here for more information. This version contains the following changes: Starknet: Enforce fees - max_fee must not be set to zero, and selector must be execute Split the concepts of contract class and contract instance. Add declare transaction type New API and CLI commands: declare - Declares a contract class get_class_by_hash - Returns the contract class given its hash get_class_hash_at - Returns the class hash for a given contract instance address Rename delegate_call to library_call, and change the contract address argument to class hash. Add a deploy system call. Rename ContractDefinition to ContractClass Reduce the compiled contract file’s size by removing unnecessary identifiers (this optimization can be disabled using --dont_filter_identifiers) Cairo: Initial support for the EC-op builtin (scalar multiplication over the STARK curve). Not supported in Starknet yet. Add additional helper methods to blake2s.cairo, including big-endian support Technical changes: * Change function’s return type from a struct to a named tuple. In particular, foo.Return.SIZE is no longer supported.","title":"Version notes","component":"documentation","version":"","name":"version_notes","url":"/documentation/starknet_versions/version_notes/","titles":[{"text":"Starknet environments","hash":"starknet_environments","id":1},{"text":"Starknet v0.12.0 (July 12th, 23)","hash":"version0.12.0","id":2},{"text":"Starknet v0.11.2 (May 31, 23)","hash":"version0.11.2","id":3},{"text":"Starknet v0.11.1 (May 23, 23)","hash":"version0.11.1","id":4},{"text":"Starknet v0.11.0 (Mar 29, 23)","hash":"version0.11.0","id":5},{"text":"Starknet v0.10.3 (Dec 12, 22)","hash":"version0.10.3","id":6},{"text":"Starknet v0.10.2 (Nov 29, 22)","hash":"version0.10.2","id":7},{"text":"Starknet v0.10.1 (Oct 25, 22)","hash":"version0.10.1","id":8},{"text":"Starknet v0.10.0 (Sept 05, 22)","hash":"version0.10.0","id":9},{"text":"Starknet v0.9.1 (July 20, 22)","hash":"version0.9.1","id":10},{"text":"Starknet v0.9.0 (June 06, 22)","hash":"version0.9.0","id":11}]},"25":{"id":25,"text":"A list of recommended full-node & API providers. Table 1. API providers Provider name Description More information Alchemy An API service for Starknet www.alchemy.com/starknet Bware labs An API service for Starknet blastapi.io/public-api/starknet Chainstack An API service for Starknet chainstack.com/build-better-with-starknet Infura An API service for Starknet www.infura.io/networks/ethereum/starknet Lava Protocol An open-source protocol for reliable access to RPC data www.lavanet.xyz Table 2. Node providers Provider name Description More information Juno A Starknet full-node written in go-lang by Nethermind github.com/NethermindEth/juno Papyrus A Starknet full-node written in Rust by StarkWare github.com/starkware-libs/papyrus Pathfinder A Starknet full-node written in Rust by Equilibrium github.com/eqlabs/pathfinder","title":"Full-nodes & API services","component":"documentation","version":"","name":"api-services","url":"/documentation/tools/api-services/","titles":[]},"26":{"id":26,"text":"Building a Starknet project and want your contract to be audited? The companies listed below have designated teams that provide auditing services to Starknet contracts. Table 1. A list of companies providing contract audits for Starknet Company name URL ABDK www.abdk.consulting Chain Security chainsecurity.com Consensys Diligence consensys.net/diligence Extropy security.extropy.io Nethermind nethermind.io Open Zeppelin www.openzeppelin.com PeckShield peckshield.com Trail of Bits www.trailofbits.com Zellic www.zellic.io Ginger Security gingersec.xyz","title":"Audit service providers","component":"documentation","version":"","name":"audit","url":"/documentation/tools/audit/","titles":[]},"27":{"id":27,"text":"A block explorer, or blockchain explorer, enables you to see transactions, blockchain metrics and other information. The following block explorers provide information on Starknet. Table 1. Starknet block explorers, in alphabetical order Block explorer name URL Starkscan https://starkscan.co ViewBlock https://v2.viewblock.io/starknet Voyager https://voyager.online","title":"Starknet block explorers","component":"documentation","version":"","name":"ref_block_explorers","url":"/documentation/tools/ref_block_explorers/","titles":[]},"28":{"id":28,"text":"A list of recommended full-nodes & API providers. Table 1. Node providers Provider name Description More information Juno A Starknet full-node written in go-lang by Nethermind github.com/NethermindEth/juno Papyrus A Starknet full-node written in Rust by StarkWare github.com/starkware-libs/papyrus Pathfinder A Starknet full-node written in Rust by Equilibrium github.com/eqlabs/pathfinder Table 2. API providers Provider name Description More information Alchemy An API service for Starknet www.alchemy.com/starknet Bware labs An API service for Starknet blastapi.io/public-api/starknet Chainstack An API service for Starknet chainstack.com/build-better-with-starknet Infura An API service for Starknet www.infura.io/networks/ethereum/starknet Lava Protocol An open-source protocol for reliable access to RPC data www.lavanet.xyz","title":"Full-nodes & API services","component":"documentation","version":"","name":"rpc","url":"/documentation/tools/rpc/","titles":[]},"29":{"id":29,"text":"Up until Starknet Alpha v0.11.0 users would write contracts in Cairo 0 and compile them locally to Cairo assembly (or Casm for short). Next, the user would submit the compilation output (the contract class) to the Starknet sequencer via a declare transaction. With Cairo 1.0, the contract class resulting from compiling Cairo 1.0 does not include Casm. Instead of Casm, it includes instructions in an intermediate representation called Sierra (Safe Intermediate Representation). This new contract class is then compiled by the sequencer, via the Sierra → Casm compiler, to generate the Cairo assembly associated with this class. Starknet is a validity rollup, which means that the execution inside every block needs to be proven, and this is where STARKs come in handy. However, STARK proofs can address statements that are formulated in the language of polynomial constraints, and have no knowledge of smart contract execution. To overcome this gap, we developed Cairo. Cairo instructions (which we referred to previously by Casm) are translated to polynomial constraints that enforce the correct execution of a program (according to the Cairo semantics defined in the paper). Thanks to Cairo, we can formulate the statement \"this Starknet block is valid\" in a way that we can prove. Note that we can only prove things about Casm. That is, regardless of what the user sends to the Starknet sequencer, what’s proven is the correct Casm execution. This means that we need a way to translate Sierra into Casm, and this is achieved with the Sierra → Casm compiler. To understand why we chose to add an additional layer between the code that the user writes (Cairo 1.0) and the code that is being proven (Casm), we need to consider more components in the system, and the limitations of Cairo. A crucial property of every decentralized L2 is that the sequencers are guaranteed to be compensated for work they do. The notion of reverted transactions is a good example: even if the user’s transaction failed mid execution, the sequencer should be able to include it in a block and charge execution fees up to the point of failure. If the sequencer cannot charge for such transactions, then sending transactions that will eventually fail (after a lot of computation steps) is an obvious DOS attack on the sequencer. The sequencer cannot look at a transaction and conclude that it would fail without actually doing the work (this is equivalent to solving the halting problem). The obvious solution to the above predicament is to include such transactions in the block, similar to Ethereum. However, this may not be as simple to do in a validity rollup. With Cairo 0, there is no separating layer between user code and what is being proven. This means that users can write code which is unprovable in some cases. In fact, such code is very easy to write, e.g. assert 0=1 is a valid Cairo instruction that cannot be proven, as it translates to polynomial constraints that are not satisfiable. Any Casm execution that contains this instruction cannot be proven. Sierra is the layer between user code and the provable statement, that allows us to make sure all transactions are eventually provable. The method by which Sierra guarantees that user code is always provable is by compiling Sierra instructions to a subset of Casm, which we call \"safe Casm\". The important property that we require from safe Casm is being provable for all inputs. A canonical example for safe Casm is using if/else instructions instead of assert, that is, making sure all failures are graceful. To better understand the considerations that go into designing the Sierra → Casm compiler, consider the find_element function from the common library of Cairo 0: func find_element{range_check_ptr}(array_ptr: felt*, elm_size, n_elms, key) -> (elm_ptr: felt*) { alloc_locals; local index; %{ ... %} assert_nn_le(a=index, b=n_elms - 1); tempvar elm_ptr = array_ptr + elm_size * index; assert [elm_ptr] = key; return (elm_ptr=elm_ptr); } Below we abuse the \"Casm\" notation by not distinguishing Cairo 0 from Casm and referring to the above as Casm (while we actually refer to the compilation result of the above). For brevity, we have omitted the hint in the above snippet, but it’s clear that this function can only execute correctly if the requested element exists in the array (otherwise it would fail for every possible hint - there is nothing we can substitute index for, that makes the following lines run successfully). Such Casm cannot be generated by the Sierra→Casm compiler. Furthermore, simply replacing the assertion with an if/else statement doesn’t do, as this results in non-deterministic execution. That is, for the same input, different hint values can yield different results. A malicious prover can use this freedom to harm the user - in this example, they are able to make it seem as if an element isn’t part of the array, even though it actually is. The safe Casm for finding an element in an array behaves like the above snippet in the happy flow (element is there): an index is given in a hint, and we verify that the array at the hinted index contains the requested element. However, in the unhappy flow (element isn’t there), we must go over the entire array to verify this. This was not the case in Cairo 0, as we were fine with certain paths not being provable (in the above snippet, the unhappy flow in which the element isn’t in the array is never provable). Sierra’s gas metering adds further complications to the above example. Even looking through the array to verify that the element isn’t there may leave some flexibility to the prover. If we take gas limitations into consideration, the user may have enough gas for the happy flow, but not for the unhappy one, making the execution stop mid-search, and allowing the prover to get away with lying about the element not being present. The way we plan to handle this is by requiring the user to have enough gas for the unhappy flow before actually calling find_element. Smart contracts written with Cairo 1.0 cannot contain user defined hints. This is already true with Cairo 0 contracts (only whitelisted hints are accepted), but with Cairo 1.0 the hints in use are determined by the Sierra → Casm compiler. Since this compilation is there to ensure that only \"safe\" Casm is generated, there is no room for hints that are not generated by the compiler. In the future, native Cairo 1.0 may contain hint syntax similar to Cairo 0, but it will not be available in Starknet smart contracts (L3s on top of Starknet may make use of such functionality). Note that this is currently not part of Starknet’s roadmap.","title":"Cairo 1.0 and Sierra","component":"documentation","version":"","name":"cairo-1-and-sierra","url":"/documentation/Cairo/Cairo_on_Starknet/cairo-1-and-sierra/","titles":[{"text":"Why do we need Casm?","hash":"why_do_we_need_casm","id":1},{"text":"Why do we need Sierra?","hash":"why_do_we_need_sierra","id":2},{"text":"Reverted transactions, unsatisfiable AIRs, and DOS attacks","hash":"reverted_transactions_unsatisfiable_airs_and_dos_attacks","id":3},{"text":"Safe Casm","hash":"safe_casm","id":4},{"text":"Hints in Cairo 1.0","hash":"hints_in_cairo_1_0","id":5}]},"30":{"id":30,"text":"With the v2.0.0 release of the Cairo compiler, the Starknet contract syntax has evolved. This affects how external functions, storage, and events are organized inside the contract. This page highlights the technical steps required to migrate from the old Starknet contract syntax to the new. For a comprehensive breakdown of the changes, see the community forum post. Given a contract written with the previous compiler version (v1.1.0), you can follow the steps below in order to make it compatible with the new syntax. Outside the contract module, Starknet related attributes are expected to have the starknet:: prefix. old new #[contract] mod CounterContract { ... } #[starknet::contract] mod CounterContract { ... } Anotate the Storage struct with the #[storage] attribute old new struct Storage { counter: u128, other_contract: IOtherContractDispatcher } #[storage] struct Storage { counter: u128, other_contract: IOtherContractDispatcher } Gather your contract’s external and view function signatures under a trait annotated with #[starknet::interface]: Add a generic parameter to the trait, here we use the name TContractState as it stands for the state of your contract For view functions, add the self: @TContractState argument For external functions, add the ref self: TContractState argument Static functions that do not touch storage or emit events do not require an addition argument old new #[contract] mod CounterContract { #[external] fn increase_counter(amount: u128) { ... } #[external] fn decrease_counter(amount: u128) { ... } #[view] fn get_counter() -> u128 { ... } } #[starknet::interface] trait ICounterContract { fn increase_counter(ref self: TContractState, amount: u128); fn decrease_counter(ref self: TContractState, amount: u128); fn get_counter(self: @TContractState) -> u128; } #[starknet::contract] mod CounterContract { ... } Add the external and view function bodies under an impl of the interface trait, and mark the impl with the [external(v0)] attribute old new #[contract] mod CounterContract { #[external] fn increase_counter(amount: u128) { ... } #[external] fn decrease_counter(amount: u128) { ... } #[view] fn get_counter() -> u128 { ... } } #[starknet::interface] trait ICounterContract { fn increase_counter(ref self: TContractState, amount: u128); fn decrease_counter(ref self: TContractState, amount: u128); fn get_counter(self: @TContractState) -> u128; } #[starknet::contract] mod CounterContract { #[external(v0)] impl CounterContract of super::ICounterContract { fn increase_counter(ref self: ContractState, amount: u128) { ... } fn decrease_counter(ref self: ContractState, amount: u128) { ... } fn get_counter(self: @ContractState) -> u128 { ... } } } These attributes are responsible for generating the dispatcher type, used to call the contract. Replace the [abi] attribute with [starknet::interface]. While it doesn’t affect the generated code, we recommended adding to the trait a generic parameter T representing the contract’s state, and adding the ref self: T argument to external functions and self: @T argument for view functions. old new #[abi] trait IOtherContract { fn decrease_allowed() -> bool; } #[starknet::interface] trait IOtherContract { fn decrease_allowed(self: @TContractState) -> bool; } Modify storage access to happen through ContractState or @ContractState (none external functions in the contract that access storage also need to get it as an argument). old new let current = counter::read(); let current = self.counter.read(); Unify all the contract’s events under the Event enum, and add a corresponding struct for every variant (all the structs must derive the Event trait, and each member type has to implement the Serde trait) old new #[event] fn counter_increased(amount: u128) {} #[event] fn counter_decreased(amount: u128) {} #[event] #[derive(Drop, starknet::Event)] enum Event { CounterIncreased: CounterIncreased, CounterDecreased: CounterDecreased } #[derive(Drop, starknet::Event)] struct CounterIncreased { amount: u128 } #[derive(Drop, starknet::Event)] struct CounterDecreased { amount: u128 } Emit events via the ContractState type old new fn increase_counter(amount: u128) { ... counter_increased(amount); } fn increase_counter(ref self: ContractState, amount: u128) { ... self.emit(CounterIncreased { amount }); }","title":"Contract syntax - migration guide","component":"documentation","version":"","name":"contract-syntax","url":"/documentation/Cairo/Cairo_on_Starknet/contract-syntax/","titles":[{"text":"New contract syntax - concrete steps for migrating","hash":"new_contract_syntax_concrete_steps_for_migrating","id":1},{"text":"Contract anotation","hash":"contract_anotation","id":2},{"text":"Storage anotation","hash":"storage_anotation","id":3},{"text":"Contract interface","hash":"contract_interface","id":4},{"text":"Add interface Impl","hash":"add_interface_impl","id":5},{"text":"Replace the abi attribute with starknet::interface","hash":"replace_the_abi_attribute_with_starknetinterface","id":6},{"text":"Storage access","hash":"storage_access","id":7},{"text":"Events definition","hash":"events_definition","id":8},{"text":"Events emition","hash":"events_emition","id":9}]},"31":{"id":31,"text":"A Starknet account contract must include the following two functions: __validate__ __execute__ These serve distinct purposes to ensure that only the account owner can initiate transactions and that fees can be charged for the resources you use. Starknet’s account type is inspired by Ethereum’s EIP-4337, where instead of EOAs, you now use smart contract accounts with arbitrary verification logic. Through the use of smart contracts, you are provided with complete flexibility within your account implementation. While not mandatory at the protocol level, a richer standard interface for accounts was developed by the community. This standard was developed by OpenZeppelin, in a close collaboration with wallet teams and other Core Starknet developers. You can see the traits as defined in SNIP-6 (Starknet Improvement Proposal #6). In Starknet, similar to Ethereum, every contract has a nonce. This nonce is sequential; when a transaction is sent from an account, its nonce must match the account’s nonce and it’s incremented after the transaction is executed (whether or not it was reverted). Note that, similar to Ethereum, only the nonce of account contracts (that is, those adhering to the above structure) can be non-zero. A nonce serves two important roles: It guarantees transaction hash uniqueness (this is important for good UX) It provides replay protection to the account (since the signature refers to a particular nonce, the transaction can’t be replayed by a malicious party) As seen above, Starknet currently determines the nonce structure (sequential) at the protocol level. In the future, Starknet will consider a more flexible design, extending account abstraction to nonce management (previously referred to as \"nonce abstraction\").","title":"Starknet account interface","component":"documentation","version":"","name":"approach","url":"/documentation/architecture_and_concepts/Accounts/approach/","titles":[{"text":"Replay protection","hash":"replay_protection","id":1}]},"32":{"id":32,"text":"Starknet provides the deploy_account transaction in order to deploy new accounts to the network. In order to deploy a new account on StarkNet you need to complete the following steps: Decide on the account contract that you want to deploy Compute your would-be account address off-chain Send funds to this address Once the address has enough funds to pay for the deployment, you can then send a deploy_account transaction. Upon receiving a deploy_account transaction, the sequencer will: Verify that the address has funds to pay for the deployment Execute the constructor with the given arguments Execute the __validate_deploy__ entry point (See below) Charge fee from the new account address Advance the nonce to 1 There are two potential issues that arise from sending a deploy_account transaction without any extra validation: Sequencers having the ability to charge arbitrarily high fees, thus potentially draining user funds from a pre-funded account A bad actor having the ability to carry out a sequencer DOS attack by sending multiple, invalid deploy_account transactions. This would result in the sequencer not being compensated for work completed. To prevent the scenario described in the first point, a new optional validation entrypoint is provided: __validate_deploy__. To prevent the potential DOS attack from the second point, we introduce some limitations on the constructor and _validate_deploy _ executions, namely: Limited # of Cairo steps Limited # of builtin applications No external contract calls (library calls and self-calls are allowed) This entrypoint should be included in any accounts or contracts that wish to allow this new deployment flow. __validate_deploy__ expects the following arguments: class hash contract address salt constructor arguments - the arguments expected by the contract’s constructor (this will be enforced in the compiler). In determining the contract address, deployer address 0 will be used. Consider an account with the following constructor signature: @constructor func constructor{syscall_ptr: felt*, pedersen_ptr: HashBuiltin*, range_check_ptr}( _public_key: felt ) Then the signature of __validate_deploy__ must be: func __validate_deploy__{ syscall_ptr: felt*, pedersen_ptr: HashBuiltin*, range_check_ptr, ecdsa_ptr: SignatureBuiltin* }(class_hash: felt, contract_address_salt: felt, _public_key: felt) The transaction hash and max_fee are accessible through the get_tx_info system call.","title":"Deploying new accounts","component":"documentation","version":"","name":"deploying_new_accounts","url":"/documentation/architecture_and_concepts/Accounts/deploying_new_accounts/","titles":[{"text":"Deploy account transaction","hash":"deploy_account_transaction","id":1},{"text":"Transaction flow","hash":"transaction_flow","id":2},{"text":"Validate deploy","hash":"validate_deploy","id":3},{"text":"Using validate deploy","hash":"using_validate_deploy","id":4}]},"33":{"id":33,"text":"An account is a user’s representation on-chain and the way of interacting with the blockchain. Through an account, you may send transactions and interact with other contracts. To \"own\" an on-chain asset (e.g. ERC20 token or an NFT), it has to be associated with your account address. Within Ethereum individual user accounts are known as Externally Owned Accounts (EOAs). EOAs differ from smart contracts in that they are not controlled by code. An EOA is determined by a pair of private and public keys. The account’s address is derived from those keys and only by possessing the private key can you initiate transactions from an account. While Ethereum contracts are passive, that is, they can only change if they were called inside a transaction, EOAs can initiate transactions. While simple, EOAs have a major drawback – there’s no flexibility in the account behavior, i.e. the Ethereum protocol dictates what it means for a transaction initiated by an EOA to be valid (the signature scheme is fixed). In particular, control over the private key gives complete control over the account. Although this is theoretically a secure method of account management, in practice it has some drawbacks, such as requiring you to keep your seed phrase secure yet accessible to you and limited flexibility surrounding wallet functionality. EIP-4337, a design proposal for Ethereum outlines account abstraction whereby all accounts are managed via a dedicated smart contract on the Ethereum network, as a way to increase flexibility and usability. You can add custom logic on top of the basic EOA functionality, thereby bringing account abstraction into Ethereum. The idea behind account abstraction is to allow more flexibility in the management of accounts rather than have their behavior determined at the protocol level. This can be achieved by introducing account contracts - smart contracts with programmable logic that determines the user’s account. Using account abstraction you can now program how your account functions. For example, you can: Determine what it means for a signature to be valid or what contracts your account is allowed to interact with. This is known as \"signature abstraction\" Pay transaction fees in different tokens - this is sometimes known as \"fee abstraction\" Design your own replay protection mechanism and allow sending multiple uncoupled transactions in parallel. Compare this to the sequential nonce solution used in Ethereum, which results in transactions being inherently sequential, i.e., even if you want to send two transactions in parallel, you must wait for some confirmation on the first before sending the second. Otherwise, the second transaction may be rejected due to an invalid nonce. With account abstraction, one can discuss different solutions that bypass the need for a sequential nonce. This is known as \"nonce abstraction\" Today, Starknet offers signature abstraction. In the future, we will enrich the current account abstraction design (see e.g. the paymaster proposal for fee abstraction). Two examples of how you might program an account to function using account abstraction are: Social recovery A process where if you lose your wallet, you are able to retrieve it via a selected social network, vastly improving the typical experience of wallet recovery. Operating your account via facial recognition With signature abstraction, you can use your phone’s native hardware to sign transactions, making it practically impossible to take control of another user’s account (even in the case of the phone itself being stolen).","title":"What is an account?","component":"documentation","version":"","name":"introduction","url":"/documentation/architecture_and_concepts/Accounts/introduction/","titles":[{"text":"Ethereum account structure","hash":"ethereum_account_structure","id":1},{"text":"What is Account Abstraction?","hash":"account_abstraction","id":2},{"text":"Examples of customizing account functionality","hash":"examples","id":3}]},"34":{"id":34,"text":"The key stages of transaction lifetime are: The sequencer selects a transaction from the mempool and executes __validate__ If the transaction was valid, the __execute__ function is called If __execute__ ran successfully, the sequencer includes the transaction in the block, charges the fee and proceeds to work on the next transaction (once the block is concluded, it will be sent to the prover) The sequencer receives fees in ETH in return for including transactions in a block. For more details on how the transaction fee is computed, see the fees section","title":"Simplified transaction flow","component":"documentation","version":"","name":"simplified_transaction_flow","url":"/documentation/architecture_and_concepts/Accounts/simplified_transaction_flow/","titles":[{"text":"The payment mechanism","hash":"a_payment_mechanism","id":1}]},"35":{"id":35,"text":"As previously stated, Starknet’s account structure is not completely arbitrary, but must include the following two functions, which account transactions call: __validate__ __execute__ Separating the __validate__ and __execute__ functions guarantees payment to sequencers for work completed and protects them from Denial of Service (DoS) attacks. The __validate__ function ensures that any transaction submitted was indeed initiated by the account owner and therefore will not take up unjustified resources during the execution process. Without this mechanism, a forged transaction can result in the sequencer stealing the user’s funds. In short, __validate__ ensures that the sequencer may only include transactions that were approved by the account owner. The arbitrary logic allowed in the __validate__ function gives the account’s designer the ability to determine what it means for a transaction to be valid. This gives rise to the usage of different signature schemes and other exotic accounts. When the __validate__ function fails, no fee will be taken from the account in question. There are some limitations set on the __validate__ function. The purpose of these limitations is twofold: We want to avoid the sequencer having to do a lot of work only to discover that the validation failed and the sequencer is then not eligible to charge a fee (if this was possible, the sequencer would be completely exposed to DOS attacks). Validation, while now abstract and in control of the account owner rather than the protocol, should still be a simple operation. This is why in the future, Starknet will place max steps limitation upon the __validate__ function. Even if the validation is simple, we could still face the following attack: An attacker fills the mempool with transactions that are valid at time T. A sequencer may start executing them, thinking that at the time he will produce his block, they will still be valid. However, shortly after, at time T', the attacker sends one transaction that somehow invalidates all the previous ones and makes sure it’s included before the sequencer gets to publish his block (the attacker may do this by offering higher fees for this one transaction). As a concrete example, think of many __validate__ functions checking that the value of a storage slot is 1 and the attacker’s transaction later sets it to 0. To handle this issue, we add some further limitations. Currently, Starknet enforces that __validate__ does not call external contracts. The property that we achieve with the above restrictions is that a single storage update may only invalidate transactions from a single account (this is the best we can do, an account can always invalidate its own past transactions by changing its keys). Thus, the price (in fees) required to invalidate transactions in the mempool is linear in the number of unique accounts that we want to invalidate. The purpose of the __execute__ function is to abstract away the remaining actions performed by a transaction. In Ethereum, a transaction is necessarily a call to a specific function in a smart contract. With the __execute__ abstraction, the account designer controls the flow of the transaction. For example, multicalls can be natively supported in your account, saving the need to send multiple transactions (in practice, this is even harder to manage without multicalls due to nonces). A transaction is considered reverted when the __execute__ function failed. Today, reverted transactions are not included in blocks, but in the future, they will be and the sequencer will be eligible to charge a fee for the work done up to the point of failure, similar to Ethereum. Currently, the sequencer charges only for successful transactions that result from the successful completion of the __execute__ function.","title":"Validate and execute","component":"documentation","version":"","name":"validate_and_execute","url":"/documentation/architecture_and_concepts/Accounts/validate_and_execute/","titles":[{"text":"The validate function","hash":"the_validate_function","id":1},{"text":"Invalid transactions","hash":"invalid_transactions","id":2},{"text":"Validate limitations","hash":"validate_limitations","id":3},{"text":"The execute function","hash":"the_execute_function","id":4},{"text":"Reverted transactions","hash":"reverted_transactions","id":5}]},"36":{"id":36,"text":"All hashes outputs are eventually mapped to elements in \\(\\mathbb{F}_p\\) with \\(p=2^{251}+17\\cdot 2^{192}+1\\). There are three hash functions used throughout Starknet’s specifications: \\(sn\\_keccak: \\{0,1\\}^* \\rightarrow \\mathbb{F}_p\\) \\(pedersen: \\mathbb{F}_p^2\\rightarrow\\mathbb{F}_p\\) \\(poseidon: \\mathbb{F}_p^*\\rightarrow \\mathbb{F}_p\\) Starknet keccak, usually denoted by \\(sn\\_keccak\\), is defined as the first 250 bits of the Keccak256 hash (this is just Keccak256 augmented in order to fit into a field element). Poseidon is a family of hash functions designed for being very efficient as algebraic circuits. As such, they may be very useful in ZK proving systems such as STARKs and others. Poseidon is a sponge construction based on the Hades permutation. Starknet’s version of Poseidon is based on a three element state permutation (see exact parameters below). We define the Poseidon hash of up to 2 elements below, see below the arbitrary number of inputs version. \\[poseidon_1(x) := \\left[\\text{hades_permutation}(x,0,1)\\right]_0\\] \\[poseidon_2(x,y) := \\left[\\text{hades_permutation}(x,y,2)\\right]_0\\] Where \\([\\cdot]_j\\) denotes taking the j’th coordinate of a tuple Useful resources: The exact parameters defining the permutation used in Starknet A reference implementation (in c and assembly) of the above by CryptoExperts Let \\(h\\) denote the pedersen hash function, then given an array \\(a_1,...,a_n\\) of \\(n\\) field elements we define \\(h(a_1,...,a_n)\\) to be: \\[h(...h(h(0, a_1),a_2),...,a_n),n)\\] Let \\(\\text{hades}:\\mathbb{F}_p^3\\rightarrow\\mathbb{F}_p^3\\) denote the Hades permutation (with Starknet’s parameters), then given an array \\(a_1,...,a_n\\) of \\(n\\) field elements we define \\(poseidon(a_1,...,a_n)\\) to be the first coordinate of \\(H(a_1,...,a_n;0,0,0)\\), where: \\[H(a_1,...,a_n;s_1,s_2,s_3)=\\begin{cases} H\\big(a_3,...,a_n;\\text{hades}(s_1+a_1, s_2+a_2, s_3)\\big), & \\text{if } n\\ge 2 \\\\ \\text{hades}(s_1+a_1,s_2+1,s_3), & \\text{if } n=1 \\\\ \\text{hades}(s_1+1,s_2,s_3), & \\text{if } n=0 \\\\ \\end{cases}\\] You can find an implementation of the above in Python here, and an equivalent Cairo implementation here.","title":"Hash functions","component":"documentation","version":"","name":"hash-functions","url":"/documentation/architecture_and_concepts/Cryptography/hash-functions/","titles":[{"text":"Domain and range","hash":"domain_and_range","id":1},{"text":"Starknet Keccak","hash":"starknet_keccak","id":2},{"text":"Pedersen hash","hash":"pedersen_hash","id":3},{"text":"Poseidon hash","hash":"poseidon_hash","id":4},{"text":"Array hashing","hash":"array_hashing","id":5},{"text":"Pedersen","hash":"pedersen_array_hash","id":6},{"text":"Poseidon","hash":"poseidon_array_hash","id":7}]},"37":{"id":37,"text":"The field element type in Starknet is based on the field in the underlying Cairo VM. In other words, a value \\(x\\) of a field element type is an integer in the range of \\(0≤x<P\\). \\(P\\) is currently defined as \\(2^{251} + 17*2^{192} + 1\\)","title":"","component":"documentation","version":"","name":"p-value","url":"/documentation/architecture_and_concepts/Cryptography/p-value/","titles":[{"text":"P value","hash":"p_value","id":1}]},"38":{"id":38,"text":"Pedersen hash makes use of the following STARK friendly elliptic curve over \\(\\mathbb{F}_p\\): \\[y^2=x^3+\\alpha x +\\beta\\] where \\(\\alpha=1\\) \\(\\beta = 3141592653589793238462643383279502884197169399375105820974944592307816406665\\) Given an input \\((a,b)\\in\\mathbb{F}_p^2\\), we begin by breaking it into \\(a_{low}, a_{high}, b_{low}, b_{high}\\), where the low part consists of the low 248 bits of the element and the high part consists of the high 4 bits of the element. Our Pedersen hash is then defined by: \\[h(a,b) = \\left[shift\\_point + a_{low} \\cdot P_0 + a_{high} \\cdot P1 + b_{low} \\cdot P2 + b_{high} \\cdot P3\\right]_x\\] where the values of the constants \\(shift\\_point, P_0, P_1, P_2, P_3\\) can be found in fast_pedersen_hash.py, and \\([P]_x\\) denotes the \\(x\\) coordinate of the point \\(P\\).","title":"","component":"documentation","version":"","name":"stark-curve","url":"/documentation/architecture_and_concepts/Cryptography/stark-curve/","titles":[{"text":"STARK curve","hash":"stark_curve","id":1},{"text":"Definition","hash":"definition","id":2}]},"39":{"id":39,"text":"","title":"Oracles","component":"documentation","version":"","name":"oracles","url":"/documentation/architecture_and_concepts/Network_Architecture/oracles/","titles":[]},"40":{"id":40,"text":"","title":"Storage proofs","component":"documentation","version":"","name":"storage-proofs","url":"/documentation/architecture_and_concepts/Network_Architecture/storage-proofs/","titles":[]},"41":{"id":41,"text":"The class hash is a hash chain of the definition of the class. Classes that were written in Cairo 1 are defined by their Sierra code ( resulting from the compilation of the Cairo code into Sierra, see here for more details). The elements that define a class are: contract_class_version The version of the contract class object. Currently, the Starknet OS supports version 0.1.0 Array of external functions entry points An entry point is a pair (selector, function_idx), where function_idx is the index of the function inside the Sierra program. The selector is an identifier through which the function is callable in transactions or in other classes. The selector is the starknet_keccak hash of the function name, encoded in ASCII. Array of L1 handlers entry points - Array of constructors entry points Currently, the compiler allows only one constructor. ABI A string representing the ABI of the class. The ABI hash (which affects the class hash) is given by: starknet_keccak(bytes(ABI, \"UTF-8\")) This string is supplied by the user declaring the class (and is signed on as part of the DECLARE transaction), and is not enforced to be the true ABI of the associated class. Without seeing the underlying source code (i.e. the Cairo code generating the class’s Sierra), this ABI should be treated as the \"intended\" ABI by the declaring party, which may be incorrect (intentionally or otherwise). The \"honest\" string would be the json serialization of the contract’s ABI as produced by the Cairo 1 compiler. Sierra program An array of field elements representing the Sierra instructions. The hash of the class is the chain hash of its components, computed as follows: class_hash = ℎ( contract_class_version, external_entry_points, l1_handler_entry_points, constructor_entry_points, abi_hash, sierra_program_hash ) Where \\(h\\) is the Poseidon hash function The hash of an entry point array \\((selector,index)_{i=1}^n\\) is given by \\(h(\\text{selector}_1,\\text{index}_1,...,\\text{selector}_n,\\text{index}_n)\\) The sierra_program_hash is the Poseidon hash of the bytecode array The Starknet OS currently supports contract class version 0.1.0, which is represented in the above hash computation as the ASCII encoding of the string CONTRACT_CLASS_V0.1.0 (hashing the version in this manner gives us domain separation between the hashes of classes and other objects). For more details, see the Cairo implementation. Cairo 0 classes are deprecated, and will no longer be supported after regenesis. The elements that define a class are: API version The version of the class, currently always 0. Array of external functions entry points An entry point is a pair (selector, offset), where offset is the offset of the instruction that should be called inside the class’s bytecode. The selector is an identifier through which the function is callable in transactions or in other classes. The selector is the starknet_keccak hash of the function name, encoded in ASCII. Array of L1 handlers entry points - Array of constructors entry points Currently, the compiler allows only one constructor. Array of used builtin names An ASCII-encode array, ordered by declaration. Program hash The starknet_keccak of the class’s program. The class’s program is the abi and program part of the .json file that the Starknet compiler outputs when you run the following command: $ starknet-compile --no_debug_info The compiler outputs the abi, entrypoint selectors, and program. For the program hash, only the starknet_keccak of the abi and program needs to be calculated. To see the exact computation of this field, see contract_hash.py. Bytecode Represented by an array of field elements. The hash of the class is the chain hash of its components, computed as follows: class_hash = ℎ( api_version, external_entry_points, l1_handler_entry_points, constructor_entry_points, builtin_names, program_hash, bytecode_hash ) Where \\(h\\) is the Pedersen hash function The hash of an entry point array \\((\\text{selector},\\text{offset})_{i=1}^n\\) is given by \\(h(\\text{selector}_1,\\text{offset}_1,...,\\text{selector}_n,\\text{offset}_n)\\) The program_hash is the starknet_keccak of the json described above The bytecode_hash is the Pedersen hash of the bytecode array","title":"Class hash","component":"documentation","version":"","name":"class-hash","url":"/documentation/architecture_and_concepts/Smart_Contracts/class-hash/","titles":[{"text":"Definition of a (Cairo 1) class","hash":"cairo1_class","id":1},{"text":"Computing the (Cairo 1) class hash","hash":"computing_the_cairo_1_class_hash","id":2},{"text":"Definition of a (Cairo 0) class","hash":"definition_of_a_cairo_0_class","id":3},{"text":"Computing the (Cairo 0) class hash","hash":"computing_the_cairo_0_class_hash","id":4}]},"42":{"id":42,"text":"Contract ABI is a representation of a Starknet contract’s interface. It is formatted as JSON and describes the functions, structs and events which are defined in the contract. You can get the contract’s ABI by compiling: Cairo v>=1.0.0 Cairo 0 cargo run --bin starknet-compile -- /path/to/input.cairo /path/to/output.json starknet-compile contract.cairo \\ --output contract_compiled.json \\ --abi contract_abi.json The Cairo 0 compiler is no longer maintained, see here for more details on Cairo 1 contracts compilation. The following is an example contract ABI: Cairo 0 Cairo v1 Cairo v2 [ { \"members\": [ { \"name\": \"x\", \"offset\": 0, \"type\": \"felt\" }, { \"name\": \"y\", \"offset\": 1, \"type\": \"felt\" } ], \"name\": \"Point\", \"size\": 2, \"type\": \"struct\" }, { \"members\": [ { \"name\": \"x\", \"offset\": 0, \"type\": \"felt\" }, { \"name\": \"p\", \"offset\": 1, \"type\": \"Point\" } ], \"name\": \"Test\", \"size\": 3, \"type\": \"struct\" }, { \"data\": [ { \"name\": \"a\", \"type\": \"felt\" }, { \"name\": \"b\", \"type\": \"felt\" } ], \"keys\": [], \"name\": \"status_update\", \"type\": \"event\" }, { \"inputs\": [ { \"name\": \"a_len\", \"type\": \"felt\" }, { \"name\": \"a\", \"type\": \"felt*\" } ], \"name\": \"constructor\", \"outputs\": [], \"type\": \"constructor\" }, { \"inputs\": [ { \"name\": \"user\", \"type\": \"felt\" } ], \"name\": \"extend_range\", \"outputs\": [], \"type\": \"function\" }, { \"inputs\": [ { \"name\": \"points_len\", \"type\": \"felt\" }, { \"name\": \"points\", \"type\": \"(felt, Point, Point)*\" } ], \"name\": \"input_arrays\", \"outputs\": [], \"type\": \"function\" }, { \"inputs\": [ { \"name\": \"nested_len\", \"type\": \"felt\" }, { \"name\": \"nested\", \"type\": \"Test*\" } ], \"name\": \"input_nested_arrays\", \"outputs\": [ { \"name\": \"res\", \"type\": \"felt\" } ], \"type\": \"function\" }, { \"inputs\": [ { \"name\": \"array_len\", \"type\": \"felt\" }, { \"name\": \"array\", \"type\": \"felt*\" } ], \"name\": \"output_arrays\", \"outputs\": [ { \"name\": \"array_len\", \"type\": \"felt\" }, { \"name\": \"array\", \"type\": \"felt*\" } ], \"type\": \"function\" }, { \"inputs\": [ { \"name\": \"points\", \"type\": \"(Point, Point)\" } ], \"name\": \"input_output_struct\", \"outputs\": [ { \"name\": \"res\", \"type\": \"Point\" } ], \"type\": \"function\" } ] [ { \"type\": \"function\", \"name\": \"constructor\", \"inputs\": [ { \"name\": \"name_\", \"type\": \"core::felt252\" }, { \"name\": \"symbol_\", \"type\": \"core::felt252\" }, { \"name\": \"decimals_\", \"type\": \"core::integer::u8\" }, { \"name\": \"initial_supply\", \"type\": \"core::integer::u256\" }, { \"name\": \"recipient\", \"type\": \"core::starknet::contract_address::ContractAddress\" } ], \"outputs\": [], \"state_mutability\": \"external\" }, { \"type\": \"function\", \"name\": \"get_name\", \"inputs\": [], \"outputs\": [ { \"type\": \"core::felt252\" } ], \"state_mutability\": \"view\" }, { \"type\": \"function\", \"name\": \"get_symbol\", \"inputs\": [], \"outputs\": [ { \"type\": \"core::felt252\" } ], \"state_mutability\": \"view\" }, { \"type\": \"function\", \"name\": \"get_decimals\", \"inputs\": [], \"outputs\": [ { \"type\": \"core::integer::u8\" } ], \"state_mutability\": \"view\" }, { \"type\": \"function\", \"name\": \"get_total_supply\", \"inputs\": [], \"outputs\": [ { \"type\": \"core::integer::u256\" } ], \"state_mutability\": \"view\" }, { \"type\": \"function\", \"name\": \"balance_of\", \"inputs\": [ { \"name\": \"account\", \"type\": \"core::starknet::contract_address::ContractAddress\" } ], \"outputs\": [ { \"type\": \"core::integer::u256\" } ], \"state_mutability\": \"view\" }, { \"type\": \"function\", \"name\": \"allowance\", \"inputs\": [ { \"name\": \"owner\", \"type\": \"core::starknet::contract_address::ContractAddress\" }, { \"name\": \"spender\", \"type\": \"core::starknet::contract_address::ContractAddress\" } ], \"outputs\": [ { \"type\": \"core::integer::u256\" } ], \"state_mutability\": \"view\" }, { \"type\": \"function\", \"name\": \"transfer\", \"inputs\": [ { \"name\": \"recipient\", \"type\": \"core::starknet::contract_address::ContractAddress\" }, { \"name\": \"amount\", \"type\": \"core::integer::u256\" } ], \"outputs\": [], \"state_mutability\": \"external\" }, { \"type\": \"function\", \"name\": \"transfer_from\", \"inputs\": [ { \"name\": \"sender\", \"type\": \"core::starknet::contract_address::ContractAddress\" }, { \"name\": \"recipient\", \"type\": \"core::starknet::contract_address::ContractAddress\" }, { \"name\": \"amount\", \"type\": \"core::integer::u256\" } ], \"outputs\": [], \"state_mutability\": \"external\" }, { \"type\": \"function\", \"name\": \"approve\", \"inputs\": [ { \"name\": \"spender\", \"type\": \"core::starknet::contract_address::ContractAddress\" }, { \"name\": \"amount\", \"type\": \"core::integer::u256\" } ], \"outputs\": [], \"state_mutability\": \"external\" }, { \"type\": \"function\", \"name\": \"increase_allowance\", \"inputs\": [ { \"name\": \"spender\", \"type\": \"core::starknet::contract_address::ContractAddress\" }, { \"name\": \"added_value\", \"type\": \"core::integer::u256\" } ], \"outputs\": [], \"state_mutability\": \"external\" }, { \"type\": \"function\", \"name\": \"decrease_allowance\", \"inputs\": [ { \"name\": \"spender\", \"type\": \"core::starknet::contract_address::ContractAddress\" }, { \"name\": \"subtracted_value\", \"type\": \"core::integer::u256\" } ], \"outputs\": [], \"state_mutability\": \"external\" }, { \"type\": \"event\", \"name\": \"Transfer\", \"inputs\": [ { \"name\": \"from\", \"type\": \"core::starknet::contract_address::ContractAddress\" }, { \"name\": \"to\", \"type\": \"core::starknet::contract_address::ContractAddress\" }, { \"name\": \"value\", \"type\": \"core::integer::u256\" } ] }, { \"type\": \"event\", \"name\": \"Approval\", \"inputs\": [ { \"name\": \"owner\", \"type\": \"core::starknet::contract_address::ContractAddress\" }, { \"name\": \"spender\", \"type\": \"core::starknet::contract_address::ContractAddress\" }, { \"name\": \"value\", \"type\": \"core::integer::u256\" } ] } ] [ { \"type\": \"impl\", \"name\": \"CounterContract\", \"interface_name\": \"new_syntax_test_contract::new_syntax_test_contract::ICounterContract\" }, { \"type\": \"interface\", \"name\": \"new_syntax_test_contract::new_syntax_test_contract::ICounterContract\", \"items\": [ { \"type\": \"function\", \"name\": \"increase_counter\", \"inputs\": [ { \"name\": \"amount\", \"type\": \"core::integer::u128\" } ], \"outputs\": [], \"state_mutability\": \"external\" }, { \"type\": \"function\", \"name\": \"decrease_counter\", \"inputs\": [ { \"name\": \"amount\", \"type\": \"core::integer::u128\" } ], \"outputs\": [], \"state_mutability\": \"external\" }, { \"type\": \"function\", \"name\": \"get_counter\", \"inputs\": [], \"outputs\": [ { \"type\": \"core::integer::u128\" } ], \"state_mutability\": \"view\" } ] }, { \"type\": \"constructor\", \"name\": \"constructor\", \"inputs\": [ { \"name\": \"initial_counter\", \"type\": \"core::integer::u128\" }, { \"name\": \"other_contract_addr\", \"type\": \"core::starknet::contract_address::ContractAddress\" } ] }, { \"type\": \"event\", \"name\": \"new_syntax_test_contract::new_syntax_test_contract::counter_contract::CounterIncreased\", \"kind\": \"struct\", \"members\": [ { \"name\": \"amount\", \"type\": \"core::integer::u128\", \"kind\": \"data\" } ] }, { \"type\": \"event\", \"name\": \"new_syntax_test_contract::new_syntax_test_contract::counter_contract::CounterDecreased\", \"kind\": \"struct\", \"members\": [ { \"name\": \"amount\", \"type\": \"core::integer::u128\", \"kind\": \"data\" } ] }, { \"type\": \"event\", \"name\": \"new_syntax_test_contract::new_syntax_test_contract::counter_contract::Event\", \"kind\": \"enum\", \"variants\": [ { \"name\": \"CounterIncreased\", \"type\": \"new_syntax_test_contract::new_syntax_test_contract::counter_contract::CounterIncreased\", \"kind\": \"nested\" }, { \"name\": \"CounterDecreased\", \"type\": \"new_syntax_test_contract::new_syntax_test_contract::counter_contract::CounterDecreased\", \"kind\": \"nested\" } ] } ] With the transition to v2, the contract ABI underwent some changes. Consider the following high level code that generates the ABI in the above example: #[starknet::interface] trait IOtherContract { fn decrease_allowed(self: @TContractState) -> bool; } #[starknet::interface] trait ICounterContract { fn increase_counter(ref self: TContractState, amount: u128); fn decrease_counter(ref self: TContractState, amount: u128); fn get_counter(self: @TContractState) -> u128; } #[starknet::contract] mod counter_contract { use starknet::ContractAddress; use super::{ IOtherContractDispatcher, IOtherContractDispatcherTrait, IOtherContractLibraryDispatcher }; #[storage] struct Storage { counter: u128, other_contract: IOtherContractDispatcher } #[event] #[derive(Drop, starknet::Event)] enum Event { CounterIncreased: CounterIncreased, CounterDecreased: CounterDecreased } #[derive(Drop, starknet::Event)] struct CounterIncreased { amount: u128 } #[derive(Drop, starknet::Event)] struct CounterDecreased { amount: u128 } #[constructor] fn constructor( ref self: ContractState, initial_counter: u128, other_contract_addr: ContractAddress ) { self.counter.write(initial_counter); self .other_contract .write(IOtherContractDispatcher { contract_address: other_contract_addr }); } #[external(v0)] impl CounterContract of super::ICounterContract { fn get_counter(self: @ContractState) -> u128 { self.counter.read() } fn increase_counter(ref self: ContractState, amount: u128) { let current = self.counter.read(); self.counter.write(current + amount); self.emit(CounterIncreased { amount }); } fn decrease_counter(ref self: ContractState, amount: u128) { let allowed = self.other_contract.read().decrease_allowed(); if allowed { let current = self.counter.read(); self.counter.write(current - amount); self.emit(CounterDecreased { amount }); } } } } Since the CounterContract impl is annotated with the #[external(v0)] attribute, you’ll find the following impl entry in the ABI: { \"type\": \"impl\", \"name\": \"CounterContract\", \"interface_name\": \"new_syntax_test_contract::new_syntax_test_contract::ICounterContract\" }, This means that every function appearing in the ICounterContract interface is a possible entry point of the contract. Standalone functions in the contract (outside an external impl) can also be anotated with #[external(v0)] (currently, this is the only way to add L1 handlers). In such cases, a corresponding function (or l1_handler) entry will be found in the ABI in the same hierarchy as impls and interfaces. In Cairo v2, a dedicated type for the contract’s events was introduced. Currently, the contract event type must be an enum named Event, whose variants are structs of the same name as the variant. Types that can be emitted via self.emit(_) must implement the Event trait, which defines how this type should be serialized into two felt252 arrays, keys and data. The Event enum variants appear in the ABI under \"type\" = \"event\" rather than regular structs. For such entries, each member has an additional kind field which specifies how the serialization into keys and data takes place: if the kind is key, then this member or variant are serialized into the event’s keys if the kind is data, then this member or variant are serialized into the event’s data if the kind is nested, then the member or variant are serialized acording to the Event attribute, potentially adding to both keys and data. At the moment, this feature is not yet supported, so no high level code written in Cairo v2.0.0 can generate such ABI. You can find a JSON schema specification of the ABI in the starknet-specs repository. For a UI-friendly version, you can use the OPEN-RPC playground.","title":"Contract ABI","component":"documentation","version":"","name":"contract-abi","url":"/documentation/architecture_and_concepts/Smart_Contracts/contract-abi/","titles":[{"text":"Cairo v2 ABI changes","hash":"cairo_v2_abi_changes","id":1},{"text":"Interface and Impl ABI entries","hash":"interface_and_impl_abi_entries","id":2},{"text":"Events","hash":"events","id":3},{"text":"Specification","hash":"specification","id":4}]},"43":{"id":43,"text":"The contract address is a unique identifier of the contract on Starknet. It is a chain hash of the following information: prefix - The ASCII encoding of the constant string STARKNET_CONTRACT_ADDRESS. deployer_address - The deployer address, unless deploy_from_zero is true, in which case it is 0. salt - The salt passed by the contract calling the syscall. class_hash - See the class hash documentation. constructor_calldata_hash - Array hash of the inputs to the constructor. The address is computed as follows: contract_address := pedersen( “STARKNET_CONTRACT_ADDRESS”, deployer_address, salt, class_hash, constructor_calldata_hash) You can find more detail of the address computation in the Cairo code repository.","title":"Contract address","component":"documentation","version":"","name":"contract-address","url":"/documentation/architecture_and_concepts/Smart_Contracts/contract-address/","titles":[]},"44":{"id":44,"text":"Taking inspiration from object-oriented programming, Starknet distinguishes between a contract and its implementation by separating contracts into classes and instances. A contract class is the definition of the contract: Cairo byte code, hint information, entry point names, and everything that defines its semantics unambiguously. Each class is identified by its class hash, which is analogous to a class name in an object-oriented programming language. A contract instance is a deployed contract corresponding to a class. Notice that only contract instances behave as contracts in that they have their own storage and can be called by transactions or other contracts. A contract class does not necessarily have a deployed instance in Starknet. New classes can be added to the state of Starknet with the declare transaction. New instances of a previously declared class can be deployed via the deploy system call. To use the functionality of a declared class, without deploying an instance of that class, you can use the library_call system call. This system call is an analogue of Ethereum’s delegate call in the world of classes. You can use class code directly, instead of having a placeholder contract deployed, which is used only for its code.","title":"Contract Classes","component":"documentation","version":"","name":"contract-classes","url":"/documentation/architecture_and_concepts/Smart_Contracts/contract-classes/","titles":[{"text":"Using Classes","hash":"using_classes","id":1}]},"45":{"id":45,"text":"The contract’s storage is a persistent storage space where you can read, write, modify, and persist data. The storage is a map with \\(2^{251}\\) slots, where each slot is a felt which is initialized to 0. The basic function for writing to storage writes value to key is: Cairo 1.0 Cairo 0 storage_write_syscall(address_domain, address, value) storage_write(key, value); Both are system calls that can be imported by adding the line: Cairo 1.0 Cairo 0 use starknet::syscalls::storage_read_syscall; use starknet::syscalls::storage_write_syscall; from starkware.starknet.common.syscalls import storage_read, storage_write Another basic function is used for getting the storage address, this function is created by the compiler when defining a storage variable, as explained below. This function returns the address of the storage variable. Below we discuss how this address is determined from the variable’s name and keys. The most common way for interacting with a contract’s storage is through storage variables. The @storage_var decorator declares a variable that will be kept as part of the contract storage. The variable can consist of a single felt, or it can be a mapping from multiple arguments to a tuple of felts or structs. To use this variable, the var.read(args), var.write(args, value) and var.addr(args) functions are automatically created by the @storage_var decorator, for reading the storage value, writing the storage value and getting the storage address, respectively. The Starknet contract compiler generates the Cairo code that maps the storage variable’s name and argument values to an address — so that it can be part of the generated proof. The address of a storage variable is computed as follows: If it is a single value, then the address is sn_keccak(variable_name), where variable_name is the ASCII encoding of the variable’s name. If it is a (nested) mapping, then the address of the value at key k_1,...,k_n is h(...h(h(sn_keccak(variable_name),k_1),k_2),...,k_n) where \\(h\\) is the Pedersen hash and the final value is taken \\(\\bmod 2^{251}-256\\) If it is a mapping to complex values (e.g., tuples or structs), then this complex value lies in a continuous segment starting from the address calculated in the previous point. Note that 256 field elements is the current limitation on the maximal size of a complex storage value. Note that when calling var.addr(args) for a storage variable with complex values, the returned value is the address of the first element in the storage. We can summarize the above as follows: storage variable address := pedersen(keccak(variable name), keys) In the following example we define a storage variables with complex values. Cairo 1.0 Cairo 0 struct Storage { name: felt252, symbol: felt252, decimals: u8, total_supply: u256, balances: LegacyMap::, allowances: LegacyMap::, } @storage_var func range(user : felt) -> (res : (felt, felt)): end","title":"Contract storage","component":"documentation","version":"","name":"contract-storage","url":"/documentation/architecture_and_concepts/Smart_Contracts/contract-storage/","titles":[{"text":"Storage layout","hash":"storage_layout","id":1},{"text":"Storage low level functions","hash":"storage_low_level_functions","id":2},{"text":"Storage variables","hash":"storage_variables","id":3}]},"46":{"id":46,"text":"Writing smart contracts requires various associated operations, such as calling another contract or accessing the contract’s storage, that standalone programs do not require. The Starknet contract language supports these operations by using system calls. System calls enable a contract to require services from the Starknet OS. You can use system calls in a function to get information that depends on the broader state of Starknet, which would otherwise be inaccessible, rather than local variables that appear in the function’s scope. Below we describe the collection of system calls that can be used to get information regarding the block, transaction, or execution context during runtime (e.g. block number, account address, and caller address). func get_block_number{syscall_ptr : felt*}() -> (block_number : felt) Gets the number of the block in which the transaction is executed. None. block_number The number of the block in which the transaction is executed. syscalls.cairo func get_block_timestamp{syscall_ptr : felt*}() -> (block_timestamp : felt) Gets the timestamp of the block in which the transaction is executed. None. block_timestamp The timestamp of the block in which the transaction is executed. syscalls.cairo func get_caller_address{syscall_ptr : felt*}() -> (caller_address : felt) Returns the address of the calling contract, or 0 if the call was not initiated by another contract. None. caller_address The address of the calling contract, or 0 if the call was not initiated by another contract. syscalls.cairo func get_contract_address{syscall_ptr : felt*}() -> (contract_address : felt) Gets the address of the contract who raised the system call. None. contract_address The address of the contract that raised the system call. syscalls.cairo func get_sequencer_address{syscall_ptr : felt*}() -> (sequencer_address : felt) Returns the address of the sequencer that generated the current block. None. sequencer_address The address of the sequencer that generated the current block. syscalls.cairo func get_tx_info{syscall_ptr : felt*}() -> (tx_info : TxInfo*) Gets information about the original transaction. None. tx_info The following information about the original transaction: The version of the transaction. The address of the account that initiated this transaction. The maximum fee that is allowed to be charged for the inclusion of this transaction. The signature of the account that initiated this transaction. The transaction’s hash. The intended chain id. syscalls.cairo func call_contract{syscall_ptr : felt*}( contract_address : felt, function_selector : felt, calldata_size : felt, calldata : felt* ) -> (retdata_size : felt, retdata : felt*) Calls a given contract. This system call expects the address of the called contract, a selector for a function within that contract, and call arguments. contract_address The address of the contract you want to call. function_selector A selector for a function within that contract. calldata_size The size, in number of felts, of the calldata. calldata The calldata. retdata_size The size, in number of felts, of the return data. retdata The return data. syscalls.cairo This is considered a lower-level syntax for calling contracts. If the interface of the called contract is available, then you can use a more straightforward syntax. func deploy{syscall_ptr : felt*}( class_hash : felt, contract_address_salt : felt, constructor_calldata_size : felt, constructor_calldata : felt*, deploy_from_zero: felt, ) -> (contract_address : felt) Deploys a new instance of a previously declared class. class_hash The class hash of the contract to be deployed. contract_address_salt The salt, an arbitrary value provided by the sender, used in the computation of the contract’s address. constructor_calldata_size The number of arguments to pass to the constructor, equal to the number of felts in constructor_calldata. constructor_calldata The constructor’s calldata. An array of felts. deploy_from_zero A flag used for the contract address computation. If set, the new contract’s deployer address will be 0. Otherwise, the caller’s address will be used. contract_address The address of the deployed contract. syscalls.cairo func emit_event{syscall_ptr : felt*}(keys_len : felt, keys : felt*, data_len : felt, data : felt*) Emits an event with a given set of keys and data. For more information, and for a higher-level syntax for emitting events, see Starknet events. keys_len The number of keys in the event. Analogous to Ethereum’s event topics, you can use the starknet_getEvents method to filter by these keys. keys The event’s keys. data_len The number of data elements in the event. data The event’s data. None. syscalls.cairo The following example emits an event with two keys, the strings status and deposit and three data elements: 1, 2, and 3. let (keys : felt*) = alloc() assert keys[0] = 'status' assert keys[1] = 'deposit' let (data : felt*) = alloc() assert data[0] = 1 assert data[1] = 2 assert data[2] = 3 emit_event(2, keys, 3, data) func library_call{syscall_ptr : felt*}( class_hash : felt, function_selector : felt, calldata_size : felt, calldata : felt* ) -> (retdata_size : felt, retdata : felt*) Calls the requested function in any previously declared class. The class is only used for its logic. This system call replaces the known delegate call functionality from Ethereum, with the important difference that there is only one contract involved. class_hash The hash of the class you want to use. function_selector A selector for a function within that class. calldata_size The size, in number of felts, of the calldata. calldata The calldata. retdata_size The size, in number of felts, of the return data. retdata The return data. syscalls.cairo This system call is not currently not supported in Cairo 1.0. In practice, this was only used for proxy contracts, which in Cairo 1.0 can be implemented instead via the replace_class system call, making library_call_l1_handler redundant. func library_call_l1_handler{syscall_ptr : felt*}( class_hash : felt, function_selector : felt, calldata_size : felt, calldata : felt* ) -> (retdata_size : felt, retdata : felt*) Calls the requested L1 handler in any previously declared class. Same as the library_call system call, but also enables you to call an L1 handler that cannot otherwise be called directly. For more information, see Starknet’s messaging mechanism (note that when you invoke an L1 handler with this system call, the sequencer does not consume an L1→L2 message). It is recommended to raise this system call only inside an L1 handler in order to use the logic inside an L1 handler of a different class. class_hash The hash of the class you want to use. function_selector A selector for an L1 handler function within that class. calldata_size The size, in number of felts, of the calldata. calldata The calldata. retdata_size The size, in number of felts, of the return data. retdata The return data. syscalls.cairo func send_message_to_l1{syscall_ptr : felt*}( to_address : felt, payload_size : felt, payload : felt* ) Sends a message to L1. This system call includes the message parameters as part of the proof’s output and exposes these parameters to the Starknet Core contract on L1 once the state update, including the transaction, is received. For more information, see Starknet’s messaging mechanism. to_address The recipient’s L1 address. payload_size The size of the message payload. payload A pointer to an array containing the contents of the message. None. messages.cairo The following example sends a message whose content is (1,2) to the L1 contract whose address is 3423542542364363. let payload = alloc() payload[0] = 1 payload[1] = 2 send_message_to_l1(3423542542364363,2,payload) replace_class(class_hash: felt) Once replace_class is called, the class of the calling contract (i.e. the contract whose address is returned by get_contract_address at the time the syscall is called) will be replaced by the class whose hash is given by the class_hash argument. After calling replace_class, the code currently executing from the old class will finish running. The new class will be used from the next transaction onwards or if the contract is called via the call_contract syscall in the same transaction (after the replacement). class_hash The hash of the class you want to use as a replacement. None. syscalls.cairo func storage_read{syscall_ptr : felt*}(address : felt) -> (value : felt) Gets the value of a key in the storage of the calling contract. This system call provides direct access to any possible key in storage, in contrast with var.read(), which enables you to read storage variables that are defined explicitly in the contract. For information on accessing storage by using the storage variables, see storage variables. address The address of the storage key you want to read. value The value of the key. syscalls.cairo let value = storage_read(3534535754756246375475423547453) Sets the value of a key in the storage of the calling contract. func storage_write{syscall_ptr : felt*}(address : felt, value : felt) Sets the value of a key in the storage of the calling contract. This system call provides direct access to any possible key in storage, in contrast with var.write(), which enables you to write to storage variables that are defined explicitly in the contract. For information on accessing storage by using the storage variables, see storage variables. address The address of the storage key to which you want to write. value The value to write to the key. None. syscalls.cairo","title":"System Calls","component":"documentation","version":"","name":"system-calls-cairo0","url":"/documentation/architecture_and_concepts/Smart_Contracts/system-calls-cairo0/","titles":[{"text":"Getters","hash":"getters","id":1},{"text":"get_block_number","hash":"get_block_number","id":2},{"text":"Syntax","hash":"syntax","id":3},{"text":"Description","hash":"description","id":4},{"text":"Arguments","hash":"arguments","id":5},{"text":"Return values","hash":"return_values","id":6},{"text":"Common library","hash":"common_library","id":7},{"text":"get_block_timestamp","hash":"get_block_timestamp","id":8},{"text":"Syntax","hash":"syntax_2","id":9},{"text":"Description","hash":"description_2","id":10},{"text":"Arguments","hash":"arguments_2","id":11},{"text":"Return values","hash":"return_values_2","id":12},{"text":"Common library","hash":"common_library_2","id":13},{"text":"get_caller_address","hash":"get_caller_address","id":14},{"text":"Syntax","hash":"syntax_3","id":15},{"text":"Description","hash":"description_3","id":16},{"text":"Arguments","hash":"arguments_3","id":17},{"text":"Return values","hash":"return_values_3","id":18},{"text":"Common library","hash":"common_library_3","id":19},{"text":"get_contract_address","hash":"get_contract_address","id":20},{"text":"Syntax","hash":"syntax_4","id":21},{"text":"Description","hash":"description_4","id":22},{"text":"Arguments","hash":"arguments_4","id":23},{"text":"Return values","hash":"return_values_4","id":24},{"text":"Common library","hash":"common_library_4","id":25},{"text":"get_sequencer_address","hash":"get_sequencer_address","id":26},{"text":"Syntax","hash":"syntax_5","id":27},{"text":"Description","hash":"description_5","id":28},{"text":"Arguments","hash":"arguments_5","id":29},{"text":"Return values","hash":"return_values_5","id":30},{"text":"Common library","hash":"common_library_5","id":31},{"text":"get_transaction_info","hash":"get_transaction_info","id":32},{"text":"Syntax","hash":"syntax_6","id":33},{"text":"Description","hash":"description_6","id":34},{"text":"Arguments","hash":"arguments_6","id":35},{"text":"Return values","hash":"return_values_6","id":36},{"text":"Common library","hash":"common_library_6","id":37},{"text":"call_contract","hash":"call_contract","id":38},{"text":"Syntax","hash":"syntax_7","id":39},{"text":"Description","hash":"description_7","id":40},{"text":"Arguments","hash":"arguments_7","id":41},{"text":"Return values","hash":"return_values_7","id":42},{"text":"Common library","hash":"common_library_7","id":43},{"text":"deploy","hash":"deploy","id":44},{"text":"Syntax","hash":"syntax_8","id":45},{"text":"Description","hash":"description_8","id":46},{"text":"Arguments","hash":"arguments_8","id":47},{"text":"Return values","hash":"return_values_8","id":48},{"text":"Common library","hash":"common_library_8","id":49},{"text":"emit_event","hash":"emit_event","id":50},{"text":"Syntax","hash":"syntax_9","id":51},{"text":"Description","hash":"description_9","id":52},{"text":"Arguments","hash":"arguments_9","id":53},{"text":"Return values","hash":"return_values_9","id":54},{"text":"Common library","hash":"common_library_9","id":55},{"text":"Example","hash":"example","id":56},{"text":"library_call","hash":"library_call","id":57},{"text":"Syntax","hash":"syntax_10","id":58},{"text":"Description","hash":"description_10","id":59},{"text":"Arguments","hash":"arguments_10","id":60},{"text":"Return values","hash":"return_values_10","id":61},{"text":"Common library","hash":"common_library_10","id":62},{"text":"library_call_l1_handler","hash":"library_call_l1_handler","id":63},{"text":"Syntax","hash":"syntax_11","id":64},{"text":"Description","hash":"description_11","id":65},{"text":"Arguments","hash":"arguments_11","id":66},{"text":"Return values","hash":"return_values_11","id":67},{"text":"Common library","hash":"common_library_11","id":68},{"text":"send_message_to_L1","hash":"send_message_to_L1","id":69},{"text":"Syntax","hash":"syntax_12","id":70},{"text":"Description","hash":"description_12","id":71},{"text":"Arguments","hash":"arguments_12","id":72},{"text":"Return values","hash":"return_values_12","id":73},{"text":"Common library","hash":"common_library_12","id":74},{"text":"Example","hash":"example_2","id":75},{"text":"replace_class","hash":"replace_class","id":76},{"text":"Syntax","hash":"syntax_13","id":77},{"text":"Description","hash":"description_13","id":78},{"text":"Arguments","hash":"arguments_13","id":79},{"text":"Return values","hash":"return_values_13","id":80},{"text":"Common library","hash":"common_library_13","id":81},{"text":"storage_read","hash":"storage_read","id":82},{"text":"Syntax","hash":"syntax_14","id":83},{"text":"Description","hash":"description_14","id":84},{"text":"Arguments","hash":"arguments_14","id":85},{"text":"Return values","hash":"return_values_14","id":86},{"text":"Common library","hash":"common_library_14","id":87},{"text":"Example","hash":"example_3","id":88},{"text":"storage_write","hash":"storage_write","id":89},{"text":"Syntax","hash":"syntax_15","id":90},{"text":"Description","hash":"description_15","id":91},{"text":"Arguments","hash":"arguments_15","id":92},{"text":"Return values","hash":"return_values_15","id":93},{"text":"Common library","hash":"common_library_15","id":94}]},"47":{"id":47,"text":"Writing smart contracts requires various associated operations, such as calling another contract or accessing the contract’s storage, that standalone programs do not require. The Starknet contract language supports these operations by using system calls. System calls enable a contract to require services from the Starknet OS. You can use system calls in a function to get information that depends on the broader state of Starknet, which would otherwise be inaccessible, rather than local variables that appear in the function’s scope. fn get_block_hash(u64 blockNumber) -> felt252: Gets the hash of a specific Starknet block within the range of [first_v0_12_0_block, current_block-10]. Returns the hash of the given block. syscalls.cairo If block_number is greater than current_block - 10, an error is raised: Block number out of range If block_number is less than the first block number of v0.12.0, the function returns zero. Details extern fn get_execution_info_syscall() -> SyscallResult> implicits( GasBuiltin, System ) nopanic; Gets information about the original transaction. In Cairo 1.0, all block/transaction/execution context getters are batched into this single system call. None. A struct containing the execution info. syscalls.cairo extern fn call_contract_syscall( address: ContractAddress, entry_point_selector: felt252, calldata: Span ) -> SyscallResult> implicits(GasBuiltin, System) nopanic; Calls a given contract. This system call expects the address of the called contract, a selector for a function within that contract, and call arguments. address The address of the contract you want to call. entry_point_selector A selector for a function within that contract. calldata The calldata array. The call response, of type SyscallResult>. syscalls.cairo This is considered a lower-level syntax for calling contracts. If the interface of the called contract is available, then you can use a more straightforward syntax. extern fn deploy_syscall( class_hash: ClassHash, contract_address_salt: felt252, calldata: Span, deploy_from_zero: bool, ) -> SyscallResult)> implicits(GasBuiltin, System) nopanic; Deploys a new instance of a previously declared class. class_hash The class hash of the contract to be deployed. contract_address_salt The salt, an arbitrary value provided by the sender, used in the computation of the contract’s address. calldata The constructor’s calldata. An array of felts. deploy_from_zero A flag used for the contract address computation. If not set, the caller address will be used as the new contract’s deployer address, otherwise 0 is used. Return values A tuple wrapped with SyscallResult where: The first element is the address of the deployed contract, of type ContractAddress. The second element is the response array from the contract’s constructor, of type Span::. syscalls.cairo extern fn emit_event_syscall( keys: Span, data: Span ) -> SyscallResult implicits(GasBuiltin, System) nopanic; Emits an event with a given set of keys and data. For more information, and for a higher-level syntax for emitting events, see Starknet events. keys The event’s keys. These are analogous to Ethereum’s event topics, you can use the starknet_getEvents method to filter by these keys. data The event’s data. None. syscalls.cairo The following example emits an event with two keys, the strings status and deposit and three data elements: 1, 2, and 3. let keys = ArrayTrait::new(); keys.append('key'); keys.append('deposit'); let values = ArrayTrait::new(); values.append(1); values.append(2); values.append(3); emit_event_syscall(keys, values).unwrap_syscall(); extern fn library_call_syscall( class_hash: ClassHash, function_selector: felt252, calldata: Span ) -> SyscallResult> implicits(GasBuiltin, System) nopanic; Calls the requested function in any previously declared class. The class is only used for its logic. This system call replaces the known delegate call functionality from Ethereum, with the important difference that there is only one contract involved. class_hash The hash of the class you want to use. function_selector A selector for a function within that class. calldata The calldata. The call response, of type SyscallResult>. syscalls.cairo extern fn send_message_to_l1_syscall( to_address: felt252, payload: Span ) -> SyscallResult implicits(GasBuiltin, System) nopanic; Sends a message to L1. This system call includes the message parameters as part of the proof’s output and exposes these parameters to the Starknet Core contract on L1 once the state update, including the transaction, is received. For more information, see Starknet’s messaging mechanism. to_address The recipient’s L1 address. payload The array containing the message payload None. syscalls.cairo The following example sends a message whose content is (1,2) to the L1 contract whose address is 3423542542364363. let payload = ArrayTrait::new(); payload.append(1); payload.append(2); send_message_to_l1_syscall(payload).unwrap_syscall(); extern fn replace_class_syscall( class_hash: ClassHash ) -> SyscallResult implicits(GasBuiltin, System) nopanic; Once replace_class is called, the class of the calling contract (i.e. the contract whose address is returned by get_contract_address at the time the syscall is called) will be replaced by the class whose hash is given by the class_hash argument. After calling replace_class, the code currently executing from the old class will finish running. The new class will be used from the next transaction onwards or if the contract is called via the call_contract syscall in the same transaction (after the replacement). class_hash The hash of the class you want to use as a replacement. None. syscalls.cairo extern fn storage_read_syscall( address_domain: u32, address: StorageAddress, ) -> SyscallResult implicits(GasBuiltin, System) nopanic; Gets the value of a key in the storage of the calling contract. This system call provides direct access to any possible key in storage, in contrast with var.read(), which enables you to read storage variables that are defined explicitly in the contract. For information on accessing storage by using the storage variables, see storage variables. address_domain The domain of the key, used to separate between different data availability modes. This separation is used in Starknet to offer different data availability modes. Currently, only the on-chain mode (where all updates go to L1), indicated by domain 0, is supported. Other address domains which will be introduced in the future will behave differently in terms of publication (in particular, they will not be posted on L1, creating a tradeoff between cost and security). address The requested storage address. The value of the key, of type SyscallResult. syscalls.cairo use starknet::storage_access::storage_base_address_from_felt252; ... let storage_address = storage_base_address_from_felt252(3534535754756246375475423547453) storage_read_syscall(0, storage_address).unwrap_syscall() extern fn storage_write_syscall( address_domain: u32, address: StorageAddress, value: felt252 ) -> SyscallResult implicits(GasBuiltin, System) nopanic; Sets the value of a key in the storage of the calling contract. This system call provides direct access to any possible key in storage, in contrast with var.write(), which enables you to write to storage variables that are defined explicitly in the contract. For information on accessing storage by using the storage variables, see storage variables. address_domain The domain of the key, used to separate between different data availability modes. This separation is used in Starknet to offer different data availability modes. Currently, only the on-chain mode (where all updates go to L1), indicated by domain 0, is supported. Other address domains which will be introduced in the future will behave differently in terms of publication (in particular, they will not be posted on L1, creating a tradeoff between cost and security). address The requested storage address. value The value to write to the key. None. Common library syscalls.cairo","title":"System Calls","component":"documentation","version":"","name":"system-calls-cairo1","url":"/documentation/architecture_and_concepts/Smart_Contracts/system-calls-cairo1/","titles":[{"text":"get_block_hash","hash":"get_block_hash","id":1},{"text":"Syntax","hash":"syntax","id":2},{"text":"Description","hash":"description","id":3},{"text":"Return values","hash":"return_values","id":4},{"text":"Common library","hash":"common_library","id":5},{"text":"Error","hash":"error","id":6},{"text":"get_execution_info","hash":"get_execution_info","id":7},{"text":"Syntax","hash":"syntax_2","id":8},{"text":"Description","hash":"description_2","id":9},{"text":"Arguments","hash":"arguments","id":10},{"text":"Return values","hash":"return_values_2","id":11},{"text":"Common library","hash":"common_library_2","id":12},{"text":"call_contract","hash":"call_contract","id":13},{"text":"Syntax","hash":"syntax_3","id":14},{"text":"Description","hash":"description_3","id":15},{"text":"Arguments","hash":"arguments_2","id":16},{"text":"Return values","hash":"return_values_3","id":17},{"text":"Common library","hash":"common_library_3","id":18},{"text":"deploy","hash":"deploy","id":19},{"text":"Syntax","hash":"syntax_4","id":20},{"text":"Description","hash":"description_4","id":21},{"text":"Arguments","hash":"arguments_3","id":22},{"text":"Common library","hash":"common_library_4","id":23},{"text":"emit_event","hash":"emit_event","id":24},{"text":"Syntax","hash":"syntax_5","id":25},{"text":"Description","hash":"description_5","id":26},{"text":"Arguments","hash":"arguments_4","id":27},{"text":"Return values","hash":"return_values_4","id":28},{"text":"Common library","hash":"common_library_5","id":29},{"text":"Example","hash":"example","id":30},{"text":"library_call","hash":"library_call","id":31},{"text":"Syntax","hash":"syntax_6","id":32},{"text":"Description","hash":"description_6","id":33},{"text":"Arguments","hash":"arguments_5","id":34},{"text":"Return values","hash":"return_values_5","id":35},{"text":"Common library","hash":"common_library_6","id":36},{"text":"send_message_to_L1","hash":"send_message_to_L1","id":37},{"text":"Syntax","hash":"syntax_7","id":38},{"text":"Description","hash":"description_7","id":39},{"text":"Arguments","hash":"arguments_6","id":40},{"text":"Return values","hash":"return_values_6","id":41},{"text":"Common library","hash":"common_library_7","id":42},{"text":"Example","hash":"example_2","id":43},{"text":"replace_class","hash":"replace_class","id":44},{"text":"Syntax","hash":"syntax_8","id":45},{"text":"Description","hash":"description_8","id":46},{"text":"Arguments","hash":"arguments_7","id":47},{"text":"Return values","hash":"return_values_7","id":48},{"text":"Common library","hash":"common_library_8","id":49},{"text":"storage_read","hash":"storage_read","id":50},{"text":"Syntax","hash":"syntax_9","id":51},{"text":"Description","hash":"description_9","id":52},{"text":"Arguments","hash":"arguments_8","id":53},{"text":"Return values","hash":"return_values_8","id":54},{"text":"Common library","hash":"common_library_9","id":55},{"text":"Example","hash":"example_3","id":56},{"text":"storage_write","hash":"storage_write","id":57},{"text":"Syntax","hash":"syntax_10","id":58},{"text":"Description","hash":"description_10","id":59},{"text":"Arguments","hash":"arguments_9","id":60},{"text":"Return values","hash":"return_values_9","id":61}]},"48":{"id":48,"text":"Starknet smart contracts are written in Cairo. However, Cairo is a general purpose language that you can use for much more than just contract language. For details, see Cairo – a Turing-complete STARK-friendly CPU architecture. So writing smart contracts requires some operations, such as calling another contract or accessing the contract’s storage, that standalone programs do not require. The Starknet contract language supports these operations by using system calls. System calls enable a contract to require services from the Starknet OS. You can use system calls in a function to get information that depends on the broader state of Starknet, which would otherwise be inaccessible, rather than local variables that appear in the function’s scope. Below we describe the collection of system calls that can be used to get information regarding the block, transaction or execution context during runtime (e.g. block number, account address, and caller address). func get_block_number{syscall_ptr : felt*}() -> (block_number : felt) Description Gets the number of the block in which the transaction is executed. Arguments None. Return values block_number The number of the block in which the transaction is executed. Common library syscalls.cairo Syntax func get_block_timestamp{syscall_ptr : felt*}() -> (block_timestamp : felt) Description Gets the timestamp of the block in which the transaction is executed. Arguments None. Return values 'block_timestamp' The timestamp of the block in which the transaction is executed Common library syscalls.cairo Syntax func get_caller_address{syscall_ptr : felt*}() -> (caller_address : felt) Description Returns the address of the calling contract, or 0 if the call was not initiated by another contract. Arguments None. Return values caller_address The address of the calling contract, or 0 if the call was not initiated by another contract. Common library syscalls.cairo Syntax func get_contract_address{syscall_ptr : felt*}() -> (contract_address : felt) Description Gets the address of the contract who raised the system call. Arguments None. Return values contract_address The address of the contract who raised the system call. Common library syscalls.cairo Syntax func get_sequencer_address{syscall_ptr : felt*}() -> (sequencer_address : felt) Description Returns the address of the sequencer that generated the current block. Arguments None. Return values sequencer_address The address of the sequencer that generated the current block. Common library syscalls.cairo ===get_transaction_info Gets information about the original transaction. Syntax func get_tx_info{syscall_ptr : felt*}() -> (tx_info : TxInfo*) Description Gets information about the original transaction. Arguments None. Return values tx_info The following information about the original transaction: the version of the transaction the address of the account that initiated this transaction the maximum fee that is allowed to be charged for the inclusion of this transaction the signature of the account that initiated this transaction the transaction’s hash the intended chain id Common library syscalls.cairo In Cairo 1.0, all block/transaction/execution context getters are batched into a single system call: get_execution_info. Syntax extern fn get_execution_info_syscall() -> SyscallResult> implicits( GasBuiltin, System ) nopanic; Description Gets information about the original transaction. Arguments None. Return values ExecutionInfo A struct containing the execution info Description Calls a given contract. This system call expects the address of the called contract, a selector for a function within that contract, and call arguments. Syntax Cairo 0 Cairo 1.0 func call_contract{syscall_ptr : felt*}( contract_address : felt, function_selector : felt, calldata_size : felt, calldata : felt* ) -> (retdata_size : felt, retdata : felt*) extern fn call_contract_syscall( address: ContractAddress, entry_point_selector: felt252, calldata: Span ) -> SyscallResult> implicits(GasBuiltin, System) nopanic; Arguments contract_address The address of the contract you want to call. function_selector A selector for a function within that contract. calldata_size The size, in number of felts, of the calldata. calldata The calldata. Return values retdata_size The size, in number of felts, of the return data. retdata The return data. Common library syscalls.cairo This is considered a lower level syntax for calling contracts. If the interface of the called contract is available, then you can use a more straightforward syntax. Syntax Cairo 0 Cairo 1.0 func deploy{syscall_ptr : felt*}( class_hash : felt, contract_address_salt : felt, constructor_calldata_size : felt, constructor_calldata : felt*, deploy_from_zero: felt, ) -> (contract_address : felt) extern fn deploy_syscall( class_hash: ClassHash, contract_address_salt: felt252, calldata: Span, deploy_from_zero: bool, ) -> SyscallResult)> implicits(GasBuiltin, System) nopanic; Description Deploys a new instance of a previously declared class. Arguments class_hash The class hash of the contract to be deployed contract_address_salt The salt, an arbitrary value provided by the sender, used in the computation of the contract’s address. constructor_calldata_size The number of arguments to pass to the constructor, equal to the number of felts in constructor_calldata. constructor_calldata The constructor’s calldata. An array of felts. deploy_from_zero A flag used for the contract address computation. If not set, the caller address will be used as the new contract’s deployer address, otherwise 0 is used. Return values contract_address The address of the deployed contract. Common library syscalls.cairo Syntax Cairo 0 Cairo 1.0 func emit_event{syscall_ptr : felt*}(keys_len : felt, keys : felt*, data_len : felt, data : felt*) extern fn emit_event_syscall( keys: Span, data: Span ) -> SyscallResult implicits(GasBuiltin, System) nopanic; Description Emits an event with a given set of keys and data. For more information, and for a higher level syntax for emitting events, see Starknet events. Arguments keys_len The number of keys in the event. Analogous to Ethereum’s event topics, you can use the starknet_getEvents method to filter by these keys. keys The event’s keys data_len The number of data elements in the event. data The event’s data Return values None. Common library syscalls.cairo Example The following example emits an event with two keys, the strings status and deposit and three data elements: 1, 2, and 3. Cairo 0 Cairo 1 let (keys : felt*) = alloc() assert keys[0] = 'status' assert keys[1] = 'deposit' let (data : felt*) = alloc() assert data[0] = 1 assert data[1] = 2 assert data[2] = 3 emit_event(2, keys, 3, data) let keys = ArrayTrait::new(); keys.append('key'); keys.append('deposit'); let values = ArrayTrait::new(); values.append(1); values.append(2); values.append(3); emit_event_syscall(keys, values).unwrap_syscall(); Syntax Cairo 0 Cairo 1.0 func library_call{syscall_ptr : felt*}( class_hash : felt, function_selector : felt, calldata_size : felt, calldata : felt* ) -> (retdata_size : felt, retdata : felt*) extern fn library_call_syscall( class_hash: ClassHash, function_selector: felt252, calldata: Span ) -> SyscallResult> implicits(GasBuiltin, System) nopanic; Description Calls the requested function in any previously declared class. This system call replaces the known delegate call functionality from Ethereum, with the important difference that there is only one contract involved. The class is only used for its logic. Arguments class_hash The hash of the class you want to use. function_selector A selector for a function within that class. calldata_size The size, in number of felts, of the calldata. calldata The calldata. Return values retdata_size The size, in number of felts, of the return data. retdata The return data. Common library syscalls.cairo This system call is not currently not supported in Cairo 1.0. In practice, this was only used for proxy contracts, which in Cairo 1.0 can be implemented instead via the replace_class system call, making library_call_l1_handler redundant. Syntax func library_call_l1_handler{syscall_ptr : felt*}( class_hash : felt, function_selector : felt, calldata_size : felt, calldata : felt* ) -> (retdata_size : felt, retdata : felt*) Description Calls the requested L1 handler in any previously declared class. Same as the library_call system call, but also enables you to call an L1 handler that cannot otherwise be called directly. For more information, see Starknet’s messaging mechanism. When you invoke an L1 handler with this system call, the sequencer does not consume an L1→L2 message. This system call enables an L1 handler to use the logic inside an L1 handler in a different class. It is recommended to raise this system call only inside an L1 handler. Arguments class_hash The hash of the class you want to use. function_selector A selector for an L1 handler function within that class. calldata_size The size, in number of felts, of the calldata. calldata The calldata. Return values retdata_size The size, in number of felts, of the return data. retdata The return data. Common library syscalls.cairo Syntax Cairo 0 Cairo 1.0 func send_message_to_l1{syscall_ptr : felt*}( to_address : felt, payload_size : felt, payload : felt* ) extern fn send_message_to_l1_syscall( to_address: felt252, payload: Span ) -> SyscallResult implicits(GasBuiltin, System) nopanic; Description Sends a message to L1. This system call includes the message parameters as part of the proof’s output, and exposes these parameters to the Starknet Core contract on L1 once the state update, including the transaction, is received. For more information, see Starknet’s messaging mechanism. Arguments to_address The recipient’s L1 address. payload_size The size of the message payload. payload A pointer to an array containing the contents of the message. Return values None. Common library messages.cairo Example The following example sends a message whose content is (1,2) to the L1 contract whose address is 3423542542364363. Cairo 0 Cairo 1 let payload = alloc() payload[0] = 1 payload[1] = 2 send_message_to_l1(3423542542364363,2,payload) let payload = ArrayTrait::new(); payload.append(1); payload.append(2); send_message_to_l1_syscall(payload).unwrap_syscall(); Syntax Cairo 0 Cairo 1.0 replace_class(class_hash: felt) extern fn replace_class_syscall( class_hash: ClassHash ) -> SyscallResult implicits(GasBuiltin, System) nopanic; Description Once replace_class is called, the class of the calling contract (i.e. the contract whose address is returned by get_contract_address at the time the syscall is called) will be replaced by the class whose hash is given by the class_hash argument . After calling replace_class, the code currently executing from the old class will finish running. The new class will be used from the next transaction onwards or if the contract is called via the call_contract syscall in the same transaction (after the replacement). Arguments class_hash The hash of the class you want to use as a replacement. Return values None Common library syscalls.cairo Syntax Cairo 0 Cairo 1.0 func storage_read{syscall_ptr : felt*}(address : felt) -> (value : felt) extern fn storage_read_syscall( address_domain: u32, address: StorageAddress, ) -> SyscallResult implicits(GasBuiltin, System) nopanic; Description Gets the value of a key in the storage of the calling contract. This system call provides direct access to any possible key in storage, in contrast with balance.read(), which enables you to read storage variables that are defined explicitly in the contract. For information on accessing storage by using the storage variables, see storage variables. Arguments address The address of the storage key you want to read. Return values value The value of the key. Common library syscalls.cairo Example Cairo 0 Cairo 1.0 let value = storage_read(3534535754756246375475423547453) use starknet::storage_access::storage_base_address_from_felt252; ... let storage_address = storage_base_address_from_felt252(3534535754756246375475423547453) storage_read_syscall(0, storage_address).unwrap_syscall() Sets the value of a key in the storage of the calling contract. Syntax Cairo 0 Cairo 1.0 func storage_write{syscall_ptr : felt*}(address : felt, value : felt) extern fn storage_write_syscall( address_domain: u32, address: StorageAddress, value: felt252 ) -> SyscallResult implicits(GasBuiltin, System) nopanic; Description Sets the value of a key in the storage of the calling contract. This system call provides direct access to any possible key in storage, in contrast with balance.write(), which enables you to write to storage variables that are defined explicitly in the contract. For information on accessing storage by using the storage variables, see storage variables. Arguments address The address of the storage key to which you want to write. .value The value to write to the key. Return values None. Common library syscalls.cairo","title":"System calls","component":"documentation","version":"","name":"system-calls","url":"/documentation/architecture_and_concepts/Smart_Contracts/system-calls/","titles":[{"text":"getters (Cairo 0)","hash":"getters","id":1},{"text":"get_block_number","hash":"get_block_number","id":2},{"text":"get_block_timestamp","hash":"get_block_timestamp","id":3},{"text":"get_caller_address","hash":"get_caller_address","id":4},{"text":"get_contract_address","hash":"get_contract_address","id":5},{"text":"get_sequencer_address","hash":"get_sequencer_address","id":6},{"text":"getters (Cairo 1.0)","hash":"getters_cairo_1_0","id":7},{"text":"get_execution_info","hash":"get_execution_info","id":8},{"text":"call_contract","hash":"call_contract","id":9},{"text":"deploy","hash":"deploy","id":10},{"text":"emit_event","hash":"emit_event","id":11},{"text":"library_call","hash":"library_call","id":12},{"text":"library_call_l1_handler","hash":"library_call_l1_handler","id":13},{"text":"send_message_to_L1","hash":"send_message_to_L1","id":14},{"text":"replace_class","hash":"replace_class","id":15},{"text":"storage_read","hash":"storage_read","id":16},{"text":"storage_write","hash":"storage_write","id":17}]},"49":{"id":49,"text":"In Starknet, the block is defined as a list of transactions and a block header. The following fields define the block header: Name Type Description Implemented parent_block_hash FieldElement The hash of this block’s parent ✓ block_number Integer The number (height) of this block ✓ global_state_root FieldElement The state commitment after this block ✓ sequencer_address FieldElement The Starknet address of the sequencer who created this block ✓ block_timestamp Timestamp The time the sequencer created this block before executing transactions ✓ transaction_count Integer The number of transactions in a block ✓ transaction_commitment FieldElement A commitment to the transactions included in the block ✓ event_count Integer The number of events ✓ event_commitment FieldElement A commitment to the events produced in this block ✓ protocol_version Integer The version of the Starknet protocol used when creating this block extra data FieldElement Extraneous data that might be useful for running transactions The commitment fields event_commitment and transaction_commitment are the roots of a height 64 binary Merkle Patricia tree. For event_commitment, the leaf at index \\(i\\) corresponds to the hash of the \\(i'th\\) event. For transaction_commitment, the leaf at index \\(i\\) corresponds to \\(h(transaction \\ hash, signature)\\) if the \\(i'th\\) transaction is an invoke transaction and \\(h(0,0)\\) otherwise. The block hash is defined as the Pedersen hash over the header’s elements. ℎ(𝐵) = ℎ( block_number, global_state_root, sequencer_address, block_timestamp, transaction_count, transaction_commitment, event_count, event_commitment, 0, 0, parent_block_hash ) Where \\(h\\) is the Pedersen hash. Zeros inside the hash computation of an object are used as placeholders, to be replaced in the future by meaningful fields.","title":"Block structure","component":"documentation","version":"","name":"header","url":"/documentation/architecture_and_concepts/Network_Architecture/Blocks/header/","titles":[{"text":"Block header","hash":"block_header","id":1},{"text":"Block hash","hash":"block_hash","id":2}]},"50":{"id":50,"text":"The following are the possible statuses of a transaction from the moment it’s sent by the user to the moment it’s validated by L1. Transaction is not yet known to the sequencer. Transaction was received by the sequencer. Transaction will now either execute successfully or be rejected. Transaction passed validation and entered an actual created block on L2. Transaction was accepted on-chain. Transaction executed unsuccessfully and thus was skipped (applies both to a pending and an actual created block). Possible reasons for transaction rejection: An assertion failed during the execution of the transaction (in Starknet, unlike in Ethereum, transaction executions do not always succeed). The block may be rejected on L1, thus changing the transaction status to REJECTED. The transaction receipt contains basic transaction details (block identifiers and the index within the block), a summary of the execution resources used by the transaction, the events emitted, a list of messages sent to L1, and a consumed L1 message (in case the transaction invokes an L1 handler). The following is an example of a receipt: { \"execution_resources\": { \"builtin_instance_counter\": { \"pedersen_builtin\": 0, \"range_check_builtin\": 0, \"bitwise_builtin\": 0, \"output_builtin\": 0, \"ecdsa_builtin\": 0, \"ec_op_builtin\": 0 }, \"n_steps\": 178, \"n_memory_holes\": 0 }, \"block_number\": 6807, \"transaction_index\": 0, \"transaction_hash\": \"0x3f187b7522320f1c87271772fedd6ad119f62595e2d9208824367463df94a5d\", \"status\": \"PENDING\", \"block_hash\": \"0x23173d4e2d5c0ecc1376b8dbe345c028aa424048c67f68812a9a83873a2d87f\", \"l2_to_l1_messages\": [], \"events\": [ { \"data\": [\"0\", \"4321\"], \"from_address\": \"0x14acf3b7e92f97adee4d5359a7de3d673582f0ce03d33879cdbdbf03ec7fa5d\", \"keys\": [ \"1744303484486821561902174603220722448499782664094942993128426674277214273437\" ] } ] }","title":"Transaction lifecycle","component":"documentation","version":"","name":"transaction-life-cycle","url":"/documentation/architecture_and_concepts/Network_Architecture/Blocks/transaction-life-cycle/","titles":[{"text":"Transaction status","hash":"transaction_status","id":1},{"text":"NOT_RECEIVED","hash":"not_received","id":2},{"text":"RECEIVED","hash":"received","id":3},{"text":"ACCEPTED_ON_L2","hash":"accepted_on_l2","id":4},{"text":"ACCEPTED_ON_L1","hash":"accepted_on_l1","id":5},{"text":"REJECTED","hash":"rejected","id":6},{"text":"Transaction receipt","hash":"transaction_receipt","id":7}]},"51":{"id":51,"text":"Starknet supports the following types of transactions: invoke transaction declare transaction deploy_account transaction This topic describes the available fields for these transaction types and how each transaction hash is calculated. Starknet supports the transaction versions described here. When the fields that comprise a transaction change, either with the addition of a new field or the removal of an existing field, then the transaction version increases. Do not submit a transaction that uses an unsupported transaction type, because it cannot be included in a proof, and so cannot become part of a Starknet block. In order to calculate the transaction hash, we first need to obtain the deployed contract address. The Deploy transaction’s hash is calculated as follows: deploy_tx_hash = ℎ( \"deploy\", version, contract_address, sn_keccak(\"constructor\"), ℎ(constructor_calldata), 0, chain_id ) Where: The placeholder zero is used to align the hash computation for the different types of transactions. “deploy” and “constructor” are constant strings encoded in ASCII. \\(h\\) is the Pedersen hash and \\(sn\\_keccak\\) is Starknet Keccak. chain_id is a constant value that specifies the network to which this transaction is sent. See Chain-Id. contract_address is calculated as described here. The invoke transaction is the main transaction type used to invoke contract functions in Starknet. Invoke transaction version 0 is deprecated and will be removed in a future release of Starknet. Table 1. Transaction fields Name Type Description sender_address FieldElement The address of the sender of this transaction. calldata List The arguments that are passed to the validate and execute functions. signature List Additional information given by the sender, used to validate the transaction. max_fee FieldElement The maximum fee that the sender is willing to pay for the transaction nonce FieldElement The transaction nonce. version FieldElement The transaction’s version. The value is 1. When the fields that comprise a transaction change, either with the addition of a new field or the removal of an existing field, then the transaction version increases. The invoke v1 transaction hash is calculated as a hash over the given transaction elements, specifically: invoke_v1_tx_hash = ℎ( \"invoke\", version, sender_address, 0, ℎ(calldata), max_fee, chain_id, nonce ) Where: \\(\\text{invoke}\\) is a constant prefix string, encoded in ASCII. The placeholder zero is used to align the hash computation for the different types of transactions. \\(\\text{chain_id}\\) is a constant value that specifies the network to which this transaction is sent. See Chain-Id. \\(h\\) is the Pedersen hash The hash of a v0 invoke transaction is computed as follows: invoke_v0_tx_hash = ℎ( \"invoke\", version, contract_address, entry_point_selector, ℎ(calldata), max_fee, chain_id ) Where: \\(\\text{invoke}\\) is a constant prefix string, encoded in (ASCII). \\(\\text{chain_id}\\) is a constant value that specifies the network to which this transaction is sent. See Chain-Id. \\(h\\) is the Pedersen hash The declare transaction is used to introduce new classes into the state of Starknet, enabling other contracts to deploy instances of those classes or use them in a library call. For more information, see contract classes. New Cairo 1.0 classes can only be declared via the declare v2 transaction. v1 used to declare Cairo 0 classes are deprecated and will be removed in a future Starknet version. v0 is no longer supported. Table 2. Transaction fields Name Type Description chain_id FieldElement The id of the chain to which the transaction is sent. contract_class ContractClass The (Cairo 1.0) class. compiled_class_hash FieldElement The hash of the compiled class (see here for more information) sender_address FieldElement The address of the account initiating the transaction. signature List Additional information given by the sender, used to validate the transaction. max_fee FieldElement The maximum fee that the sender is willing to pay for the transaction. nonce FieldElement The transaction nonce. version FieldElement The transaction’s version. The value is 2. When the fields that comprise a transaction change, either with the addition of a new field or the removal of an existing field, then the transaction version increases. Transaction version 0 is deprecated and will be removed in a future version of Starknet. The hash of a v2 declare transaction is computed as follows: declare_v2_tx_hash = ℎ( \"declare\", version, sender_address, 0, class_hash, max_fee, chain_id, nonce, compiled_class_hash ) Where: \\(h\\) is the Poseidon hash function class_hash is the hash of the contract class. See Class Hash for details about how the hash is computed compiled_class_hash is the hash of the compiled class generated by the Sierra→Casm compiler which is currently used in Starknet These old versions used to declare Cairo 0 classes are deprecated and will be removed in a future Starknet version. Table 3. Transaction fields Name Type Description contract_class ContractClass The class object. sender_address FieldElement The address of the account initiating the transaction. max_fee FieldElement The maximum fee that the sender is willing to pay for the transaction. signature List Additional information given by the sender, used to validate the transaction. nonce FieldElement The transaction nonce. version FieldElement The transaction’s version. Possible values are 1 or 0. When the fields that comprise a transaction change, either with the addition of a new field or the removal of an existing field, then the transaction version increases. Transaction version 0 is deprecated and will be removed in a future version of Starknet. The hash of a v1 declare transaction is computed as follows: declare_v1_tx_hash = ℎ( \"declare\", version, sender_address, 0, class_hash, max_fee, chain_id, nonce ) Where: \\(\\text{declare}\\) is a constant prefix string, encoded in ASCII. \\(\\text{class_hash}\\) is the hash of the contract class. See Class Hash for details about how the hash is computed. The placeholder zero is used to align the hash computation for the different types of transactions. \\(\\text{chain_id}\\) is a constant value that specifies the network to which this transaction is sent. See Chain-Id. \\(h\\) is the Pedersen hash The hash of a v0 declare transaction is computed as follows: declare_v0_tx_hash = ℎ( \"declare\", version, sender_address, 0, 0, max_fee, chain_id, class_hash ) Where: \\(\\text{declare}\\) is a constant prefix string, encoded in ASCII. The placeholder zeros are used to align the hash computation for the different types of transactions. \\(\\text{class_hash}\\) is the hash of the contract class. See Class Hash for details about how the hash is computed. \\(\\text{chain_id}\\) is a constant value that specifies the network to which this transaction is sent. See Chain-Id. \\(h\\) is the Pedersen hash Since StarkNet v0.10.1 the deploy_account transaction replaces the deploy transaction for deploying account contracts. To use it, you should first pre-fund your would-be account address so that you could pay the transaction fee (see here for more details) . You can then send the deploy_account transaction. A deploy_account transaction has the following fields: Table 4. Deploy account fields Name Type Description class_hash FieldElement The hash of the desired account class. constructor_calldata List The arguments to the account constructor. contract_address_salt FieldElement A random salt that determines the account address. signature List Additional information given by the sender, used to validate the transaction. max_fee FieldElement The maximum fee that the sender is willing to pay for the transaction nonce FieldElement The transaction nonce. version FieldElement The transaction’s version. The value is 1. The hash of a deploy_account transaction is computed as follows: deploy_account_tx_hash = ℎ( \"deploy_account\", version, contract_address, 0, ℎ(constructor_calldata, class_hash, contract_address_salt), max_fee, chain_id, nonce ) While Starknet does not have a specific signature scheme built into the protocol, the Cairo language, in which smart contracts are written, does have an efficient implementation for ECDSA signature with respect to a STARK-friendly curve. The generator used in the ECDSA algorithm is \\(G=\\left(g_x, g_y\\right)\\) where: \\(g_x=874739451078007766457464989774322083649278607533249481151382481072868806602\\) \\(g_y=152666792071518830868575557812948353041420400780739481342941381225525861407\\) Starknet currently supports three chain IDs. Chain IDs are given as numbers, representing the ASCII encoding of specific constant strings, as illustrated by the following Python snippet: chain_id = int.from_bytes(value, byteorder=\"big\", signed=False) Three constants are currently used: SN_MAIN for Starknet’s main network. SN_GOERLI for Starknet’s public testnet. SN_GOERLI2 for Starknet developers.","title":"Transaction types","component":"documentation","version":"","name":"transactions","url":"/documentation/architecture_and_concepts/Network_Architecture/Blocks/transactions/","titles":[{"text":"Transaction versioning","hash":"transaction_versioning","id":1},{"text":"Deploy transaction hash calculation","hash":"deploy_transaction","id":2},{"text":"Invoke transaction","hash":"invoke_transaction","id":3},{"text":"Invoke v1","hash":"invoke_v1","id":4},{"text":"v1 hash calculation","hash":"v1_hash_calculation","id":5},{"text":"Deprecated features","hash":"deprecated_features","id":6},{"text":"v0 hash calculation","hash":"v0_hash_calculation","id":7},{"text":"Declare transaction","hash":"declare-transaction","id":8},{"text":"Declare v2","hash":"declare_v2","id":9},{"text":"v2 hash calculation","hash":"v2_hash_calculation","id":10},{"text":"Deprecated features","hash":"deprecated_features_2","id":11},{"text":"Declare v1","hash":"declare_v1","id":12},{"text":"v1 hash calculation","hash":"v1_hash_calculation_2","id":13},{"text":"v0 hash calculation","hash":"v0_hash_calculation_2","id":14},{"text":"Deploy account transaction","hash":"deploy_account_transaction","id":15},{"text":"Deploy account hash calculation","hash":"deploy_account_hash_calculation","id":16},{"text":"Signature","hash":"signature","id":17},{"text":"Chain-Id","hash":"chain-id","id":18}]},"52":{"id":52,"text":"In the current stage of the Alpha, Starknet operates in a ZK-Rollup mode. This means that upon the acceptance of a state update on-chain, the state diff between the previous and new state is sent as calldata to Ethereum. This data allows anyone that observes Ethereum to reconstruct the current state of Starknet. To update the Starknet state on L1, it suffices to send a valid proof — without information on the transactions or particular changes that this update caused. Consequently, more information must be provided in order to allow other parties to locally track Starknet’s state. The state diffs contain information on every contract whose storage was updated and additional information on contract deployments. For each affected contract, we have: The contract address A single word that encodes: class information flag (0 = Storage updates only / 1 = contract was deployed or replaced in this state update). When this flag is on, we will have an additional word before the storage updates section, which contains the new class hash nonce num_of_storage_updates See below for the expected format: \\[\\underbrace{0\\cdots0}_{\\text{127 bits}}| \\underbrace{\\text{class information flag}}_{\\text{1 bit}}| \\underbrace{\\text{new nonce}}_{\\text{64 bits}}|{ \\underbrace{\\text{# of storage updates}}_{\\text{64 bits}}}_{\\text{LSB}}\\] For each storage update: key - the address inside the contract’s storage where the value is updated value - the new value Next, we have information about newly declared classes: The # of (Cairo 1.0) classes that were declared in the block For each class we have: The class hash The compiled class hash Below we show an example of on chain data that was extracted from L1, and proceed to decode it according to the above format. [ 1, 2019172390095051323869047481075102003731246132997057518965927979101413600827, 18446744073709551617, 100, 200, 1, 1351148242645005540004162531550805076995747746087542030095186557536641755046, 558404273560404778508455254030458021013656352466216690688595011803280448032 ] The first element, 1, is the number of contracts whose state was updated The second element, 2019172390095051323869047481075102003731246132997057518965927979101413600827, is the address of the first (and only) contract whose state changed The third element, 18446744073709551617, which is \\(2^{64}+1\\), encodes the following: The class information flag is 0, that is, the contract was not just deployed or replaced, so we shouldn’t treat the next word as the class hash The new nonce is 1 One storage cell was updated The next two elements, 100 and 200 encode the storage update (the value of key 100 was set to 200) Next we have the new declare section: 1 means that we had a single declare v2 in this state update, and the next two elements encode the class hash and compiled class hash of the declared class The state diffs contain information on every contract whose storage was updated and additional information on contract deployments. Those differences are sent as uint256[] array as part of the calldata, and are encoded as follows: Number of cells that encode contract deployments For each deployed contract, we have: xref:Smart_Contracts/contract-address.adoc contract_address - the address of the deployed contract contract_hash - the hash of the class Number of contracts whose storage is updated For each such contract, we have: contract_address - the address of the contract num_of_storage_updates - number of storage updates `nonce, num of storage updates ` - a uint256 value that encodes both the number of storage updates for that contract and the updated nonce: \\[\\underbrace{0\\cdots0}_{\\text{128 bits}} | \\underbrace{\\text{new nonce}}_{\\text{64 bits}} | {\\underbrace{\\text{# of storage updates}}_{\\text{64 bits}}}_{\\text{LSB}}\\] For each storage update: key - the address inside the contract’s storage where the value is updated value - the new value Below we show an example of on chain data which was extracted from L1, and proceed to decode it according to the above format. [ 2, 2472939307328371039455977650994226407024607754063562993856224077254594995194, 1336043477925910602175429627555369551262229712266217887481529642650907574765, 5, 2019172390095051323869047481075102003731246132997057518965927979101413600827, 18446744073709551617, 5, 102, 2111158214429736260101797453815341265658516118421387314850625535905115418634, 2, 619473939880410191267127038055308002651079521370507951329266275707625062498, 1471584055184889701471507129567376607666785522455476394130774434754411633091, 619473939880410191267127038055308002651079521370507951329266275707625062499, 541081937647750334353499719661793404023294520617957763260656728924567461866, 2472939307328371039455977650994226407024607754063562993856224077254594995194, 1, 955723665991825982403667749532843665052270105995360175183368988948217233556, 2439272289032330041885427773916021390926903450917097317807468082958581062272, 3429319713503054399243751728532349500489096444181867640228809233993992987070, 1, 5, 1110, 3476138891838001128614704553731964710634238587541803499001822322602421164873, 6, 59664015286291125586727181187045849528930298741728639958614076589374875456, 600, 221246409693049874911156614478125967098431447433028390043893900771521609973, 400, 558404273560404778508455254030458021013656352466216690688595011803280448030, 100, 558404273560404778508455254030458021013656352466216690688595011803280448031, 200, 558404273560404778508455254030458021013656352466216690688595011803280448032, 300, 1351148242645005540004162531550805076995747746087542030095186557536641755046, 500 ] The first element, 2, is the number of cells that encode contracts deployment. The next two elements describe a single contract deployment with the following parameters: contract_address: 2472939307328371039455977650994226407024607754063562993856224077254594995194 contract_hash: 1336043477925910602175429627555369551262229712266217887481529642650907574765 The next element, 5 (index 3 in the array), is the number of contracts whose storage was updated. We will take only the first contract as an example. contract_address: 2019172390095051323869047481075102003731246132997057518965927979101413600827 Following the above contract address, we have 18446744073709551617 (index 8 in the array), which is \\(2^{64}+1\\), thus: The new contract nonce is 1 One storage key is updated The value at key 5 was changed to 102 The next 4 contract storage updates are interpreted in the same manner. The data described above is sent across several Ethereum transactions, each holding a part of this array as calldata. Each new Starknet block has its associated state diff transactions. You can find the code for extracting this data from Ethereum in Pathfinder’s repo. Pathfinder is the first Starknet full node implementation. You may also take a look at the Python script which extracts the same information.","title":"On-chain data","component":"documentation","version":"","name":"on-chain-data","url":"/documentation/architecture_and_concepts/Network_Architecture/Data_Availability/on-chain-data/","titles":[{"text":"Introduction","hash":"introduction","id":1},{"text":"On-chain data: post v0.11.0","hash":"on_chain_data_post_v0_11_0","id":2},{"text":"v0.11.0 format","hash":"v0.11.0_format","id":3},{"text":"v0.11.0 example","hash":"v0.11.0_example","id":4},{"text":"On-chain data: pre v0.11.0","hash":"on_chain_data_pre_v0_11_0","id":5},{"text":"Pre v0.11.0 format","hash":"pre_v0.11.0_format","id":6},{"text":"Pre v0.11.0 example","hash":"pre_v0.11.0_example","id":7},{"text":"Extract from Ethereum","hash":"extract_from_ethereum","id":8}]},"53":{"id":53,"text":"In this section, we will review Starknet Alpha fee mechanism. If you want to skip the motivation and deep dive into the mechanism, you can skip directly to the final formula. This section focuses on fees paid by an account on L2. For information about messaging fees that are paid on L1, see L1 → L2 message fees. Users can specify the maximum fee that they are willing to pay for a transaction via the max_fee field. The only limitation on the sequencer (enforced by the Starknet OS) is that the actual fee charged is bounded by max_fee, but for now, StarkWare’s sequencer will only charge the fee required to cover the proof cost (potentially less than the max fee). Presently, the sequencer only takes into account L1 costs involving proof submission. There are two components affecting the L1 footprint of a transaction: Computational complexity: the heavier the transaction, the larger its portion in the proof verification cost. On chain data: L1 calldata cost originating from data availability and L2→L1 messages. The fee is denominated in ETH (this may change in future versions). Each transaction is associated with a gas estimate (explained below), and combining this with the gas price yields the estimated fee. Let’s analyze the correct metric for measuring transaction complexity. For simplicity, we will ignore Cairo’s builtins for the sake of the explanation, and later see how to address them. Recall that a Cairo program execution yields an execution trace. When proving a Starknet block, we aggregate all the transactions appearing in that block to the execution trace. Starknet’s prover generates proofs for execution traces, up to some maximal length \\(L\\) (Derived from the specs of the proving machine and the desired proof latency). Tracking the execution trace length associated with each transaction is simple. Each assertion over field elements (such as verifying addition/multiplication over the field) requires the same, constant number of trace cells (this is where our “no-builtins” assumption kicks in! Obviously Pedersen occupies more trace cells than addition). Therefore, in a world without builtins, the fee of the transaction \\(tx\\) is correlated with \\(\\text{TraceCells}[tx]/L\\). The Cairo execution trace is separated — and each builtin has its own slot. We have to mind this slot allocation when determining the fee. Let’s go over a concrete example first. For example, imagine the following trace that the prover will occupy: (up to) 500,000,000 Cairo Steps (up to) 20,000,000 Pedersen hashes (up to) 4,000,000 signature verifications (up to) 10,000,000 range checks The proof will be closed and sent to L1 when any of these components becomes full. It’s important to realize that the division to builtins must be predetermined! We can’t decide on the fly to have proof with 20,000,001 Pedersen and nothing else. Suppose, for example, that a transaction uses 10,000 Cairo steps and 500 Pedersen hashes. We can squeeze at most 40,000 such transactions into our hypothetical trace (20,000,000/500). Therefore, its gas price will be correlated with 1/40,000 of the cost of submitting proof. Notice we completely ignored the number of Cairo steps in this transaction performance estimation, as it is not the limiting factor (since 500,000,000/10,000 > 20,000,000/500). With this example in mind, we can now formulate the exact fee associated with L2 computation. For each transaction, the sequencer calculates a vector CairoResourceUsage holding: Number of Cairo steps Number of applications of each Cairo builtin (e.g., five range checks and two Pedersen hashes) The sequencer crosses this information with the CairoResourceFeeWeights vector. For each resource type (step or a specific builtin application), CairoResourceFeeWeights has an entry that specifies the relative gas cost of that component in the proof. Going back to the above example, if the cost of submitting a proof with 20,000,000 Pedersen hashes is roughly 5m gas, then the weight of the Pedersen builtin is 0.25 gas per application (5,000,000/20,000,000). The sequencer has a pre-defined weights vector, in accordance with the proof parameters. The sequencer will charge only according to the limiting factor! Therefore the fee is correlated with: \\[\\max_k[\\text{CairoResourceUsage}_k \\cdot \\text{CairoResourceFeeWeights}_k]\\] Where \\(k\\) here enumerates the Cairo resource components, i.e. the number of steps and builtins used. The weights are: Cairo step Pedersen Poseidon Range check ECDSA Bitwise EC_OP 0.01 gas/step 0.32 gas/application 0.32 gas/application 0.16 gas/application 20.48 gas/application 0.64 gas/application 10.24 gas/application The on-chain data associated with a transaction is composed of three parts Storage updates L2→L1 messages Deployed contracts Whenever a transaction updates a key at the storage of some contract, the following data reaches L1: Contract_address Number of updated keys in that contract Key to update New value Note that only the most recent value reaches L1. That is, the transaction’s fee only depends on the number of unique storage updates (if the same storage cell is updated multiple times within the transaction, the fee remains that of a single update). Consequently, the associated storage update fee for a transaction updating \\(n\\) unique contracts and \\(m\\) unique keys is: \\[\\text{gas_price}\\cdot c_w\\cdot\\underbrace{(2n+2m)}_{\\text{number of words}}\\] where \\(c_w\\) is the calldata cost (in gas) per 32-byte word. Note that there are many possible improvements to the above pessimistic estimation that will be gradually presented in future versions of Starknet. For example, if different transactions within the same block update the same storage cell, there is no need to charge both of them (only the latest value reaches L1). In the future, Starknet may include a refund mechanism for such cases. When a transaction that raises the send_message_to_l1 syscall is included in a state update, the following data reaches L1: L2 sender address L1 destination address Payload size Payload (list of field elements) Consequently, the fee associated with a single L2→L1 message is: \\[\\text{gas_price}\\cdot c_w\\cdot(3+\\text{payload_size})\\] where \\(c_w\\) is the calldata cost (in gas) per 32-byte word. When a transaction that raises the deploy syscall is included in a state update, the following data reaches L1: Contract address Class hash Consequently, the fee associated with a single deployment is: \\[\\text{gas_price}\\cdot 2 c_w\\] where \\(c_w\\) is the calldata cost (in gas) per 32-byte word. The fee for a transaction with: Cairo usage represented by the vector \\(v\\) (the entries of \\(v\\) correspond to the number of steps and number of applications per builtin) \\(n\\) unique contract updates \\(m\\) unique key updates \\(t\\) messages with payload sizes \\(q_1,...,q_t\\) \\(\\ell\\) contract deployments is given by: \\[F = \\text{gas_price}\\cdot\\left(\\max_k v_k w_k + c_w\\left(2(n+m) + 3t + \\sum\\limits_{i=1}^t q_i + 2\\ell\\right)\\right)\\] where \\(w\\) is the weights vector discussed above and \\(c_w\\) is the calldata cost (in gas) per 32-byte word. The fee is charged atomically with the transaction execution on L2. The Starknet OS injects a transfer of the fee-related ERC-20, with an amount equal to the fee paid, the sender equal to the transaction submitter, and the sequencer as a receiver.","title":"Fee mechanism","component":"documentation","version":"","name":"fee-mechanism","url":"/documentation/architecture_and_concepts/Network_Architecture/Fees/fee-mechanism/","titles":[{"text":"Introduction","hash":"introduction","id":1},{"text":"Fee units","hash":"fee_units","id":2},{"text":"How much fee is charged? High-level overview","hash":"how_much_fee_is_charged_high_level_overview","id":3},{"text":"Computation","hash":"computation","id":4},{"text":"Without builtins","hash":"without_builtins","id":5},{"text":"Adding builtins","hash":"adding_builtins","id":6},{"text":"General case","hash":"general_case","id":7},{"text":"On-chain data","hash":"_on_chain_data","id":8},{"text":"Storage updates","hash":"storage_updates","id":9},{"text":"L2→L1 messages","hash":"l2l1_messages","id":10},{"text":"Deployed contracts","hash":"deployed_contracts","id":11},{"text":"Overall fee","hash":"overall_fee","id":12},{"text":"When is the fee charged?","hash":"when_is_the_fee_charged","id":13}]},"54":{"id":54,"text":"Contracts on L2 can interact asynchronously with contracts on L1 via the L2→L1 messaging protocol. During the execution of a Starknet transaction, a contract on Starknet sends an L2→L1 message by calling the send_message_to_L1 syscall. The message parameters (which contain the recipient contract on L1 and the relevant data) are then attached to the relevant state update that includes this syscall invocation. For example: let mut payload: Array = ArrayTrait::new(); payload.append(); // potentially add more elements to message_payload (message_payload[1], message_payload[2], etc.) send_message_to_l1_syscall(:to_address, payload: payload.span()); After the state update that included this transaction is proved and the L1 state is updated, the message is stored on L1 in the Starknet Core Contract (and the relevant counter is increased), and the LogMessageToL1 event (which contains the message parameters) is emitted. Later, the recipient address on L1 can access and consume the message as part of an L1 transaction by re-supplying the message parameters. This is done by calling consumeMessageFromL2 in the Starknet Core Contract, who verifies that the hash corresponds to a stored message and that the caller is indeed the recipient on L1. In such a case, the reference count of the message hash in the Starknet Core Contract decreases by 1. The above flow is illustrated in the following diagram: As demonstrated above, the structure of an L2 → L1 message is given by: Table 1. L2 → L1 Message FromAddress ToAddress Payload FieldElement EthereumAddress Payload The hash of an L2 → L1 message is computed on L1 as follows: keccak256( abi.encodePacked( FromAddress, ToAddress, Payload.length, Payload ) ); As the hash of the message being sent needs to be written to L1 storage (in the Starknet Core contract) there is always a fixed 20k gas cost associated with sending an L2 to L1 message. Contracts on L1 can interact asynchronously with contracts on L2 via the L1→L2 messaging protocol. The protocol consists of the following stages: An L1 contract initiates a message to an L2 contract on Starknet. It does so by calling the sendMessageToL2 function on the Starknet Core Contract with the message parameters. The Starknet Core Contract hashes the message parameters and updates the L1→L2 message mapping to indicate that a message with this hash was indeed sent. In fact, the L1 contract records the fee that the sender paid. For more information, see L1 → L2 message fees. The message is then decoded into a Starknet transaction that invokes a function annotated with the l1_handler decorator on the target contract. Transactions like this on L2 are called L1 handler transactions. The Starknet sequencer, upon seeing enough L1 confirmations for the transaction that sent the message, initiates the corresponding L2 transaction. The L2 transaction invokes the relevant l1_handler. The L1 Handler transaction that was created in the previous step is added to a proof. The state update is received on the Core contract. the message is cleared from the Core contract’s storage. At this point, the message is handled. An L1→L2 message consists of: The L1 sender address The recipient contract address on Starknet Function selector Calldata array Message nonce Message nonce The message nonce is maintained on the Starknet Core contract on L1, and is bumped whenever a message is sent to L2. It is used to avoid hash collisions between different L1 handler transactions that are induced by the same message being sent on L1 multiple times (see below). Imagine a scenario where a user transfers an asset from L1 to L2. The flow starts with the user sending the asset to a Starknet bridge and the corresponding L1→L2 message generation. Now, imagine that the L2 message consumption doesn’t function (this might happen due to a bug in the dApp’s Cairo contract). This could result in the user losing custody over their asset forever. To mitigate this risk, we allow the contract that initiated the L1→L2 message to cancel it after declaring the intent and waiting a suitable amount of time. The user starts by calling startL1ToL2MessageCancellation with the relevant message parameters in the Starknet Core Contract. Then, after a five days delay, the user can finalize the cancellation by calling cancelL1ToL2Message. The reason for the delay is to protect the sequencer from a DOS attack in the form of repeatedly sending and canceling a message before it is included in L1, rendering the L2 block which contains the activation of the corresponding L1 handler invalid. Note that this flow should only be used in edge cases such as bugs on the Layer 2 contract preventing message consumption. An L1 → L2 message induces a transaction on L2, which, unlike regular transactions, is not sent by an account. This calls for a different mechanism for paying the transaction’s fee, for otherwise the sequencer has no incentive of including L1 handler transactions inside a block. To avoid having to interact with both L1 and L2 when sending a message, L1 → L2 messages are payable on L1, by sending ETH with the call to the payable function sendMessageToL2 on the Starknet Core contract. The sequencer takes this fee in exchange for handling the message. The sequencer charges the fee in full upon updating the L1 state with the consumption of this message. The fee itself is calculated in the same manner as \"regular\" L2 transactions. You can use the CLI to get an estimate of an L1 → L2 message fee. For completeness, we describe the precise structure of both the message as it appears on L1 and the induced transaction as it appears on L2. Table 2. L1 → L2 Message FromAddress ToAddress Selector Payload Nonce EthereumAddress FieldElement FieldElement List FieldElement The hash of the message is computed on L1 as follows: keccak256( abi.encodePacked( uint256(FromAddress), ToAddress, Nonce, Selector, Payload.length, Payload ) ); Table 3. L1 handler transaction Version ContractAddress Selector Calldata Nonce FieldElement FieldElement FieldElement List FieldElement The hash of the corresponding L1 handler transaction on L2 is computed as follows: l1_handler_tx_hash = ℎ( \"l1_handler\", version, contract_address, entry_point_selector, ℎ(calldata), chain_id, nonce ) Where: \\(\\text{l1_handler}\\) is a constant prefix, encoded in bytes (ASCII), with big-endian. \\(\\text{chain_id}\\) is a constant value that specifies the network to which this transaction is sent. \\(h\\) is the Pedersen hash In an l1_handler transaction, the first element of the calldata is always the Ethereum address of the sender.","title":"L1-L2 messaging","component":"documentation","version":"","name":"messaging-mechanism","url":"/documentation/architecture_and_concepts/Network_Architecture/L1-L2_Communication/messaging-mechanism/","titles":[{"text":"L2 → L1 messages","hash":"l2-l1_messages","id":1},{"text":"L2 → L1 structure and hashing","hash":"structure_and_hashing_l2-l1","id":2},{"text":"L1 → L2 messages","hash":"l1-l2-messages","id":3},{"text":"L1 → L2 message cancellation","hash":"l2-l1_message_cancellation","id":4},{"text":"L1 → L2 message fees","hash":"l1-l2-message-fees","id":5},{"text":"L1 → L2 structure and hashing","hash":"structure_and_hashing_l1-l2","id":6}]},"55":{"id":55,"text":"StarkGate is the Ethereum↔Starknet token bridge developed by StarkWare. Each supported token is associated with an L1 and L2 bridge contract that is communicating via Starknet’s messaging mechanism. The bridges facilitate a user’s ability to conduct their transactions with their ETH and ERC-20 tokens that reside on L1, via the Starknet Alpha network and its STARK-based computational compression capabilities. For simplicity, we use terms such as “deposit”, “transact”, and “transfer” to refer to various operations involving a bridge, even though ETH and ERC20 tokens never actually leave Ethereum. In order to reduce the risks involved in using an Alpha version, StarkGate Alpha on Mainnet has limitations involving the deposit amount and total value locked in the L1 bridge contract: Token Max total value locked ETH 80,000 ETH DAI 5,000,000 DAI USDC 40,000,000 USDC USDT 10,000,000 USDT WBTC 30 WBTC We plan to gradually ease these limitations and lift them completely, as confidence grows. Changes will be updated here, stay tuned. The user calls the function deposit (see ERC-20 deposit and ETH deposit), supplying as parameters the recipient address on Starknet and the amount to transfer in the case of ERC-20 token. The deposit function then: Checks that the funds transferred are within the Alpha limitations Transfers the funds from the user account to the Starknet bridge Emits a deposit event with the sender address on L1, the recipient address on L2, and the amount Sends a message to the relevant L2 bridge with the amount to be transferred, and the recipient address as parameters. Note that, since every single bridge is dedicated to one token type, the token type doesn’t have to be explicit here. At the end of this step (i.e., after the execution on L1) the deposit transaction is known to Starknet’s sequencer, yet sequencers may wait for enough L1 confirmations before the corresponding deposit transaction is initiated on L2. During this step, the status of the L2 deposit transaction is NOT_RECEIVED. Once enough block confirmations are received for step 1, the sequencers may refer to the deposit request by triggering the L1 handler using the handle_deposit function on the L2 bridge. The function handle_deposit verifies that the deposit indeed came from the corresponding L1 bridge. It then calls to the relevant ERC-20 contract (e.g. the ERC-20 representing ETH on Starknet) and mints the tokens for the user. At the end of this step (i.e., after the sequencer processed this transaction, but before a proof is generated), the status of the deposit request will be ACCEPTED_ON_L2. Once the sequencer completes the block construction, Starknet’s provers will prove its validity and submit a state update to L1. When this happens, the message confirming the funds transfer will be cleared from the Starknet Core Contract, and the fact that the user has transferred their funds will be part of the now finalized state of Starknet. Note that if the message wasn’t on L1 to begin with (meaning Starknet “invented” a deposit request), the state update would fail. To initiate a withdraw, a user calls the initiate_withdraw function on the L2 bridge contract, supplying as parameters the recipient address on Ethereum, as well as the amount to transfer. The withdraw function then: Burns the transferred amount of tokens from the balance of the withdrawal’s initiator Sends a message to the relevant L1 bridge with the amount to be transferred, and the recipient address as parameters. As before, since the bridges are token-specific, the token itself is implicit here. Once the sequencer completes the block construction, Starknet’s provers will prove the validity of the block and submit a state update to L1. When this happens, the message from the previous step is stored in the Starknet Core Contract. After the withdraw message has been recorded on the Starknet Core Contract, anyone can finalize the transfer on L1 from the bridge back to the user, by calling the withdraw function (see ERC-20 withdraw and ETH withdraw). This step is permissionless, and may be performed by anyone. Since the user’s address is part of the recorded message on L1, he will be the recepient of the funds, regardless of who called the withdraw function on L1.","title":"StarkGate bridge","component":"documentation","version":"","name":"token-bridge","url":"/documentation/architecture_and_concepts/Network_Architecture/L1-L2_Communication/token-bridge/","titles":[{"text":"StarkGate general architecture","hash":"starkgate_general_architecture","id":1},{"text":"StarkGate Alpha limitations","hash":"starkgate_alpha_limitations","id":2},{"text":"L1→L2 transfer (deposit)","hash":"l1l2_transfer_deposit","id":3},{"text":"Step 1: Call the deposit function on L1","hash":"step_1_call_the_deposit_function_on_l1","id":4},{"text":"Step 2: deposit triggered on Starknet","hash":"step_2_deposit_triggered_on_starknet","id":5},{"text":"Step 3: The block that includes the transfer is proved","hash":"step_3_the_block_that_includes_the_transfer_is_proved","id":6},{"text":"L2→L1 transfer (withdraw)","hash":"l2l1_transfer_withdraw","id":7},{"text":"Step 1: Call the withdraw function on L2","hash":"step_1_call_the_withdraw_function_on_l2","id":8},{"text":"Step 2: The block that includes the transaction is proved","hash":"step_2_the_block_that_includes_the_transaction_is_proved","id":9},{"text":"Step 3: Transfering the funds on L1","hash":"step_3_transfering_the_funds_on_l1","id":10}]},"56":{"id":56,"text":"The state of Starknet consists of: Contract classes: a mapping between class hash and the class definition Contract instances: a mapping between addresses (251-bit field elements) and the contract’s state. A contract state consists of: Class hash: defines the functionality of the contract Contract storage: a key-value mapping where the key/values are field elements Contract nonce: the number of transactions sent from this contract With the above definition, we can provide a brief sketch of Starknet’s transition function. A transaction \\(tx\\) transitions the system from state \\(S\\) to state \\(S'\\) if: \\(tx\\) is an invoke transaction, and the storage of \\(S'\\) is the result of executing the target contract code with respect to the previous state \\(S\\) (the arguments, contract address, and the specific entry point are part of the transaction) \\(tx\\) is a deploy_account transaction, and \\(S'\\) contains the new contract’s state at the contract’s address. Additionally, the storage of \\(S\\) is updated according to the execution of the contract’s constructor. \\(tx\\) is a declare transaction, and \\(S'\\) contains the class hash and definition in the contract classes mapping The state commitment is a digest which uniquely (up to hash collisions) encodes the state. In Starknet, the commitment combines the roots of two binary Merkle-Patricia trees of height 251 in the following manner: state_commitment = ℎ( \"STARKNET_STATE_V0\", contracts_tree_root, classes_tree_root ) Where: \\(h\\) is the Poseidon hash function STARKNET_STATE_V0 is a constant prefix string encoded in ASCII (and represented as a field element). contracts_tree_root is the root of the Merkle-Patricia tree whose leaves are the contracts states, see below classes_tree_root is the root of the Merkle-Patricia tree whose leaves are the compiled class hashes, see below Like Ethereum, this is a 2-level structure where the contract address determines the path from the root to the leaf encoding the contract state. The information stored in the leaf is: \\[h(h(h(\\text{class_hash}, \\text{storage_root}), \\text{nonce}),0)\\] Where: \\(h\\) is the Pedersen hash function. \\(\\text{class_hash}\\) is the hash of the contract’s definition discussed here \\(\\text{storage_root}\\) is the root of another Merkle-Patricia tree of height 251 that is constructed from the contract’s storage \\(\\text{nonce}\\) is the current nonce of the contract The classes tree encodes the information about the existing classes in the state of Starknet. It maps (Cairo 1.0) class hashes to their compiled class hashes. The value of a leaf at a path corresponding to some class hash is given by: ℎ(CONTRACT_CLASS_LEAF_V0, compiled_class_hash) Where: \\(h\\) is the Poseidon hash function CONTRACT_CLASS_LEAF_V0 is a constant prefix string encoded in ASCII (and represented as a field element). compiled_class_hash is the hash of the Cairo assembly resulting from compiling the given class via the Sierra→Casm compiler Cairo 1.0 classes that are part of the commitment are defined with Sierra, an intermediate representation between Cairo 1.0 and Cairo assembly (see here for more information). However, the prover only deals with Cairo assembly. This means that unless we want the compilation from Sierra to Casm to be part of every block in which the class is used, the commitment must have some information about the associated Cairo assembly. Today, the user signs the compiled_class_hash as part of a declare v2 transaction. If the transaction was included in a block, then this compiled_class_hash becomes part of the commitment. In the future, when Sierra→Casm compilation becomes part of the Starknet OS, this value may be updated via a proof of the Sierra→Casm compiler execution, showing that compiling the same class with a newer compiler version results in some new compiled class hash. As mentioned above, our commitment scheme uses a binary Merkle-Patricia tree with the Pedersen hash function. Each node in the tree is represented by a triplet \\((length, path, bottom)\\). The actual data is placed in the leaves, and a leaf node with data \\(x\\) is encoded by the triplet \\((0,0,x)\\). Empty nodes (leaves or internal) are encoded by the zero triplet \\((0,0,0)\\). A subtree rooted at a node \\((length, path, bottom)\\) has a single non-empty subtree, rooted at the node obtained by following the path specified by \\(path\\). \\(path\\) is an integer in \\([0, 2^{length}-1]\\), and the binary expansion of \\(path\\) indicates how should we proceed along the tree, where the first step is indicated by the most significant bit, and \\(0,1\\) are interpreted as left, right correspondingly. The reason that length is specified and cannot be deduced from \\(path\\) is that we’re dealing with field elements of fixed size (251 bits each). For a node with \\(length>0\\), following \\(path\\) leads the highest node whose both right and left child are none empty. The following rules specify how the tree is constructed from a given set of leaves: The hash of a node \\(N =(length, path, bottom)\\), denoted by \\(H(N)\\), is: \\[H(N)=\\begin{cases} bottom, & \\text{if } length = 0 \\\\ h(bottom, path) + length, & \\text{otherwise} \\end{cases}\\] Note that any arithmetic operations in the above are done in our field. We can now proceed to recursively define the nodes in the tree. The triplet represents the parent of the nodes \\(left=(\\ell_L, p_L, b_L)\\), \\(right=(\\ell_R, p_R, b_R)\\) is given by: \\[parent= \\begin{cases} (0,0,0), & \\text{if } left=right=(0,0,0)\\\\ (\\ell_L + 1, p_L, b_L), & \\text{if } right=(0,0,0) \\text{ and } left \\neq (0,0,0)\\\\ (\\ell_R + 1, p_R + 2^{\\ell_R}, b_R), & \\text{if } right\\neq (0,0,0) \\text{ and } left = (0,0,0)\\\\ (0, 0, h(H(left), H(right))), & \\text{otherwise} \\end{cases}\\] We now show an example of the construction of a height 3 Merkle-Patricia tree from the leaves \\([0,0,1,0,0,1,0,0]\\): Where \\(r=h(H(2,2,1),H((2,1,1))\\). Note that in our example there is no skipping from the root (length is zero), so the final commitment to the tree will be \\(H((0,0,r))=r\\). Suppose that we want to prove, with respect to the commitment we have just computed, that the value of the leaf whose path is given by \\(101\\) is \\(1\\). In a standard Merkle tree, the proof would have consisted of data from three nodes (siblings along the path to the root). Here, since the tree is sparse, we only need to send the two children of the root \\((2,2,1), (2,1,1)\\). This suffices to reproduce the commitment \\(r\\), and since the height of the tree, \\(3\\), is known and fixed, we know that the path \\(01\\) of length \\(2\\) specified by the right child \\((2,1,1)\\) leads us to the desired leaf.","title":"Starknet state","component":"documentation","version":"","name":"starknet-state","url":"/documentation/architecture_and_concepts/Network_Architecture/State/starknet-state/","titles":[{"text":"State commitment","hash":"state_commitment","id":1},{"text":"The contracts tree","hash":"contracts_tree","id":2},{"text":"The classes tree","hash":"classes_tree","id":3},{"text":"Merkle-Patricia tree","hash":"merkle_patricia_tree","id":4},{"text":"Specifications","hash":"specifications","id":5},{"text":"Example trie","hash":"example_trie","id":6}]},"57":{"id":57,"text":"A contract may emit events throughout its execution. Each event contains the following fields: from_address: address of the contract emitting the events keys: a list of field elements data: a list of field elements The keys can be used for indexing the events, while the data may contain any information that we wish to log (note that we are dealing with two separate lists of possibly varying size, rather than a list of key-value pairs). Events can be defined in a contract using the @event decorator. Once an event E has been defined, the compiler automatically adds the function E.emit(). The following example illustrates how an event is defined and emitted: Cairo 1.0 Cairo 0 #[event] fn Transfer(from: ContractAddress, to: ContractAddress, value: u256) {} @event func message_received(a : felt, b: felt): end Cairo 1.0 Cairo 0 Transfer(12345, 12345, 1) message_received.emit(1, 2); The emit function emits an event with a single key, which is an identifier of the event, given by \\(\\text{sn_keccak(event_name)}\\), where \\(\\text{event_name}\\) is the ASCII encoding of the event’s name and \\(\\text{sn_keccak}\\) is defined here. To emit custom keys, one should use the low level emit_event system call: Cairo 1.0 Cairo 0 use starknet::syscalls::emit_event_syscall; let keys = ArrayTrait::new(); keys.append('key'); keys.append('deposit'); let values = ArrayTrait::new(); values.append(1); values.append(2); values.append(3); emit_event_syscall(keys, values).unwrap_syscall(); from starkware.starknet.common.syscalls import emit_event # ... let (keys : felt*) = alloc() assert keys[0] = 'status' assert keys[1] = 'deposit' let (data : felt*) = alloc() assert data[0] = 1 assert data[1] = 2 assert data[2] = 3 emit_event(2, keys, 3, data) The above code emits an event with two keys, the strings \"status\" and \"deposit\" (think of those as identifiers of the event that can be used for indexing) and three data elments 1, 2, 3. When using the higher level emit syntax, the event’s data may be of complex types, for example: struct Point: member x : felt member y : felt end @event func message_received(arr_len : felt, arr: felt*, p: Point): end # ... let (data : felt*) = alloc() assert data[0] = 1 assert data[1] = 2 let p = Point(3,4) message_received.emit(2, data, p) The emitted events are part of the transaction receipt. The event definition appears in the contract’s ABI. It contains the list of data fields (name and type) and the list of the custom keys (that is, all keys except the event identifier discussed above). Below is an example of an event inside the ABI: Cairo 1.0 Cairo 0 { \"type\": \"event\", \"name\": \"Transfer\", \"inputs\": [ { \"name\": \"from\", \"type\": \"core::starknet::contract_address::ContractAddress\" }, { \"name\": \"to\", \"type\": \"core::starknet::contract_address::ContractAddress\" }, { \"name\": \"value\", \"type\": \"core::integer::u256\" } ] } { \"data\": [ { \"name\": \"a\", \"type\": \"felt\" }, { \"name\": \"b\", \"type\": \"felt\" } ], \"keys\": [], \"name\": \"message_received\", \"type\": \"event\" } The event hash is given by: \\[h(h(h(h(0,\\text{from_address}),\\text{keys_hash}),\\text{data_hash}),3)\\] Where: \\(\\text{keys_hash}\\), \\(\\text{data_hash}\\) are the hashes of the keys list and data list correspondingly (see array hashing). \\(h\\) is the Pedersen hash function. The event hashes are included in the event_commitment field of a block.","title":"Starknet events","component":"documentation","version":"","name":"starknet-events","url":"/documentation/architecture_and_concepts/Smart_Contracts/Events/starknet-events/","titles":[{"text":"Emitting events","hash":"emitting_events","id":1},{"text":"Event ABI","hash":"event_abi","id":2},{"text":"Event hash","hash":"event_hash","id":3}]}},"components":{},"componentVersions":{"documentation/":{"displayVersion":"default","title":"Starknet","version":"","name":"documentation","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Starknet documentation","site-url":"https://docs.starknet.io/","idprefix":"","stem":"latexmath","page-pagination":"","experimental":""},"sourcemap":false,"extensions":[{}]},"url":"/documentation/","navigation":[{"items":[{"content":"Introduction","url":"/documentation/","urlType":"internal"}],"root":true,"order":0},{"items":[{"content":"Quick start","items":[{"content":"Setting up your environment","url":"/documentation/quick_start/environment_setup/","urlType":"internal"},{"content":"Setting up your account","url":"/documentation/quick_start/account_setup/","urlType":"internal","items":[{"content":"Introduction","url":"/documentation/quick_start/account_setup/#introduction","urlType":"internal","hash":"#introduction"},{"content":"Setting up the network","url":"/documentation/quick_start/account_setup/#setting-up-the-network","urlType":"internal","hash":"#setting-up-the-network"},{"content":"Choosing a wallet provider","url":"/documentation/quick_start/account_setup/#choosing-a-wallet-provider","urlType":"internal","hash":"#choosing-a-wallet-provider"},{"content":"Creating an account","url":"/documentation/quick_start/account_setup/#creating-an-account","urlType":"internal","hash":"#creating-an-account"},{"content":"Transferring Goerli ETH to the account","url":"/documentation/quick_start/account_setup/#transferring-goerli-eth-to-the-account","urlType":"internal","hash":"#transferring-goerli-eth-to-the-account"},{"content":"Simulate account deployment","url":"/documentation/quick_start/account_setup/#simulate-account-deployment","urlType":"internal","hash":"#simulate-account-deployment"},{"content":"Deploying an account","url":"/documentation/quick_start/account_setup/#deploying-an-account","urlType":"internal","hash":"#deploying-an-account"}]},{"content":"The Starknet book","url":"/documentation/quick_start/starknet-book/","urlType":"internal"}]}],"root":true,"order":1},{"items":[{"content":"Versions","items":[{"content":"Starknet version notes","url":"/documentation/starknet_versions/version_notes/","urlType":"internal"},{"content":"Upcoming Starknet versions","url":"/documentation/starknet_versions/upcoming_versions/","urlType":"internal"},{"content":"Juno version notes","url":"/documentation/starknet_versions/juno_versions/","urlType":"internal"},{"content":"Pathfinder version notes","url":"/documentation/starknet_versions/pathfinder_versions/","urlType":"internal"},{"content":"Current limits and triggers","url":"/documentation/starknet_versions/limits_and_triggers/","urlType":"internal"},{"content":"Important addresses","url":"/documentation/starknet_versions/important_addresses/","urlType":"internal"},{"content":"Deprecated &amp; removed features","url":"/documentation/starknet_versions/deprecated/","urlType":"internal"}]}],"root":true,"order":2},{"items":[{"content":"Architecture","items":[{"content":"Network architecture","items":[{"content":"Blocks and transactions","items":[{"content":"Block structure","url":"/documentation/architecture_and_concepts/Network_Architecture/Blocks/header/","urlType":"internal"},{"content":"Transaction lifecycle","url":"/documentation/architecture_and_concepts/Network_Architecture/Blocks/transaction-life-cycle/","urlType":"internal"},{"content":"Transaction types","url":"/documentation/architecture_and_concepts/Network_Architecture/Blocks/transactions/","urlType":"internal"}]},{"content":"Starknet state","url":"/documentation/architecture_and_concepts/Network_Architecture/State/starknet-state/","urlType":"internal"},{"content":"Data availability","url":"/documentation/architecture_and_concepts/Network_Architecture/Data_Availability/on-chain-data/","urlType":"internal"},{"content":"Gas and transaction fees","url":"/documentation/architecture_and_concepts/Network_Architecture/Fees/fee-mechanism/","urlType":"internal"},{"content":"L1-L2 messaging","items":[{"content":"L1-L2 messaging","url":"/documentation/architecture_and_concepts/Network_Architecture/L1-L2_Communication/messaging-mechanism/","urlType":"internal"},{"content":"Starkgate bridge","url":"/documentation/architecture_and_concepts/Network_Architecture/L1-L2_Communication/token-bridge/","urlType":"internal"}]},{"content":"Oracles","url":"/documentation/architecture_and_concepts/Network_Architecture/oracles/","urlType":"internal"},{"content":"Storage proofs","url":"/documentation/architecture_and_concepts/Network_Architecture/storage-proofs/","urlType":"internal"}]},{"content":"Accounts","items":[{"content":"Introduction to account abstraction","url":"/documentation/architecture_and_concepts/Accounts/introduction/","urlType":"internal"},{"content":"Starknet account structure","url":"/documentation/architecture_and_concepts/Accounts/approach/","urlType":"internal"},{"content":"Validate and execute","url":"/documentation/architecture_and_concepts/Accounts/validate_and_execute/","urlType":"internal"},{"content":"Deploying new accounts","url":"/documentation/architecture_and_concepts/Accounts/deploying_new_accounts/","urlType":"internal"},{"content":"Simplified transaction flow","url":"/documentation/architecture_and_concepts/Accounts/simplified_transaction_flow/","urlType":"internal"}]},{"content":"Smart contracts","items":[{"content":"Contract classes","url":"/documentation/architecture_and_concepts/Smart_Contracts/contract-classes/","urlType":"internal"},{"content":"Contract address","url":"/documentation/architecture_and_concepts/Smart_Contracts/contract-address/","urlType":"internal"},{"content":"Contract storage","url":"/documentation/architecture_and_concepts/Smart_Contracts/contract-storage/","urlType":"internal"},{"content":"Contract ABI","url":"/documentation/architecture_and_concepts/Smart_Contracts/contract-abi/","urlType":"internal"},{"content":"Class hash","url":"/documentation/architecture_and_concepts/Smart_Contracts/class-hash/","urlType":"internal"},{"content":"Sys calls: Cairo 0","url":"/documentation/architecture_and_concepts/Smart_Contracts/system-calls-cairo0/","urlType":"internal"},{"content":"Sys calls: Cairo 1.0","url":"/documentation/architecture_and_concepts/Smart_Contracts/system-calls-cairo1/","urlType":"internal"},{"content":"Events","url":"/documentation/architecture_and_concepts/Smart_Contracts/Events/starknet-events/","urlType":"internal"}]},{"content":"Cryptography","items":[{"content":"Field element type","url":"/documentation/architecture_and_concepts/Cryptography/p-value/","urlType":"internal"},{"content":"Stark curve","url":"/documentation/architecture_and_concepts/Cryptography/stark-curve/","urlType":"internal"},{"content":"Hash functions","url":"/documentation/architecture_and_concepts/Cryptography/hash-functions/","urlType":"internal"}]}]}],"root":true,"order":3},{"items":[{"content":"Command line interface","items":[{"content":"Starkli CLI (recommended)","url":"/documentation/cli/starkli/","urlType":"internal"},{"content":"Starknet CLI reference (deprecated)","url":"/documentation/cli/commands/","urlType":"internal"},{"content":"Compiler CLI reference","url":"/documentation/cli/starknet-compiler-options/","urlType":"internal"}]}],"root":true,"order":5},{"items":[{"content":"Developer tools &amp; resources","items":[{"content":"Audit providers","url":"/documentation/tools/audit/","urlType":"internal"},{"content":"Block explorers","url":"/documentation/tools/ref_block_explorers/","urlType":"internal"},{"content":"Full-nodes &amp; API services","url":"/documentation/tools/api-services/","urlType":"internal"},{"content":"The Starknet book","url":"https://book.starknet.io/","urlType":"external"}]}],"root":true,"order":6}]}}}})